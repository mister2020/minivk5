{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"width\", \"maxWidth\", \"minWidth\", \"spaced\", \"animate\", \"fixed\", \"style\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from 'react';\nimport { classNames } from \"../../lib/classNames\";\nexport var SplitColContext = /*#__PURE__*/React.createContext({\n  colRef: null,\n  animate: true\n});\nexport var SplitCol = function SplitCol(props) {\n  var children = props.children,\n      width = props.width,\n      maxWidth = props.maxWidth,\n      minWidth = props.minWidth,\n      spaced = props.spaced,\n      animate = props.animate,\n      fixed = props.fixed,\n      style = props.style,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var baseRef = React.useRef();\n  var contextValue = React.useMemo(function () {\n    return {\n      colRef: baseRef,\n      animate: animate\n    };\n  }, [baseRef, animate]);\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      width: width,\n      maxWidth: maxWidth,\n      minWidth: minWidth\n    }),\n    ref: baseRef,\n    vkuiClass: classNames('SplitCol', {\n      'SplitCol--spaced': spaced,\n      'SplitCol--fixed': fixed\n    })\n  }), createScopedElement(SplitColContext.Provider, {\n    value: contextValue\n  }, fixed ? createScopedElement(\"div\", {\n    vkuiClass: \"SplitCol__fixedInner\"\n  }, children) : children));\n};\nSplitCol.defaultProps = {\n  animate: false\n};","map":{"version":3,"sources":["../../../src/components/SplitCol/SplitCol.tsx"],"names":["SplitColContext","colRef","animate","SplitCol","children","width","maxWidth","minWidth","spaced","fixed","style","restProps","props","baseRef","React","contextValue","classNames"],"mappings":";;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AAQA,OAAO,IAAMA,eAAe,GAAA,aAAG,KAAK,CAAL,aAAA,CAA0C;AACvEC,EAAAA,MAAM,EADiE,IAAA;AAEvEC,EAAAA,OAAO,EAAE;AAF8D,CAA1C,CAAxB;AAoBP,OAAO,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,CAAA,KAAA,EAA0B;AACzE,MAAQC,QAAR,GAA6FQ,KAA7F,CAAA,QAAA;AAAA,MAAkBP,KAAlB,GAA6FO,KAA7F,CAAA,KAAA;AAAA,MAAyBN,QAAzB,GAA6FM,KAA7F,CAAA,QAAA;AAAA,MAAmCL,QAAnC,GAA6FK,KAA7F,CAAA,QAAA;AAAA,MAA6CJ,MAA7C,GAA6FI,KAA7F,CAAA,MAAA;AAAA,MAAqDV,OAArD,GAA6FU,KAA7F,CAAA,OAAA;AAAA,MAA8DH,KAA9D,GAA6FG,KAA7F,CAAA,KAAA;AAAA,MAAqEF,KAArE,GAA6FE,KAA7F,CAAA,KAAA;AAAA,MAA+ED,SAA/E,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;AACA,MAAME,OAAO,GAAGC,KAAK,CAArB,MAAgBA,EAAhB;AAEA,MAAMC,YAAY,GAAG,KAAK,CAAL,OAAA,CAAc,YAAM;AACvC,WAAO;AACLd,MAAAA,MAAM,EADD,OAAA;AAELC,MAAAA,OAAO,EAAPA;AAFK,KAAP;AADmB,GAAA,EAKlB,CAAA,OAAA,EALH,OAKG,CALkB,CAArB;AAOA,SACE,mBAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,KAAK,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA;AAEHG,MAAAA,KAAK,EAFF,KAAA;AAGHC,MAAAA,QAAQ,EAHL,QAAA;AAIHC,MAAAA,QAAQ,EAAEA;AAJP,KAAA,CAFP;AAQE,IAAA,GAAG,EARL,OAAA;AASE,IAAA,SAAS,EAAES,UAAU,CAAA,UAAA,EAAa;AAChC,0BADgC,MAAA;AAEhC,yBAAmBP;AAFa,KAAb;AATvB,GAAA,CAAA,EAcE,mBAAA,CAAC,eAAD,CAAA,QAAA,EAAA;AAA0B,IAAA,KAAK,EAAEM;AAAjC,GAAA,EACGN,KAAK,GAAG,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAH,QAAG,CAAH,GAhBZ,QAeI,CAdF,CADF;AAXK,CAAA;AAiCPN,QAAQ,CAARA,YAAAA,GAAwB;AACtBD,EAAAA,OAAO,EAAE;AADa,CAAxBC","sourcesContent":["import * as React from 'react';\nimport { classNames } from '../../lib/classNames';\nimport './SplitCol.css';\n\nexport interface SplitColContextProps {\n  colRef: React.RefObject<HTMLDivElement>;\n  animate: boolean;\n}\n\nexport const SplitColContext = React.createContext<SplitColContextProps>({\n  colRef: null,\n  animate: true,\n});\n\nexport interface SplitColProps extends React.HTMLAttributes<HTMLDivElement> {\n  width?: string;\n  maxWidth?: string;\n  minWidth?: string;\n  /**\n   * Если false, то переходы между Panel происходят без анимации\n   */\n  animate?: boolean;\n  /**\n   * Если true, то добавляются боковые отступы фиксированной величины\n   */\n  spaced?: boolean;\n  fixed?: boolean;\n}\n\nexport const SplitCol: React.FC<SplitColProps> = (props: SplitColProps) => {\n  const { children, width, maxWidth, minWidth, spaced, animate, fixed, style, ...restProps } = props;\n  const baseRef = React.useRef<HTMLDivElement>();\n\n  const contextValue = React.useMemo(() => {\n    return {\n      colRef: baseRef,\n      animate,\n    };\n  }, [baseRef, animate]);\n\n  return (\n    <div\n      {...restProps}\n      style={{\n        ...style,\n        width: width,\n        maxWidth: maxWidth,\n        minWidth: minWidth,\n      }}\n      ref={baseRef}\n      vkuiClass={classNames('SplitCol', {\n        'SplitCol--spaced': spaced,\n        'SplitCol--fixed': fixed,\n      })}\n    >\n      <SplitColContext.Provider value={contextValue}>\n        {fixed ? <div vkuiClass=\"SplitCol__fixedInner\">{children}</div> : children}\n      </SplitColContext.Provider>\n    </div>\n  );\n};\n\nSplitCol.defaultProps = {\n  animate: false,\n};\n"]},"metadata":{},"sourceType":"module"}