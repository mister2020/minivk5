{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"platform\"],\n    _excluded2 = [\"mode\", \"size\", \"children\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from 'react';\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport Caption from \"../Typography/Caption/Caption\";\nimport Text from \"../Typography/Text/Text\";\nimport { VKCOM } from \"../../lib/platform\";\nimport { hasReactNode } from \"../../lib/utils\";\n\nvar CounterTypography = function CounterTypography(_ref) {\n  var size = _ref.size,\n      platform = _ref.platform,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  return size === 's' ? createScopedElement(Caption, _extends({\n    level: \"2\",\n    weight: platform === VKCOM ? 'medium' : 'regular'\n  }, restProps)) : createScopedElement(Text, _extends({\n    weight: \"medium\"\n  }, restProps));\n};\n\nvar Counter = function Counter(props) {\n  var mode = props.mode,\n      size = props.size,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, _excluded2);\n\n  var platform = usePlatform();\n\n  if (React.Children.count(children) === 0) {\n    return null;\n  }\n\n  return createScopedElement(\"span\", _extends({}, restProps, {\n    vkuiClass: classNames(getClassName('Counter', platform), \"Counter--\".concat(mode), \"Counter--s-\".concat(size))\n  }), hasReactNode(children) && createScopedElement(CounterTypography, {\n    platform: platform,\n    size: size,\n    vkuiClass: \"Counter__in\"\n  }, children));\n};\n\nCounter.defaultProps = {\n  mode: 'secondary',\n  size: 'm'\n};\nexport default /*#__PURE__*/React.memo(Counter);","map":{"version":3,"sources":["../../../src/components/Counter/Counter.tsx"],"names":["CounterTypography","size","platform","restProps","Counter","mode","children","props","usePlatform","React","classNames","getClassName","hasReactNode"],"mappings":";;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,OAAA,OAAA,MAAA,+BAAA;AACA,OAAA,IAAA,MAAA,yBAAA;AACA,SAAA,KAAA,QAAA,oBAAA;AACA,SAAA,YAAA,QAAA,iBAAA;;AAcA,IAAMA,iBAAmD,GAAG,SAAtDA,iBAAsD,CAAA,IAAA,EAAsC;AAAA,MAAnCC,IAAmC,GAAA,IAAA,CAAnCA,IAAmC;AAAA,MAA7BC,QAA6B,GAAA,IAAA,CAA7BA,QAA6B;AAAA,MAAhBC,SAAgB,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AAChG,SAAOF,IAAI,KAAJA,GAAAA,GACH,mBAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AAAS,IAAA,KAAK,EAAd,GAAA;AAAmB,IAAA,MAAM,EAAEC,QAAQ,KAARA,KAAAA,GAAAA,QAAAA,GAAgC;AAA3D,GAAA,EADGD,SACH,CAAA,CADGA,GAEH,mBAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AAAM,IAAA,MAAM,EAAC;AAAb,GAAA,EAFJ,SAEI,CAAA,CAFJ;AADF,CAAA;;AAMA,IAAMG,OAA+B,GAAG,SAAlCA,OAAkC,CAAA,KAAA,EAAyB;AAC/D,MAAQC,IAAR,GAA+CE,KAA/C,CAAA,IAAA;AAAA,MAAcN,IAAd,GAA+CM,KAA/C,CAAA,IAAA;AAAA,MAAoBD,QAApB,GAA+CC,KAA/C,CAAA,QAAA;AAAA,MAAiCJ,SAAjC,GAAA,wBAAA,CAAA,KAAA,EAAA,UAAA,CAAA;;AACA,MAAMD,QAAQ,GAAGM,WAAjB,EAAA;;AAEA,MAAIC,KAAK,CAALA,QAAAA,CAAAA,KAAAA,CAAAA,QAAAA,MAAJ,CAAA,EAA0C;AACxC,WAAA,IAAA;AACD;;AAED,SACE,mBAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EAAEC,UAAU,CACnBC,YAAY,CAAA,SAAA,EADO,QACP,CADO,EAAA,YAAA,MAAA,CAAA,IAAA,CAAA,EAAA,cAAA,MAAA,CAAA,IAAA,CAAA;AAFvB,GAAA,CAAA,EAQGC,YAAY,CAAZA,QAAY,CAAZA,IAA0B,mBAAA,CAAA,iBAAA,EAAA;AAAmB,IAAA,QAAQ,EAA3B,QAAA;AAAuC,IAAA,IAAI,EAA3C,IAAA;AAAmD,IAAA,SAAS,EAAC;AAA7D,GAAA,EAT/B,QAS+B,CAR7B,CADF;AARF,CAAA;;AAsBAR,OAAO,CAAPA,YAAAA,GAAuB;AACrBC,EAAAA,IAAI,EADiB,WAAA;AAErBJ,EAAAA,IAAI,EAAE;AAFe,CAAvBG;AAKA,eAAA,aAAeK,KAAK,CAALA,IAAAA,CAAf,OAAeA,CAAf","sourcesContent":["import * as React from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Caption from '../Typography/Caption/Caption';\nimport Text from '../Typography/Text/Text';\nimport { VKCOM } from '../../lib/platform';\nimport { hasReactNode } from '../../lib/utils';\nimport { HasPlatform } from '../../types';\nimport './Counter.css';\n\nexport interface CounterProps extends React.HTMLAttributes<HTMLSpanElement> {\n  /**\n   * Тип счетчика. При использовании компонента в качестве значения свойства `after` у `Button` эти значения игнорируются\n   */\n  mode?: 'secondary' | 'primary' | 'prominent';\n  size?: 's' | 'm';\n}\n\ntype CounterTypographyProps = Pick<CounterProps, 'size'> & HasPlatform & { Component?: React.ElementType };\n\nconst CounterTypography: React.FC<CounterTypographyProps> = ({ size, platform, ...restProps }) => {\n  return size === 's'\n    ? <Caption level=\"2\" weight={platform === VKCOM ? 'medium' : 'regular'} {...restProps} />\n    : <Text weight=\"medium\" {...restProps} />;\n};\n\nconst Counter: React.FC<CounterProps> = (props: CounterProps) => {\n  const { mode, size, children, ...restProps } = props;\n  const platform = usePlatform();\n\n  if (React.Children.count(children) === 0) {\n    return null;\n  }\n\n  return (\n    <span\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName('Counter', platform),\n        `Counter--${mode}`,\n        `Counter--s-${size}`,\n      )}\n    >\n      {hasReactNode(children) && <CounterTypography platform={platform} size={size} vkuiClass=\"Counter__in\">{children}</CounterTypography>}\n    </span>\n  );\n};\n\nCounter.defaultProps = {\n  mode: 'secondary',\n  size: 'm',\n};\n\nexport default React.memo(Counter);\n"]},"metadata":{},"sourceType":"module"}