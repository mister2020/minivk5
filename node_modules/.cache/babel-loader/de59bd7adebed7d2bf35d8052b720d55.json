{"ast":null,"code":"import { createScopedElement } from \"./jsxRuntime\";\nimport * as React from 'react';\nimport { platform } from \"./platform\";\nimport { computeBrowserInfo } from \"./browser\";\nimport { DOMContext, getDOM } from \"../lib/dom\";\nexport var SSRContext = /*#__PURE__*/React.createContext({\n  platform: null,\n  userAgent: '',\n  browserInfo: undefined\n});\nexport var SSRWrapper = function SSRWrapper(props) {\n  var userAgent = props.userAgent,\n      browserInfo = props.browserInfo,\n      children = props.children;\n\n  if (!browserInfo && userAgent) {\n    browserInfo = computeBrowserInfo(userAgent);\n  } // TODO: Каждый раз создаётся новый объект для контекста – плохо\n\n\n  var contextValue = {\n    platform: platform(browserInfo),\n    browserInfo: browserInfo,\n    userAgent: userAgent\n  }; // TODO: move to state, and update in effect?\n\n  var dom = getDOM();\n  return createScopedElement(SSRContext.Provider, {\n    value: contextValue\n  }, createScopedElement(DOMContext.Provider, {\n    value: dom\n  }, children));\n};","map":{"version":3,"sources":["../../src/lib/SSR.tsx"],"names":["SSRContext","platform","userAgent","browserInfo","undefined","SSRWrapper","children","props","computeBrowserInfo","contextValue","dom","getDOM"],"mappings":";AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,QAAA,YAAA;AACA,SAAA,kBAAA,QAAA,WAAA;AACA,SAAA,UAAA,EAAA,MAAA,QAAA,YAAA;AAQA,OAAO,IAAMA,UAAU,GAAA,aAAG,KAAK,CAAL,aAAA,CAAyC;AACjEC,EAAAA,QAAQ,EADyD,IAAA;AAEjEC,EAAAA,SAAS,EAFwD,EAAA;AAGjEC,EAAAA,WAAW,EAAEC;AAHoD,CAAzC,CAAnB;AAWP,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,CAAA,KAAA,EAAW;AAC9D,MAAMH,SAAN,GAA2CK,KAA3C,CAAA,SAAA;AAAA,MAAiBJ,WAAjB,GAA2CI,KAA3C,CAAA,WAAA;AAAA,MAA8BD,QAA9B,GAA2CC,KAA3C,CAAA,QAAA;;AAEA,MAAI,CAAA,WAAA,IAAJ,SAAA,EAA+B;AAC7BJ,IAAAA,WAAW,GAAGK,kBAAkB,CAAhCL,SAAgC,CAAhCA;AAJ4D,GAAA,CAO9D;;;AACA,MAAMM,YAAY,GAAG;AACnBR,IAAAA,QAAQ,EAAEA,QAAQ,CADC,WACD,CADC;AAEnBE,IAAAA,WAAW,EAFQ,WAAA;AAGnBD,IAAAA,SAAS,EAATA;AAHmB,GAArB,CAR8D,CAc9D;;AACA,MAAMQ,GAAG,GAAGC,MAAZ,EAAA;AAEA,SACE,mBAAA,CAAC,UAAD,CAAA,QAAA,EAAA;AAAqB,IAAA,KAAK,EAAEF;AAA5B,GAAA,EACE,mBAAA,CAAC,UAAD,CAAA,QAAA,EAAA;AAAqB,IAAA,KAAK,EAAEC;AAA5B,GAAA,EAFJ,QAEI,CADF,CADF;AAjBK,CAAA","sourcesContent":["import * as React from 'react';\nimport { PlatformType, platform } from './platform';\nimport { BrowserInfo, computeBrowserInfo } from './browser';\nimport { DOMContext, getDOM } from '../lib/dom';\n\nexport interface SSRContextInterface {\n  platform: PlatformType;\n  userAgent?: string;\n  browserInfo?: BrowserInfo;\n}\n\nexport const SSRContext = React.createContext<SSRContextInterface>({\n  platform: null,\n  userAgent: '',\n  browserInfo: undefined,\n});\n\nexport interface SSRWrapperProps {\n  userAgent?: string;\n  browserInfo?: BrowserInfo;\n}\n\nexport const SSRWrapper: React.FC<SSRWrapperProps> = (props) => {\n  let { userAgent, browserInfo, children } = props;\n\n  if (!browserInfo && userAgent) {\n    browserInfo = computeBrowserInfo(userAgent);\n  }\n\n  // TODO: Каждый раз создаётся новый объект для контекста – плохо\n  const contextValue = {\n    platform: platform(browserInfo),\n    browserInfo,\n    userAgent,\n  };\n\n  // TODO: move to state, and update in effect?\n  const dom = getDOM();\n\n  return (\n    <SSRContext.Provider value={contextValue}>\n      <DOMContext.Provider value={dom}>\n        {children}\n      </DOMContext.Provider>\n    </SSRContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}