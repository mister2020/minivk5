{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"top\", \"bottom\", \"status\", \"Component\", \"removable\", \"onRemove\", \"removePlaceholder\", \"getRootRef\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from 'react';\nimport { classNames } from \"../../lib/classNames\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport Caption from \"../Typography/Caption/Caption\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { Removable } from \"../Removable/Removable\";\nexport var FormItem = function FormItem(_ref) {\n  var children = _ref.children,\n      top = _ref.top,\n      bottom = _ref.bottom,\n      _ref$status = _ref.status,\n      status = _ref$status === void 0 ? 'default' : _ref$status,\n      _ref$Component = _ref.Component,\n      Component = _ref$Component === void 0 ? 'div' : _ref$Component,\n      removable = _ref.removable,\n      _onRemove = _ref.onRemove,\n      _ref$removePlaceholde = _ref.removePlaceholder,\n      removePlaceholder = _ref$removePlaceholde === void 0 ? 'Удалить' : _ref$removePlaceholde,\n      getRootRef = _ref.getRootRef,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var platform = usePlatform();\n  var rootEl = useExternRef(getRootRef);\n\n  var _useAdaptivity = useAdaptivity(),\n      sizeY = _useAdaptivity.sizeY;\n\n  var wrappedChildren = createScopedElement(React.Fragment, null, hasReactNode(top) && createScopedElement(Subhead, {\n    weight: \"regular\",\n    vkuiClass: \"FormItem__top\"\n  }, top), children, hasReactNode(bottom) && createScopedElement(Caption, {\n    level: \"1\",\n    weight: \"regular\",\n    vkuiClass: \"FormItem__bottom\"\n  }, bottom));\n  return createScopedElement(Component, _extends({}, restProps, {\n    ref: rootEl,\n    vkuiClass: classNames(getClassName('FormItem', platform), \"FormItem--\".concat(status), \"FormItem--sizeY-\".concat(sizeY), {\n      'FormItem--withTop': hasReactNode(top),\n      'FormItem--removable': removable\n    })\n  }), removable ? createScopedElement(Removable, {\n    align: \"start\",\n    onRemove: function onRemove(e) {\n      return _onRemove(e, rootEl === null || rootEl === void 0 ? void 0 : rootEl.current);\n    },\n    removePlaceholder: removePlaceholder\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"FormItem__removable\"\n  }, wrappedChildren)) : wrappedChildren);\n};","map":{"version":3,"sources":["../../../src/components/FormItem/FormItem.tsx"],"names":["FormItem","children","top","bottom","status","Component","removable","onRemove","removePlaceholder","getRootRef","restProps","platform","usePlatform","rootEl","useExternRef","sizeY","useAdaptivity","wrappedChildren","hasReactNode","classNames","getClassName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { HasRootRef } from '../../types';\nimport { classNames } from '../../lib/classNames';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getClassName } from '../../helpers/getClassName';\nimport { hasReactNode } from '../../lib/utils';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport Caption from '../Typography/Caption/Caption';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { Removable, RemovableProps } from '../Removable/Removable';\nimport './FormItem.css';\n\nexport interface FormItemProps extends React.AllHTMLAttributes<HTMLElement>, RemovableProps, HasRootRef<HTMLElement> {\n  top?: React.ReactNode;\n  bottom?: React.ReactNode;\n  status?: 'default' | 'error' | 'valid';\n  Component?: React.ElementType;\n  /**\n   * Дает возможность удалить `FormItem`. Рекомендуется использовать только для `Input` или `Select`.\n   */\n  removable?: boolean;\n}\n\nexport const FormItem: React.FC<FormItemProps> = ({\n  children,\n  top,\n  bottom,\n  status = 'default',\n  Component = 'div',\n  removable,\n  onRemove,\n  removePlaceholder = 'Удалить',\n  getRootRef,\n  ...restProps\n}: FormItemProps) => {\n  const platform = usePlatform();\n  const rootEl = useExternRef(getRootRef);\n  const { sizeY } = useAdaptivity();\n\n  const wrappedChildren = (\n    <React.Fragment>\n      {hasReactNode(top) && <Subhead weight=\"regular\" vkuiClass=\"FormItem__top\">{top}</Subhead>}\n      {children}\n      {hasReactNode(bottom) && <Caption level=\"1\" weight=\"regular\" vkuiClass=\"FormItem__bottom\">{bottom}</Caption>}\n    </React.Fragment>\n  );\n\n  return (\n    <Component\n      {...restProps}\n      ref={rootEl}\n      vkuiClass={classNames(\n        getClassName('FormItem', platform),\n        `FormItem--${status}`,\n        `FormItem--sizeY-${sizeY}`,\n        {\n          'FormItem--withTop': hasReactNode(top),\n          'FormItem--removable': removable,\n        },\n      )}\n    >\n      {removable ? (\n        <Removable align=\"start\" onRemove={(e) => onRemove(e, rootEl?.current)} removePlaceholder={removePlaceholder}>\n          <div vkuiClass=\"FormItem__removable\">\n            {wrappedChildren}\n          </div>\n        </Removable>\n      ) : wrappedChildren}\n    </Component>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}