{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"children\", \"slideWidth\", \"slideIndex\", \"isDraggable\", \"onDragStart\", \"onDragEnd\", \"onChange\", \"onEnd\", \"align\", \"bullets\", \"platform\", \"hasMouse\", \"showArrows\", \"window\", \"document\", \"getRef\", \"getRootRef\"],\n    _excluded2 = [\"initialSlideIndex\", \"children\", \"timeout\", \"onChange\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from 'react';\nimport { getClassName } from \"../../helpers/getClassName\";\nimport Touch from \"../Touch/Touch\";\nimport { classNames } from \"../../lib/classNames\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withDOM } from \"../../lib/dom\";\nimport { setRef } from \"../../lib/utils\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport HorizontalScrollArrow from \"../HorizontalScroll/HorizontalScrollArrow\";\nimport { clamp } from \"../../helpers/math\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\n\nvar BaseGallery = /*#__PURE__*/function (_React$Component) {\n  _inherits(BaseGallery, _React$Component);\n\n  var _super = _createSuper(BaseGallery);\n\n  function BaseGallery(props) {\n    var _this;\n\n    _classCallCheck(this, BaseGallery);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"slidesStore\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"viewport\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onStart\", function (e) {\n      _this.setState({\n        animation: false,\n        startT: e.startT\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMoveX\", function (e) {\n      if (_this.props.isDraggable && !_this.isFullyVisible) {\n        e.originalEvent.preventDefault();\n\n        if (e.isSlideX) {\n          _this.props.onDragStart && _this.props.onDragStart(e);\n\n          if (_this.state.deltaX !== e.shiftX || _this.state.dragging !== e.isSlideX) {\n            _this.setState({\n              deltaX: e.shiftX,\n              dragging: e.isSlideX\n            });\n          }\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function (e) {\n      var targetIndex = e.isSlide ? _this.getTarget() : _this.props.slideIndex;\n      _this.props.onDragEnd && _this.props.onDragEnd(e);\n\n      _this.setState({\n        deltaX: 0,\n        animation: true\n      }, function () {\n        return _this.props.onChange(targetIndex);\n      });\n\n      if (_this.props.onEnd) {\n        _this.props.onEnd({\n          targetIndex: targetIndex\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onResize\", function () {\n      return _this.initializeSlides({\n        animation: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slideLeft\", function () {\n      var _this$props = _this.props,\n          slideIndex = _this$props.slideIndex,\n          onChange = _this$props.onChange;\n\n      if (_this.canSlideLeft) {\n        _this.setState({\n          deltaX: 0,\n          animation: true\n        }, function () {\n          return onChange(slideIndex - 1);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slideRight\", function () {\n      var _this$props2 = _this.props,\n          slideIndex = _this$props2.slideIndex,\n          onChange = _this$props2.onChange;\n\n      if (_this.canSlideRight) {\n        _this.setState({\n          deltaX: 0,\n          animation: true\n        }, function () {\n          return onChange(slideIndex + 1);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getSlideRef\", function (id) {\n      return function (slide) {\n        _this.slidesStore[\"slide-\".concat(id)] = slide;\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getViewportRef\", function (viewport) {\n      _this.viewport = viewport;\n      setRef(viewport, _this.props.getRef);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRootRef\", function (container) {\n      _this.container = container;\n      setRef(container, _this.props.getRootRef);\n    });\n\n    _this.state = {\n      containerWidth: 0,\n      deltaX: 0,\n      shiftX: 0,\n      slides: [],\n      animation: true,\n      duration: 0.24\n    };\n    _this.slidesStore = {};\n    return _this;\n  }\n\n  _createClass(BaseGallery, [{\n    key: \"isCenterWithCustomWidth\",\n    get: function get() {\n      return this.props.slideWidth === 'custom' && this.props.align === 'center';\n    }\n  }, {\n    key: \"initializeSlides\",\n    value: function initializeSlides() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var slides = React.Children.map(this.props.children, function (_item, i) {\n        var elem = _this2.slidesStore[\"slide-\".concat(i)];\n\n        return {\n          coordX: elem.offsetLeft,\n          width: elem.offsetWidth\n        };\n      });\n      var containerWidth = this.container.offsetWidth;\n      var layerWidth = slides.reduce(function (val, slide) {\n        return slide.width + val;\n      }, 0);\n      var min = this.calcMin({\n        containerWidth: containerWidth,\n        layerWidth: layerWidth,\n        slides: slides\n      });\n      var max = this.calcMax({\n        slides: slides\n      });\n      this.setState({\n        min: min,\n        max: max,\n        layerWidth: layerWidth,\n        containerWidth: containerWidth,\n        slides: slides\n      }, function () {\n        var shiftX = _this2.calculateIndent(_this2.props.slideIndex);\n\n        if (_this2.state.shiftX === shiftX) {\n          return;\n        }\n\n        var isValidShift = _this2.state.shiftX === _this2.validateIndent(_this2.state.shiftX);\n\n        var _options$animation = options.animation,\n            animation = _options$animation === void 0 ? isValidShift : _options$animation;\n\n        _this2.setState({\n          shiftX: shiftX,\n          animation: animation\n        }, function () {\n          if (!_this2.state.animation) {\n            _this2.props.window.requestAnimationFrame(function () {\n              return _this2.setState({\n                animation: true\n              });\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: \"calcMin\",\n    value: function calcMin(_ref) {\n      var containerWidth = _ref.containerWidth,\n          layerWidth = _ref.layerWidth,\n          slides = _ref.slides;\n      var viewportWidth = this.viewport.offsetWidth;\n\n      switch (this.props.align) {\n        case 'left':\n          return containerWidth - layerWidth;\n\n        case 'right':\n          return viewportWidth - layerWidth;\n\n        case 'center':\n          if (this.isCenterWithCustomWidth && slides.length) {\n            var _slides = slides[slides.length - 1],\n                coordX = _slides.coordX,\n                width = _slides.width;\n            return viewportWidth / 2 - coordX - width / 2;\n          } else {\n            return viewportWidth - (containerWidth - viewportWidth) / 2 - layerWidth;\n          }\n\n      }\n    }\n  }, {\n    key: \"calcMax\",\n    value: function calcMax(_ref2) {\n      var slides = _ref2.slides;\n      var viewportWidth = this.viewport.offsetWidth;\n\n      if (this.isCenterWithCustomWidth && slides.length) {\n        var _slides$ = slides[0],\n            width = _slides$.width,\n            coordX = _slides$.coordX;\n        return viewportWidth / 2 - coordX - width / 2;\n      } else {\n        return 0;\n      }\n    }\n    /*\n     * Считает отступ слоя галереи\n     */\n\n  }, {\n    key: \"calculateIndent\",\n    value: function calculateIndent(targetIndex) {\n      var slides = this.state.slides;\n\n      if (this.isFullyVisible) {\n        return 0;\n      }\n\n      var targetSlide = slides.length ? slides[targetIndex] : null;\n\n      if (targetSlide) {\n        var coordX = targetSlide.coordX,\n            width = targetSlide.width;\n\n        if (this.isCenterWithCustomWidth) {\n          var viewportWidth = this.viewport.offsetWidth;\n          return viewportWidth / 2 - coordX - width / 2;\n        }\n\n        return this.validateIndent(-1 * coordX);\n      } else {\n        return 0;\n      }\n    }\n    /*\n     * Считает отступ слоя галереи во время драга\n     */\n\n  }, {\n    key: \"calculateDragIndent\",\n    value: function calculateDragIndent() {\n      var _this$state = this.state,\n          shiftX = _this$state.shiftX,\n          deltaX = _this$state.deltaX,\n          min = _this$state.min,\n          max = _this$state.max;\n      var indent = shiftX + deltaX;\n\n      if (indent > max) {\n        return max + Number((indent - max) / 3);\n      } else if (indent < min) {\n        return min + Number((indent - min) / 3);\n      }\n\n      return indent;\n    }\n  }, {\n    key: \"validateIndent\",\n    value: function validateIndent(value) {\n      var _this$state2 = this.state,\n          min = _this$state2.min,\n          max = _this$state2.max;\n\n      if (value < min) {\n        return min;\n      } else if (value > max) {\n        return max;\n      }\n\n      return value;\n    }\n  }, {\n    key: \"isFullyVisible\",\n    get: function get() {\n      return this.state.layerWidth <= this.state.containerWidth;\n    }\n    /*\n     * Получает индекс слайда, к которому будет осуществлен переход\n     */\n\n  }, {\n    key: \"getTarget\",\n    value: function getTarget() {\n      var _this$state3 = this.state,\n          slides = _this$state3.slides,\n          deltaX = _this$state3.deltaX,\n          shiftX = _this$state3.shiftX,\n          startT = _this$state3.startT,\n          max = _this$state3.max;\n      var slideIndex = this.props.slideIndex;\n      var expectDeltaX = deltaX / (Date.now() - startT.getTime()) * 240 * 0.6;\n      var shift = shiftX + deltaX + expectDeltaX - max;\n      var direction = deltaX < 0 ? 1 : -1; // Находим ближайшую границу слайда к текущему отступу\n\n      var targetIndex = slides.reduce(function (val, item, index) {\n        var previousValue = Math.abs(slides[val].coordX + shift);\n        var currentValue = Math.abs(item.coordX + shift);\n        return previousValue < currentValue ? val : index;\n      }, slideIndex);\n\n      if (targetIndex === slideIndex) {\n        var targetSlide = slideIndex + direction;\n\n        if (targetSlide >= 0 && targetSlide < slides.length) {\n          if (Math.abs(deltaX) > slides[targetSlide].width * 0.05) {\n            targetIndex = targetSlide;\n          }\n        }\n      }\n\n      return targetIndex;\n    }\n  }, {\n    key: \"canSlideLeft\",\n    get: function get() {\n      // shiftX is negative number <= 0, we can swipe back only if it is < 0\n      return !this.isFullyVisible && this.state.shiftX < 0;\n    }\n  }, {\n    key: \"canSlideRight\",\n    get: function get() {\n      var _this$state4 = this.state,\n          containerWidth = _this$state4.containerWidth,\n          layerWidth = _this$state4.layerWidth,\n          shiftX = _this$state4.shiftX,\n          slides = _this$state4.slides;\n      var _this$props3 = this.props,\n          align = _this$props3.align,\n          slideIndex = _this$props3.slideIndex;\n      return !this.isFullyVisible && ( // we can't move right when gallery layer fully scrolled right, if gallery aligned by left side\n      align === 'left' && containerWidth - shiftX < layerWidth || // otherwise we need to check current slide index (align = right or align = center)\n      align !== 'left' && slideIndex < slides.length - 1);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initializeSlides({\n        animation: false\n      });\n      this.props.window.addEventListener('resize', this.onResize);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var widthChanged = this.props.slideWidth !== prevProps.slideWidth;\n      var isPropUpdate = this.props !== prevProps;\n      var slideCountChanged = React.Children.count(this.props.children) !== React.Children.count(prevProps.children);\n      var isCustomWidth = this.props.slideWidth === 'custom'; // в любом из этих случаев позиция могла поменяться\n\n      if (widthChanged || slideCountChanged || isCustomWidth && isPropUpdate) {\n        this.initializeSlides();\n      } else if (this.props.slideIndex !== prevProps.slideIndex) {\n        this.setState({\n          animation: true,\n          deltaX: 0,\n          shiftX: this.calculateIndent(this.props.slideIndex)\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.window.removeEventListener('resize', this.onResize);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state5 = this.state,\n          animation = _this$state5.animation,\n          duration = _this$state5.duration,\n          dragging = _this$state5.dragging;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          slideWidth = _this$props4.slideWidth,\n          slideIndex = _this$props4.slideIndex,\n          isDraggable = _this$props4.isDraggable,\n          onDragStart = _this$props4.onDragStart,\n          onDragEnd = _this$props4.onDragEnd,\n          onChange = _this$props4.onChange,\n          onEnd = _this$props4.onEnd,\n          align = _this$props4.align,\n          bullets = _this$props4.bullets,\n          platform = _this$props4.platform,\n          hasMouse = _this$props4.hasMouse,\n          showArrows = _this$props4.showArrows,\n          window = _this$props4.window,\n          document = _this$props4.document,\n          getRef = _this$props4.getRef,\n          getRootRef = _this$props4.getRootRef,\n          restProps = _objectWithoutProperties(_this$props4, _excluded);\n\n      var indent = dragging ? this.calculateDragIndent() : this.calculateIndent(slideIndex);\n      var layerStyle = {\n        WebkitTransform: \"translateX(\".concat(indent, \"px)\"),\n        transform: \"translateX(\".concat(indent, \"px)\"),\n        WebkitTransition: animation ? \"-webkit-transform \".concat(duration, \"s cubic-bezier(.1, 0, .25, 1)\") : 'none',\n        transition: animation ? \"transform \".concat(duration, \"s cubic-bezier(.1, 0, .25, 1)\") : 'none'\n      };\n      return createScopedElement(\"div\", _extends({}, restProps, {\n        vkuiClass: classNames(getClassName('Gallery', platform), \"Gallery--\".concat(align), {\n          'Gallery--dragging': dragging,\n          'Gallery--custom-width': slideWidth === 'custom'\n        }),\n        ref: this.getRootRef\n      }), createScopedElement(Touch, {\n        vkuiClass: \"Gallery__viewport\",\n        onStartX: this.onStart,\n        onMoveX: this.onMoveX,\n        onEnd: this.onEnd,\n        noSlideClick: true,\n        style: {\n          width: slideWidth === 'custom' ? '100%' : slideWidth\n        },\n        getRootRef: this.getViewportRef\n      }, createScopedElement(\"div\", {\n        vkuiClass: \"Gallery__layer\",\n        style: layerStyle\n      }, React.Children.map(children, function (item, i) {\n        return createScopedElement(\"div\", {\n          vkuiClass: \"Gallery__slide\",\n          key: \"slide-\".concat(i),\n          ref: _this3.getSlideRef(i)\n        }, item);\n      }))), bullets && createScopedElement(\"div\", {\n        \"aria-hidden\": \"true\",\n        vkuiClass: classNames('Gallery__bullets', \"Gallery__bullets--\".concat(bullets))\n      }, React.Children.map(children, function (_item, index) {\n        return createScopedElement(\"div\", {\n          vkuiClass: classNames('Gallery__bullet', {\n            'Gallery__bullet--active': index === slideIndex\n          }),\n          key: index\n        });\n      })), showArrows && hasMouse && this.canSlideLeft && createScopedElement(HorizontalScrollArrow, {\n        direction: \"left\",\n        onClick: this.slideLeft\n      }), showArrows && hasMouse && this.canSlideRight && createScopedElement(HorizontalScrollArrow, {\n        direction: \"right\",\n        onClick: this.slideRight\n      }));\n    }\n  }]);\n\n  return BaseGallery;\n}(React.Component);\n\n_defineProperty(BaseGallery, \"defaultProps\", {\n  slideWidth: '100%',\n  children: '',\n  align: 'left',\n  bullets: false,\n  isDraggable: true\n});\n\nvar BaseGalleryAdaptive = withAdaptivity(withDOM(BaseGallery), {\n  hasMouse: true\n});\n\nvar Gallery = function Gallery(_ref3) {\n  var _ref3$initialSlideInd = _ref3.initialSlideIndex,\n      initialSlideIndex = _ref3$initialSlideInd === void 0 ? 0 : _ref3$initialSlideInd,\n      children = _ref3.children,\n      timeout = _ref3.timeout,\n      onChange = _ref3.onChange,\n      props = _objectWithoutProperties(_ref3, _excluded2);\n\n  var _React$useState = React.useState(initialSlideIndex),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      localSlideIndex = _React$useState2[0],\n      setSlideIndex = _React$useState2[1];\n\n  var isControlled = typeof props.slideIndex === 'number';\n  var slideIndex = isControlled ? props.slideIndex : localSlideIndex;\n  var isDraggable = !isControlled || Boolean(onChange);\n  var slides = React.Children.toArray(children).filter(function (item) {\n    return Boolean(item);\n  });\n  var childCount = slides.length;\n  var handleChange = React.useCallback(function (current) {\n    if (current === slideIndex) {\n      return;\n    }\n\n    !isControlled && setSlideIndex(current);\n    onChange && onChange(current);\n  }, [onChange, slideIndex]);\n  var autoplay = useTimeout(function () {\n    return handleChange((slideIndex + 1) % childCount);\n  }, timeout);\n  React.useEffect(function () {\n    return timeout ? autoplay.set() : autoplay.clear();\n  }, [timeout, slideIndex]); // prevent invalid slideIndex\n  // any slide index is invalid with no slides, just keep it as is\n\n  var safeSlideIndex = childCount > 0 ? clamp(slideIndex, 0, childCount - 1) : slideIndex; // notify parent in controlled mode\n\n  React.useEffect(function () {\n    if (onChange && safeSlideIndex !== slideIndex) {\n      onChange(safeSlideIndex);\n    }\n  }, [safeSlideIndex]);\n  return createScopedElement(BaseGalleryAdaptive, _extends({\n    isDraggable: isDraggable\n  }, props, {\n    slideIndex: safeSlideIndex,\n    onChange: handleChange\n  }), slides);\n};\n\nexport default withPlatform(Gallery);","map":{"version":3,"sources":["../../../src/components/Gallery/Gallery.tsx"],"names":["BaseGallery","React","Component","containerWidth","deltaX","shiftX","slides","animation","duration","slideWidth","children","align","bullets","isDraggable","options","elem","coordX","width","offsetWidth","layerWidth","slide","min","max","isValidShift","viewportWidth","targetSlide","indent","Number","value","startT","slideIndex","expectDeltaX","Date","shift","direction","targetIndex","previousValue","Math","currentValue","item","e","dragging","isSlideX","onChange","setRef","widthChanged","prevProps","isPropUpdate","slideCountChanged","isCustomWidth","onDragStart","onDragEnd","onEnd","platform","hasMouse","showArrows","window","document","getRef","getRootRef","restProps","layerStyle","WebkitTransform","transform","WebkitTransition","transition","classNames","getClassName","getViewportRef","index","slideLeft","slideRight","BaseGalleryAdaptive","withAdaptivity","withDOM","Gallery","initialSlideIndex","timeout","props","localSlideIndex","setSlideIndex","isControlled","Boolean","childCount","handleChange","current","autoplay","useTimeout","safeSlideIndex","clamp","withPlatform"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport Touch, { TouchEventHandler, TouchEvent } from '../Touch/Touch';\nimport { classNames } from '../../lib/classNames';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { HasAlign, HasPlatform, HasRef, HasRootRef } from '../../types';\nimport { withDOM, DOMProps } from '../../lib/dom';\nimport { setRef } from '../../lib/utils';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport HorizontalScrollArrow from '../HorizontalScroll/HorizontalScrollArrow';\nimport { clamp } from '../../helpers/math';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport './Gallery.css';\n\nexport interface BaseGalleryProps extends\n  Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'onDragStart' | 'onDragEnd'>,\n  HasPlatform,\n  HasAlign,\n  HasRootRef<HTMLDivElement>,\n  HasRef<HTMLElement> {\n  slideWidth?: string | number;\n  slideIndex?: number;\n  onDragStart?: TouchEventHandler;\n  onDragEnd?: TouchEventHandler;\n  onChange?(current: number): void;\n  onEnd?({ targetIndex }: { targetIndex: number }): void;\n  bullets?: 'dark' | 'light' | false;\n  isDraggable?: boolean;\n  showArrows?: boolean;\n}\n\nexport interface GalleryProps extends BaseGalleryProps {\n  initialSlideIndex?: number;\n  timeout?: number;\n}\n\nexport interface GalleryState {\n  containerWidth: number;\n  layerWidth?: number;\n  min?: number;\n  max?: number;\n  startT?: Date;\n  deltaX: number;\n  shiftX: number;\n  slides: GallerySlidesState[];\n  animation: boolean;\n  duration: number;\n  dragging?: boolean;\n}\n\nexport interface GallerySlidesState {\n  coordX: number;\n  width: number;\n}\n\ntype GetSlideRef = (index: number) => React.RefCallback<HTMLElement>;\n\nclass BaseGallery extends React.Component<BaseGalleryProps & DOMProps & AdaptivityProps, GalleryState> {\n  constructor(props: GalleryProps) {\n    super(props);\n\n    this.state = {\n      containerWidth: 0,\n      deltaX: 0,\n      shiftX: 0,\n      slides: [],\n      animation: true,\n      duration: 0.24,\n    };\n\n    this.slidesStore = {};\n  }\n\n  container: HTMLDivElement;\n  slidesStore: {\n    [index: string]: HTMLElement;\n  };\n  viewport: HTMLElement;\n\n  static defaultProps: Partial<BaseGalleryProps> = {\n    slideWidth: '100%',\n    children: '',\n    align: 'left',\n    bullets: false,\n    isDraggable: true,\n  };\n\n  get isCenterWithCustomWidth() {\n    return this.props.slideWidth === 'custom' && this.props.align === 'center';\n  }\n\n  initializeSlides(options: { animation?: boolean } = {}) {\n    const slides: GallerySlidesState[] = React.Children.map(\n      this.props.children,\n      (_item: React.ReactElement, i: number): GallerySlidesState => {\n        const elem = this.slidesStore[`slide-${i}`];\n        return {\n          coordX: elem.offsetLeft,\n          width: elem.offsetWidth,\n        };\n      });\n\n    const containerWidth = this.container.offsetWidth;\n    const layerWidth = slides.reduce((val: number, slide: GallerySlidesState) => slide.width + val, 0);\n\n    const min = this.calcMin({ containerWidth, layerWidth, slides });\n    const max = this.calcMax({ slides });\n\n    this.setState({ min, max, layerWidth, containerWidth, slides }, () => {\n      const shiftX = this.calculateIndent(this.props.slideIndex);\n      if (this.state.shiftX === shiftX) {\n        return;\n      }\n      const isValidShift = this.state.shiftX === this.validateIndent(this.state.shiftX);\n      const { animation = isValidShift } = options;\n      this.setState({ shiftX, animation }, () => {\n        if (!this.state.animation) {\n          this.props.window.requestAnimationFrame(() => this.setState({ animation: true }));\n        }\n      });\n    });\n  }\n\n  calcMin({ containerWidth, layerWidth, slides }: Pick<GalleryState, 'containerWidth' | 'layerWidth' | 'slides'>) {\n    const viewportWidth = this.viewport.offsetWidth;\n    switch (this.props.align) {\n      case 'left':\n        return containerWidth - layerWidth;\n      case 'right':\n        return viewportWidth - layerWidth;\n      case 'center':\n        if (this.isCenterWithCustomWidth && slides.length) {\n          const { coordX, width } = slides[slides.length - 1];\n          return viewportWidth / 2 - coordX - width / 2;\n        } else {\n          return viewportWidth - (containerWidth - viewportWidth) / 2 - layerWidth;\n        }\n    }\n  }\n\n  calcMax({ slides }: Pick<GalleryState, 'slides'>) {\n    const viewportWidth = this.viewport.offsetWidth;\n    if (this.isCenterWithCustomWidth && slides.length) {\n      const { width, coordX } = slides[0];\n      return viewportWidth / 2 - coordX - width / 2;\n    } else {\n      return 0;\n    }\n  }\n\n  /*\n   * Считает отступ слоя галереи\n   */\n  calculateIndent(targetIndex: number) {\n    const { slides } = this.state;\n\n    if (this.isFullyVisible) {\n      return 0;\n    }\n\n    const targetSlide = slides.length ? slides[targetIndex] : null;\n\n    if (targetSlide) {\n      const { coordX, width } = targetSlide;\n\n      if (this.isCenterWithCustomWidth) {\n        const viewportWidth = this.viewport.offsetWidth;\n        return viewportWidth / 2 - coordX - width / 2;\n      }\n\n      return this.validateIndent(-1 * coordX);\n    } else {\n      return 0;\n    }\n  }\n\n  /*\n   * Считает отступ слоя галереи во время драга\n   */\n  calculateDragIndent() {\n    const { shiftX, deltaX, min, max } = this.state;\n    const indent = shiftX + deltaX;\n\n    if (indent > max) {\n      return max + Number((indent - max) / 3);\n    } else if (indent < min) {\n      return min + Number((indent - min) / 3);\n    }\n\n    return indent;\n  }\n\n  validateIndent(value: number) {\n    const { min, max } = this.state;\n\n    if (value < min) {\n      return min;\n    } else if (value > max) {\n      return max;\n    }\n\n    return value;\n  }\n\n  get isFullyVisible() {\n    return this.state.layerWidth <= this.state.containerWidth;\n  }\n\n  /*\n   * Получает индекс слайда, к которому будет осуществлен переход\n   */\n  getTarget() {\n    const { slides, deltaX, shiftX, startT, max } = this.state;\n    const { slideIndex } = this.props;\n    const expectDeltaX = deltaX / (Date.now() - startT.getTime()) * 240 * 0.6;\n    const shift = shiftX + deltaX + expectDeltaX - max;\n    const direction = deltaX < 0 ? 1 : -1;\n\n    // Находим ближайшую границу слайда к текущему отступу\n    let targetIndex = slides.reduce((val: number, item: GallerySlidesState, index: number) => {\n      const previousValue = Math.abs(slides[val].coordX + shift);\n      const currentValue = Math.abs(item.coordX + shift);\n\n      return previousValue < currentValue ? val : index;\n    }, slideIndex);\n\n    if (targetIndex === slideIndex) {\n      let targetSlide = slideIndex + direction;\n\n      if (targetSlide >= 0 && targetSlide < slides.length) {\n        if (Math.abs(deltaX) > slides[targetSlide].width * 0.05) {\n          targetIndex = targetSlide;\n        }\n      }\n    }\n\n    return targetIndex;\n  }\n\n  onStart: TouchEventHandler = (e: TouchEvent) => {\n    this.setState({\n      animation: false,\n      startT: e.startT,\n    });\n  };\n\n  onMoveX: TouchEventHandler = (e: TouchEvent) => {\n    if (this.props.isDraggable && !this.isFullyVisible) {\n      e.originalEvent.preventDefault();\n\n      if (e.isSlideX) {\n        this.props.onDragStart && this.props.onDragStart(e);\n\n        if (this.state.deltaX !== e.shiftX || this.state.dragging !== e.isSlideX) {\n          this.setState({\n            deltaX: e.shiftX,\n            dragging: e.isSlideX,\n          });\n        }\n      }\n    }\n  };\n\n  onEnd: TouchEventHandler = (e: TouchEvent) => {\n    const targetIndex = e.isSlide ? this.getTarget() : this.props.slideIndex;\n    this.props.onDragEnd && this.props.onDragEnd(e);\n    this.setState({ deltaX: 0, animation: true }, () => this.props.onChange(targetIndex));\n\n    if (this.props.onEnd) {\n      this.props.onEnd({ targetIndex });\n    }\n  };\n\n  onResize: VoidFunction = () => this.initializeSlides({ animation: false });\n\n  get canSlideLeft() {\n    // shiftX is negative number <= 0, we can swipe back only if it is < 0\n    return !this.isFullyVisible && this.state.shiftX < 0;\n  }\n\n  get canSlideRight() {\n    const { containerWidth, layerWidth, shiftX, slides } = this.state;\n    const { align, slideIndex } = this.props;\n    return !this.isFullyVisible && (\n      // we can't move right when gallery layer fully scrolled right, if gallery aligned by left side\n      align === 'left' && containerWidth - shiftX < layerWidth ||\n      // otherwise we need to check current slide index (align = right or align = center)\n      align !== 'left' && slideIndex < slides.length - 1\n    );\n  }\n\n  slideLeft = () => {\n    const { slideIndex, onChange } = this.props;\n    if (this.canSlideLeft) {\n      this.setState({ deltaX: 0, animation: true }, () => onChange(slideIndex - 1));\n    }\n  };\n\n  slideRight = () => {\n    const { slideIndex, onChange } = this.props;\n    if (this.canSlideRight) {\n      this.setState({ deltaX: 0, animation: true }, () => onChange(slideIndex + 1));\n    }\n  };\n\n  getSlideRef: GetSlideRef = (id: number) => (slide) => {\n    this.slidesStore[`slide-${id}`] = slide;\n  };\n\n  getViewportRef: React.RefCallback<HTMLElement> = (viewport) => {\n    this.viewport = viewport;\n    setRef(viewport, this.props.getRef);\n  };\n\n  getRootRef: React.RefCallback<HTMLDivElement> = (container) => {\n    this.container = container;\n    setRef(container, this.props.getRootRef);\n  };\n\n  componentDidMount() {\n    this.initializeSlides({ animation: false });\n    this.props.window.addEventListener('resize', this.onResize);\n  }\n\n  componentDidUpdate(prevProps: GalleryProps) {\n    const widthChanged = this.props.slideWidth !== prevProps.slideWidth;\n    const isPropUpdate = this.props !== prevProps;\n    const slideCountChanged = React.Children.count(this.props.children) !== React.Children.count(prevProps.children);\n    const isCustomWidth = this.props.slideWidth === 'custom';\n\n    // в любом из этих случаев позиция могла поменяться\n    if (widthChanged || slideCountChanged || isCustomWidth && isPropUpdate) {\n      this.initializeSlides();\n    } else if (this.props.slideIndex !== prevProps.slideIndex) {\n      this.setState({\n        animation: true,\n        deltaX: 0,\n        shiftX: this.calculateIndent(this.props.slideIndex),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.window.removeEventListener('resize', this.onResize);\n  }\n\n  render() {\n    const { animation, duration, dragging } = this.state;\n    const {\n      children,\n      slideWidth,\n      slideIndex,\n      isDraggable,\n      onDragStart,\n      onDragEnd,\n      onChange,\n      onEnd,\n      align,\n      bullets,\n      platform,\n      hasMouse,\n      showArrows,\n      window,\n      document,\n      getRef,\n      getRootRef,\n      ...restProps\n    } = this.props;\n\n    const indent = dragging ? this.calculateDragIndent() : this.calculateIndent(slideIndex);\n\n    const layerStyle = {\n      WebkitTransform: `translateX(${indent}px)`,\n      transform: `translateX(${indent}px)`,\n      WebkitTransition: animation ? `-webkit-transform ${duration}s cubic-bezier(.1, 0, .25, 1)` : 'none',\n      transition: animation ? `transform ${duration}s cubic-bezier(.1, 0, .25, 1)` : 'none',\n    };\n\n    return (\n      <div\n        {...restProps}\n        vkuiClass={classNames(getClassName('Gallery', platform), `Gallery--${align}`, {\n          'Gallery--dragging': dragging,\n          'Gallery--custom-width': slideWidth === 'custom',\n        })}\n        ref={this.getRootRef}\n      >\n        <Touch\n          vkuiClass=\"Gallery__viewport\"\n          onStartX={this.onStart}\n          onMoveX={this.onMoveX}\n          onEnd={this.onEnd}\n          noSlideClick\n          style={{ width: slideWidth === 'custom' ? '100%' : slideWidth }}\n          getRootRef={this.getViewportRef}\n        >\n          <div vkuiClass=\"Gallery__layer\" style={layerStyle}>\n            {React.Children.map(children, (item: React.ReactElement, i: number) =>\n              <div vkuiClass=\"Gallery__slide\" key={`slide-${i}`} ref={this.getSlideRef(i)}>{item}</div>,\n            )}\n          </div>\n        </Touch>\n\n        {bullets &&\n        <div aria-hidden=\"true\" vkuiClass={classNames('Gallery__bullets', `Gallery__bullets--${bullets}`)}>\n          {React.Children.map(children, (_item: React.ReactElement, index: number) =>\n            <div\n              vkuiClass={classNames('Gallery__bullet', { 'Gallery__bullet--active': index === slideIndex })}\n              key={index}\n            />,\n          )}\n        </div>\n        }\n\n        {showArrows && hasMouse && this.canSlideLeft && <HorizontalScrollArrow direction=\"left\" onClick={this.slideLeft} />}\n        {showArrows && hasMouse && this.canSlideRight && <HorizontalScrollArrow direction=\"right\" onClick={this.slideRight} />}\n      </div>\n    );\n  }\n}\n\nconst BaseGalleryAdaptive = withAdaptivity(withDOM<BaseGalleryProps>(BaseGallery), {\n  hasMouse: true,\n});\n\nconst Gallery: React.FC<GalleryProps> = ({\n  initialSlideIndex = 0,\n  children,\n  timeout,\n  onChange,\n  ...props\n}: GalleryProps) => {\n  const [localSlideIndex, setSlideIndex] = React.useState(initialSlideIndex);\n  const isControlled = typeof props.slideIndex === 'number';\n  const slideIndex = isControlled ? props.slideIndex : localSlideIndex;\n  const isDraggable = !isControlled || Boolean(onChange);\n  const slides = React.Children.toArray(children).filter((item) => Boolean(item));\n  const childCount = slides.length;\n\n  const handleChange: GalleryProps['onChange'] = React.useCallback((current) => {\n    if (current === slideIndex) {\n      return;\n    }\n    !isControlled && setSlideIndex(current);\n    onChange && onChange(current);\n  }, [onChange, slideIndex]);\n\n  const autoplay = useTimeout(() => handleChange((slideIndex + 1) % childCount), timeout);\n  React.useEffect(() => timeout ? autoplay.set() : autoplay.clear(), [timeout, slideIndex]);\n\n  // prevent invalid slideIndex\n  // any slide index is invalid with no slides, just keep it as is\n  const safeSlideIndex = childCount > 0 ? clamp(slideIndex, 0, childCount - 1) : slideIndex;\n  // notify parent in controlled mode\n  React.useEffect(() => {\n    if (onChange && safeSlideIndex !== slideIndex) {\n      onChange(safeSlideIndex);\n    }\n  }, [safeSlideIndex]);\n\n  return (\n    <BaseGalleryAdaptive\n      isDraggable={isDraggable}\n      {...props}\n      slideIndex={safeSlideIndex}\n      onChange={handleChange}\n    >{slides}</BaseGalleryAdaptive>\n  );\n};\n\nexport default withPlatform(Gallery);\n"]},"metadata":{},"sourceType":"module"}