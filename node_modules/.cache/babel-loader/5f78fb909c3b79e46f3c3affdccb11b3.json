{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport * as React from 'react';\nimport { noop } from \"../lib/utils\";\nimport { canUseDOM } from \"../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\nexport function useEventListener(event, _cb, _options) {\n  var cbRef = React.useRef(_cb);\n  useIsomorphicLayoutEffect(function () {\n    cbRef.current = _cb;\n  }, [_cb]);\n  var cb = React.useCallback(function (e) {\n    return cbRef.current(e);\n  }, []);\n  var detach = React.useRef(noop);\n  var remove = React.useCallback(function () {\n    return detach.current();\n  }, []);\n  var add = React.useCallback(function (el) {\n    if (!canUseDOM) {\n      return;\n    }\n\n    remove();\n\n    var options = _objectSpread({}, _options);\n\n    el.addEventListener(event, cb, options);\n\n    detach.current = function () {\n      el.removeEventListener(event, cb, options);\n      detach.current = noop;\n    };\n  }, []);\n  React.useEffect(function () {\n    return remove;\n  }, []);\n  return {\n    add: add,\n    remove: remove\n  };\n}","map":{"version":3,"sources":["../../src/hooks/useEventListener.ts"],"names":["cbRef","React","useIsomorphicLayoutEffect","cb","detach","remove","add","options","el"],"mappings":";AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,IAAA,QAAA,cAAA;AACA,SAAA,SAAA,QAAA,YAAA;AACA,SAAA,yBAAA,QAAA,kCAAA;AAaA,OAAO,SAAA,gBAAA,CAAA,KAAA,EAAA,GAAA,EAAA,QAAA,EAAsG;AAC3G,MAAMA,KAAK,GAAGC,KAAK,CAALA,MAAAA,CAAd,GAAcA,CAAd;AACAC,EAAAA,yBAAyB,CAAC,YAAM;AAC9BF,IAAAA,KAAK,CAALA,OAAAA,GAAAA,GAAAA;AADuB,GAAA,EAEtB,CAFHE,GAEG,CAFsB,CAAzBA;AAGA,MAAMC,EAAE,GAAG,KAAK,CAAL,WAAA,CAA8B,UAAA,CAAA,EAAA;AAAA,WAAOH,KAAK,CAALA,OAAAA,CAAP,CAAOA,CAAP;AAA9B,GAAA,EAAX,EAAW,CAAX;AAEA,MAAMI,MAAM,GAAGH,KAAK,CAALA,MAAAA,CAAf,IAAeA,CAAf;AACA,MAAMI,MAAM,GAAG,KAAK,CAAL,WAAA,CAAkB,YAAA;AAAA,WAAMD,MAAM,CAAZ,OAAMA,EAAN;AAAlB,GAAA,EAAf,EAAe,CAAf;AACA,MAAME,GAAG,GAAG,KAAK,CAAL,WAAA,CAAkB,UAAA,EAAA,EAAgC;AAC5D,QAAI,CAAJ,SAAA,EAAgB;AACd;AACD;;AACDD,IAAAA,MAAM;;AACN,QAAME,OAAO,GAAA,aAAA,CAAA,EAAA,EAAb,QAAa,CAAb;;AACAC,IAAAA,EAAE,CAAFA,gBAAAA,CAAAA,KAAAA,EAAAA,EAAAA,EAAAA,OAAAA;;AACAJ,IAAAA,MAAM,CAANA,OAAAA,GAAiB,YAAM;AACrBI,MAAAA,EAAE,CAAFA,mBAAAA,CAAAA,KAAAA,EAAAA,EAAAA,EAAAA,OAAAA;AACAJ,MAAAA,MAAM,CAANA,OAAAA,GAAAA,IAAAA;AAFFA,KAAAA;AAPU,GAAA,EAAZ,EAAY,CAAZ;AAYAH,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAA;AAAA,WAAA,MAAA;AAAhBA,GAAAA,EAAAA,EAAAA;AAEA,SAAO;AAAEK,IAAAA,GAAG,EAAL,GAAA;AAAOD,IAAAA,MAAM,EAANA;AAAP,GAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { noop } from '../lib/utils';\nimport { canUseDOM } from '../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\ninterface EventListenerHandle {\n  add(el: HTMLElement | Document): void;\n  remove(): void;\n}\n\nexport function useEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  event: K,\n  _cb: (ev: GlobalEventHandlersEventMap[K]) => any,\n  _options?: AddEventListenerOptions,\n): EventListenerHandle;\nexport function useEventListener(event: string, _cb: (ev: Event) => any, _options?: AddEventListenerOptions): EventListenerHandle;\nexport function useEventListener(event: string, _cb: (ev: Event) => any, _options?: AddEventListenerOptions) {\n  const cbRef = React.useRef(_cb);\n  useIsomorphicLayoutEffect(() => {\n    cbRef.current = _cb;\n  }, [_cb]);\n  const cb = React.useCallback<typeof _cb>((e) => cbRef.current(e), []);\n\n  const detach = React.useRef(noop);\n  const remove = React.useCallback(() => detach.current(), []);\n  const add = React.useCallback((el: HTMLElement | Document) => {\n    if (!canUseDOM) {\n      return;\n    }\n    remove();\n    const options = { ..._options };\n    el.addEventListener(event, cb, options);\n    detach.current = () => {\n      el.removeEventListener(event, cb, options);\n      detach.current = noop;\n    };\n  }, []);\n  React.useEffect(() => remove, []);\n\n  return { add, remove };\n}\n"]},"metadata":{},"sourceType":"module"}