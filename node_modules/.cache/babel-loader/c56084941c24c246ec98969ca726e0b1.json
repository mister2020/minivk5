{"ast":null,"code":"import * as React from 'react';\nimport { noop } from \"../../lib/utils\";\nimport { clamp } from \"../../helpers/math\";\nexport var ScrollContext = /*#__PURE__*/React.createContext({\n  getScroll: function getScroll() {\n    return {\n      x: 0,\n      y: 0\n    };\n  },\n  scrollTo: noop\n});\nexport var globalScrollController = function globalScrollController(window, document) {\n  return {\n    getScroll: function getScroll() {\n      return {\n        x: window.pageXOffset,\n        y: window.pageYOffset\n      };\n    },\n    scrollTo: function scrollTo() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Some iOS versions do not normalize scroll — do it manually.\n\n      window.scrollTo(x ? clamp(x, 0, document.body.scrollWidth - window.innerWidth) : 0, y ? clamp(y, 0, document.body.scrollHeight - window.innerHeight) : 0);\n    }\n  };\n};\nexport var elementScrollController = function elementScrollController(elRef) {\n  return {\n    getScroll: function getScroll() {\n      return {\n        x: elRef.current.scrollLeft,\n        y: elRef.current.scrollTop\n      };\n    },\n    scrollTo: function scrollTo() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var el = elRef.current; // Some iOS versions do not normalize scroll — do it manually.\n\n      el.scrollTo(x ? clamp(x, 0, el.scrollWidth - el.clientWidth) : 0, y ? clamp(y, 0, el.scrollHeight - el.clientHeight) : 0);\n    }\n  };\n};","map":{"version":3,"sources":["../../../src/components/AppRoot/ScrollContext.ts"],"names":["ScrollContext","getScroll","x","y","scrollTo","noop","globalScrollController","window","pageYOffset","clamp","document","elementScrollController","elRef","scrollTop","el"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,IAAA,QAAA,iBAAA;AACA,SAAA,KAAA,QAAA,oBAAA;AAOA,OAAO,IAAMA,aAAa,GAAA,aAAG,KAAK,CAAL,aAAA,CAA4C;AACvEC,EAAAA,SAAS,EAAE,SAAA,SAAA,GAAA;AAAA,WAAO;AAAEC,MAAAA,CAAC,EAAH,CAAA;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAP;AAD4D,GAAA;AAEvEC,EAAAA,QAAQ,EAAEC;AAF6D,CAA5C,CAAtB;AAKP,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAA,MAAA,EAAA,QAAA,EAAA;AAAA,SAA6C;AACjFL,IAAAA,SAAS,EAAE,SAAA,SAAA,GAAA;AAAA,aAAO;AAAEC,QAAAA,CAAC,EAAEK,MAAM,CAAX,WAAA;AAAyBJ,QAAAA,CAAC,EAAEI,MAAM,CAACC;AAAnC,OAAP;AADsE,KAAA;AAEjFJ,IAAAA,QAAQ,EAAE,SAAA,QAAA,GAAkB;AAAA,UAAjBF,CAAiB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAb,CAAa;AAAA,UAAVC,CAAU,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAN,CAAM,CAAA,CAC1B;;AACAI,MAAAA,MAAM,CAANA,QAAAA,CACEL,CAAC,GAAGO,KAAK,CAAA,CAAA,EAAA,CAAA,EAAOC,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,GAA4BH,MAAM,CAAjD,UAAQ,CAAR,GADHA,CAAAA,EAEEJ,CAAC,GAAGM,KAAK,CAAA,CAAA,EAAA,CAAA,EAAOC,QAAQ,CAARA,IAAAA,CAAAA,YAAAA,GAA6BH,MAAM,CAAlD,WAAQ,CAAR,GAFHA,CAAAA;AAGD;AAPgF,GAA7C;AAA/B,CAAA;AAUP,OAAO,IAAMI,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAA,KAAA,EAAA;AAAA,SAA0C;AAC/EV,IAAAA,SAAS,EAAE,SAAA,SAAA,GAAA;AAAA,aAAO;AAAEC,QAAAA,CAAC,EAAEU,KAAK,CAALA,OAAAA,CAAL,UAAA;AAA+BT,QAAAA,CAAC,EAAES,KAAK,CAALA,OAAAA,CAAcC;AAAhD,OAAP;AADoE,KAAA;AAE/ET,IAAAA,QAAQ,EAAE,SAAA,QAAA,GAAkB;AAAA,UAAjBF,CAAiB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAb,CAAa;AAAA,UAAVC,CAAU,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAN,CAAM;AAC1B,UAAMW,EAAE,GAAGF,KAAK,CADU,OAC1B,CAD0B,CAE1B;;AACAE,MAAAA,EAAE,CAAFA,QAAAA,CACEZ,CAAC,GAAGO,KAAK,CAAA,CAAA,EAAA,CAAA,EAAOK,EAAE,CAAFA,WAAAA,GAAiBA,EAAE,CAAlC,WAAQ,CAAR,GADHA,CAAAA,EAEEX,CAAC,GAAGM,KAAK,CAAA,CAAA,EAAA,CAAA,EAAOK,EAAE,CAAFA,YAAAA,GAAkBA,EAAE,CAAnC,YAAQ,CAAR,GAFHA,CAAAA;AAGD;AAR8E,GAA1C;AAAhC,CAAA","sourcesContent":["import * as React from 'react';\nimport { noop } from '../../lib/utils';\nimport { clamp } from '../../helpers/math';\n\nexport interface ScrollContextInterface {\n  getScroll(): { x: number; y: number };\n  scrollTo(x?: number, y?: number): void;\n}\n\nexport const ScrollContext = React.createContext<ScrollContextInterface>({\n  getScroll: () => ({ x: 0, y: 0 }),\n  scrollTo: noop,\n});\n\nexport const globalScrollController = (window: Window, document: HTMLDocument) => ({\n  getScroll: () => ({ x: window.pageXOffset, y: window.pageYOffset }),\n  scrollTo: (x = 0, y = 0) => {\n    // Some iOS versions do not normalize scroll — do it manually.\n    window.scrollTo(\n      x ? clamp(x, 0, document.body.scrollWidth - window.innerWidth) : 0,\n      y ? clamp(y, 0, document.body.scrollHeight - window.innerHeight) : 0);\n  },\n});\n\nexport const elementScrollController = (elRef: React.RefObject<HTMLElement>) => ({\n  getScroll: () => ({ x: elRef.current.scrollLeft, y: elRef.current.scrollTop }),\n  scrollTo: (x = 0, y = 0) => {\n    const el = elRef.current;\n    // Some iOS versions do not normalize scroll — do it manually.\n    el.scrollTo(\n      x ? clamp(x, 0, el.scrollWidth - el.clientWidth) : 0,\n      y ? clamp(y, 0, el.scrollHeight - el.clientHeight) : 0);\n  },\n});\n"]},"metadata":{},"sourceType":"module"}