{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"align\", \"controlSize\", \"mode\", \"stretched\", \"before\", \"className\", \"style\", \"getRef\", \"getRootRef\", \"onClick\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport Button from \"../Button/Button\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\n\nvar File = function File(props) {\n  var children = props.children,\n      align = props.align,\n      controlSize = props.controlSize,\n      mode = props.mode,\n      stretched = props.stretched,\n      before = props.before,\n      className = props.className,\n      style = props.style,\n      getRef = props.getRef,\n      getRootRef = props.getRootRef,\n      _onClick = props.onClick,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var platform = usePlatform();\n  var inputRef = useExternRef(getRef);\n  return createScopedElement(Button, {\n    align: align,\n    vkuiClass: getClassName('File', platform),\n    className: className,\n    stretched: stretched,\n    mode: mode,\n    size: controlSize,\n    before: before,\n    style: style,\n    getRootRef: getRootRef,\n    disabled: restProps.disabled,\n    type: \"button\",\n    onClick: function onClick(e) {\n      inputRef.current.click();\n      _onClick && _onClick(e);\n    }\n  }, createScopedElement(\"input\", _extends({}, restProps, {\n    vkuiClass: \"File__input\",\n    type: \"file\",\n    ref: inputRef\n  })), children);\n};\n\nFile.defaultProps = {\n  children: 'Выберите файл',\n  align: 'left'\n};\nexport default File;","map":{"version":3,"sources":["../../../src/components/File/File.tsx"],"names":["File","children","align","controlSize","mode","stretched","before","className","style","getRef","getRootRef","onClick","restProps","props","platform","usePlatform","inputRef","useExternRef","getClassName"],"mappings":";;;;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,OAAA,MAAA,MAAA,kBAAA;AAEA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,YAAA,QAAA,0BAAA;;AAYA,IAAMA,IAAwC,GAAG,SAA3CA,IAA2C,CAAA,KAAA,EAAsB;AACrE,MAAQC,QAAR,GACuDY,KADvD,CAAA,QAAA;AAAA,MAAkBX,KAAlB,GACuDW,KADvD,CAAA,KAAA;AAAA,MAAyBV,WAAzB,GACuDU,KADvD,CAAA,WAAA;AAAA,MAAsCT,IAAtC,GACuDS,KADvD,CAAA,IAAA;AAAA,MAA4CR,SAA5C,GACuDQ,KADvD,CAAA,SAAA;AAAA,MAAuDP,MAAvD,GACuDO,KADvD,CAAA,MAAA;AAAA,MAA+DN,SAA/D,GACuDM,KADvD,CAAA,SAAA;AAAA,MACEL,KADF,GACuDK,KADvD,CAAA,KAAA;AAAA,MACSJ,MADT,GACuDI,KADvD,CAAA,MAAA;AAAA,MACiBH,UADjB,GACuDG,KADvD,CAAA,UAAA;AAAA,MAC6BF,QAD7B,GACuDE,KADvD,CAAA,OAAA;AAAA,MACyCD,SADzC,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;AAGA,MAAME,QAAQ,GAAGC,WAAjB,EAAA;AACA,MAAMC,QAAQ,GAAGC,YAAY,CAA7B,MAA6B,CAA7B;AAEA,SACE,mBAAA,CAAA,MAAA,EAAA;AACE,IAAA,KAAK,EADP,KAAA;AAEE,IAAA,SAAS,EAAEC,YAAY,CAAA,MAAA,EAFzB,QAEyB,CAFzB;AAGE,IAAA,SAAS,EAHX,SAAA;AAIE,IAAA,SAAS,EAJX,SAAA;AAKE,IAAA,IAAI,EALN,IAAA;AAME,IAAA,IAAI,EANN,WAAA;AAOE,IAAA,MAAM,EAPR,MAAA;AAQE,IAAA,KAAK,EARP,KAAA;AASE,IAAA,UAAU,EATZ,UAAA;AAUE,IAAA,QAAQ,EAAEN,SAAS,CAVrB,QAAA;AAWE,IAAA,IAAI,EAXN,QAAA;AAYE,IAAA,OAAO,EAAE,SAAA,OAAA,CAAA,CAAA,EAAO;AACdI,MAAAA,QAAQ,CAARA,OAAAA,CAAAA,KAAAA;AACAL,MAAAA,QAAO,IAAIA,QAAO,CAAlBA,CAAkB,CAAlBA;AACD;AAfH,GAAA,EAiBE,mBAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAAsB,IAAA,SAAS,EAA/B,aAAA;AAA8C,IAAA,IAAI,EAAlD,MAAA;AAA0D,IAAA,GAAG,EAAEK;AAA/D,GAAA,CAAA,CAjBF,EADF,QACE,CADF;AAPF,CAAA;;AA+BAhB,IAAI,CAAJA,YAAAA,GAAoB;AAClBC,EAAAA,QAAQ,EADU,eAAA;AAElBC,EAAAA,KAAK,EAAE;AAFW,CAApBF;AAKA,eAAA,IAAA","sourcesContent":["import * as React from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport Button, { VKUIButtonProps } from '../Button/Button';\nimport { HasRef, HasRootRef } from '../../types';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport './File.css';\n\nexport interface FileProps extends\n  Omit<VKUIButtonProps, 'size' | 'type'>,\n  Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onClick' | 'type'>,\n  Pick<React.HTMLAttributes<HTMLElement>, 'onClick'>,\n  HasRef<HTMLInputElement>,\n  HasRootRef<HTMLElement> {\n  controlSize?: VKUIButtonProps['size'];\n}\n\nconst File: React.FunctionComponent<FileProps> = (props: FileProps) => {\n  const { children, align, controlSize, mode, stretched, before, className,\n    style, getRef, getRootRef, onClick, ...restProps } = props;\n\n  const platform = usePlatform();\n  const inputRef = useExternRef(getRef);\n\n  return (\n    <Button\n      align={align}\n      vkuiClass={getClassName('File', platform)}\n      className={className}\n      stretched={stretched}\n      mode={mode}\n      size={controlSize}\n      before={before}\n      style={style}\n      getRootRef={getRootRef}\n      disabled={restProps.disabled}\n      type=\"button\"\n      onClick={(e) => {\n        inputRef.current.click();\n        onClick && onClick(e);\n      }}\n    >\n      <input {...restProps} vkuiClass=\"File__input\" type=\"file\" ref={inputRef} />\n      {children}\n    </Button>\n  );\n};\n\nFile.defaultProps = {\n  children: 'Выберите файл',\n  align: 'left',\n};\n\nexport default File;\n"]},"metadata":{},"sourceType":"module"}