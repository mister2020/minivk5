{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"toggleRef\", \"closing\", \"popupDirection\", \"onClose\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from 'react';\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { useDOM } from \"../../lib/dom\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nvar warn = warnOnce('ActionSheet');\nexport var ActionSheetDropdownDesktop = function ActionSheetDropdownDesktop(_ref) {\n  var children = _ref.children,\n      toggleRef = _ref.toggleRef,\n      closing = _ref.closing,\n      popupDirection = _ref.popupDirection,\n      onClose = _ref.onClose,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useDOM = useDOM(),\n      window = _useDOM.window,\n      document = _useDOM.document;\n\n  var platform = usePlatform();\n\n  var _useAdaptivity = useAdaptivity(),\n      sizeY = _useAdaptivity.sizeY;\n\n  var elementRef = React.useRef();\n\n  var _React$useState = React.useState({\n    left: 0,\n    top: 0,\n    opacity: 0,\n    pointerEvents: 'none'\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dropdownStyles = _React$useState2[0],\n      setDropdownStyles = _React$useState2[1];\n\n  useIsomorphicLayoutEffect(function () {\n    if (!toggleRef) {\n      if (process.env.NODE_ENV === 'development') {\n        warn('toggleRef not passed');\n      }\n\n      return;\n    }\n\n    var toggleRect = toggleRef.getBoundingClientRect();\n    var elementRect = elementRef.current.getBoundingClientRect();\n    var isTop = popupDirection === 'top' || typeof popupDirection === 'function' && popupDirection(elementRef) === 'top';\n    setDropdownStyles({\n      left: toggleRect.left + toggleRect.width - elementRect.width + window.pageXOffset,\n      top: toggleRect.top + window.pageYOffset + (isTop ? -elementRect.height : toggleRect.height)\n    });\n  }, [toggleRef]);\n  useGlobalEventListener(document.body, 'click', function (e) {\n    var dropdownElement = elementRef === null || elementRef === void 0 ? void 0 : elementRef.current;\n\n    if (dropdownElement && !dropdownElement.contains(e.target)) {\n      onClose();\n    }\n  });\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    ref: elementRef,\n    onClick: function onClick(e) {\n      return e.stopPropagation();\n    },\n    style: dropdownStyles,\n    vkuiClass: classNames(getClassName('ActionSheet', platform), 'ActionSheet--desktop', {\n      'ActionSheet--closing': closing\n    }, \"ActionSheet--sizeY-\".concat(sizeY))\n  }), children);\n};","map":{"version":3,"sources":["../../../src/components/ActionSheet/ActionSheetDropdownDesktop.tsx"],"names":["warn","warnOnce","ActionSheetDropdownDesktop","children","toggleRef","closing","popupDirection","onClose","restProps","window","document","useDOM","platform","usePlatform","sizeY","useAdaptivity","elementRef","React","dropdownStyles","setDropdownStyles","left","top","opacity","pointerEvents","useIsomorphicLayoutEffect","process","toggleRect","elementRect","isTop","useGlobalEventListener","dropdownElement","e","classNames","getClassName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { useDOM } from '../../lib/dom';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { ActionSheetProps } from './ActionSheet';\nimport './ActionSheet.css';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  closing: boolean;\n  onClose(): void;\n  popupDirection?: ActionSheetProps['popupDirection'];\n  toggleRef: Element;\n}\n\nconst warn = warnOnce('ActionSheet');\n\nexport const ActionSheetDropdownDesktop: React.FC<Props> = ({\n  children,\n  toggleRef,\n  closing,\n  popupDirection,\n  onClose,\n  ...restProps\n}) => {\n  const { window, document } = useDOM();\n  const platform = usePlatform();\n  const { sizeY } = useAdaptivity();\n  const elementRef = React.useRef<HTMLDivElement>();\n\n  const [dropdownStyles, setDropdownStyles] = React.useState<React.CSSProperties>({\n    left: 0,\n    top: 0,\n    opacity: 0,\n    pointerEvents: 'none',\n  });\n  useIsomorphicLayoutEffect(() => {\n    if (!toggleRef) {\n      if (process.env.NODE_ENV === 'development') {\n        warn('toggleRef not passed');\n      }\n      return;\n    }\n\n    const toggleRect = toggleRef.getBoundingClientRect();\n    const elementRect = elementRef.current.getBoundingClientRect();\n    const isTop = popupDirection === 'top' || typeof popupDirection === 'function' && popupDirection(elementRef) === 'top';\n\n    setDropdownStyles({\n      left: toggleRect.left + toggleRect.width - elementRect.width + window.pageXOffset,\n      top: toggleRect.top + window.pageYOffset + (isTop ? -elementRect.height : toggleRect.height),\n    });\n  }, [toggleRef]);\n\n  useGlobalEventListener(document.body, 'click', (e) => {\n    const dropdownElement = elementRef?.current;\n    if (dropdownElement && !dropdownElement.contains(e.target as Node)) {\n      onClose();\n    }\n  });\n\n  return (\n    <div\n      {...restProps}\n      ref={elementRef}\n      onClick={(e) => e.stopPropagation()}\n      style={dropdownStyles}\n      vkuiClass={classNames(getClassName('ActionSheet', platform), 'ActionSheet--desktop', {\n        'ActionSheet--closing': closing,\n      }, `ActionSheet--sizeY-${sizeY}`)}\n    >\n      {children}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}