{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"subtitle\", \"header\", \"text\", \"caption\", \"className\", \"mode\", \"style\", \"getRootRef\", \"getRef\", \"maxHeight\", \"image\", \"src\", \"srcSet\", \"alt\", \"width\", \"height\", \"crossOrigin\", \"decoding\", \"loading\", \"referrerPolicy\", \"sizes\", \"useMap\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport Card from \"../Card/Card\";\nimport Caption from \"../Typography/Caption/Caption\";\nimport Title from \"../Typography/Title/Title\";\nimport Text from \"../Typography/Text/Text\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { hasReactNode } from \"../../lib/utils\";\n\nvar ContentCard = function ContentCard(props) {\n  var subtitle = props.subtitle,\n      header = props.header,\n      text = props.text,\n      caption = props.caption,\n      className = props.className,\n      mode = props.mode,\n      style = props.style,\n      getRootRef = props.getRootRef,\n      getRef = props.getRef,\n      maxHeight = props.maxHeight,\n      image = props.image,\n      src = props.src,\n      srcSet = props.srcSet,\n      alt = props.alt,\n      width = props.width,\n      height = props.height,\n      crossOrigin = props.crossOrigin,\n      decoding = props.decoding,\n      loading = props.loading,\n      referrerPolicy = props.referrerPolicy,\n      sizes = props.sizes,\n      useMap = props.useMap,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var platform = usePlatform();\n  var disabled = restProps.disabled || typeof restProps.onClick !== 'function';\n  var source = image || src;\n  return createScopedElement(Card, {\n    mode: mode,\n    getRootRef: getRootRef,\n    vkuiClass: getClassName('ContentCard', platform),\n    style: style,\n    className: className\n  }, createScopedElement(Tappable, _extends({}, restProps, {\n    disabled: disabled,\n    vkuiClass: \"ContentCard__tappable\"\n  }), (source || srcSet) && createScopedElement(\"img\", {\n    ref: getRef,\n    vkuiClass: \"ContentCard__img\",\n    src: source,\n    srcSet: srcSet,\n    alt: alt,\n    crossOrigin: crossOrigin,\n    decoding: decoding,\n    loading: loading,\n    referrerPolicy: referrerPolicy,\n    sizes: sizes,\n    useMap: useMap,\n    height: height,\n    style: {\n      maxHeight: maxHeight\n    },\n    width: \"100%\"\n  }), createScopedElement(\"div\", {\n    vkuiClass: \"ContentCard__body\"\n  }, hasReactNode(subtitle) && createScopedElement(Caption, {\n    caps: true,\n    vkuiClass: \"ContentCard__text\",\n    weight: \"semibold\",\n    level: \"3\"\n  }, subtitle), hasReactNode(header) && createScopedElement(Title, {\n    vkuiClass: \"ContentCard__text\",\n    weight: \"semibold\",\n    level: \"3\"\n  }, header), hasReactNode(text) && createScopedElement(Text, {\n    vkuiClass: \"ContentCard__text\",\n    weight: \"regular\"\n  }, text), hasReactNode(caption) && createScopedElement(Caption, {\n    vkuiClass: \"ContentCard__text\",\n    weight: \"regular\",\n    level: \"1\"\n  }, caption))));\n};\n\nContentCard.defaultProps = {\n  mode: 'shadow'\n};\nexport default ContentCard;","map":{"version":3,"sources":["../../../src/components/ContentCard/ContentCard.tsx"],"names":["ContentCard","subtitle","header","text","caption","className","mode","style","getRootRef","getRef","maxHeight","image","src","srcSet","alt","width","height","crossOrigin","decoding","loading","referrerPolicy","sizes","useMap","restProps","props","platform","usePlatform","disabled","source","getClassName","hasReactNode"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Card, { CardProps } from '../Card/Card';\nimport Caption from '../Typography/Caption/Caption';\nimport Title from '../Typography/Title/Title';\nimport Text from '../Typography/Text/Text';\nimport Tappable from '../Tappable/Tappable';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { hasReactNode } from '../../lib/utils';\nimport { HasRef, HasRootRef } from '../../types';\nimport './ContentCard.css';\n\nexport interface ContentCardProps extends HasRootRef<HTMLDivElement>, React.ImgHTMLAttributes<HTMLImageElement>, HasRef<HTMLImageElement> {\n  /**\n   Текст над заголовком\n   */\n  subtitle?: React.ReactNode;\n  /**\n   Заголовок\n   */\n  header?: React.ReactNode;\n  /**\n   Текст\n   */\n  text?: React.ReactNode;\n  /**\n   Нижний текст\n   */\n  caption?: React.ReactNode;\n  /**\n    URL или путь к изображению\n   */\n  src?: string;\n  /**\n    @deprecated будет удалено в 5.0.0. Используйте src\n   */\n  image?: string;\n  /**\n    Максимальная высота изображения\n   */\n  maxHeight?: number;\n  /**\n    Аналогично alt для img\n   */\n  alt?: string;\n  /**\n    Отключает Tappable у карточки\n   */\n  disabled?: boolean;\n  /**\n   В точности как у `<Card/>`\n   */\n  mode?: CardProps['mode'];\n}\n\nconst ContentCard: React.FC<ContentCardProps> = (props: ContentCardProps) => {\n  const {\n    subtitle,\n    header,\n    text,\n    caption,\n    // card props\n    className,\n    mode,\n    style,\n    getRootRef,\n    // img props\n    getRef,\n    maxHeight,\n    image,\n    src,\n    srcSet,\n    alt,\n    width,\n    height,\n    crossOrigin,\n    decoding,\n    loading,\n    referrerPolicy,\n    sizes,\n    useMap,\n    ...restProps\n  } = props;\n  const platform = usePlatform();\n\n  const disabled = restProps.disabled || typeof restProps.onClick !== 'function';\n\n  const source = image || src;\n\n  return (\n    <Card mode={mode} getRootRef={getRootRef} vkuiClass={getClassName('ContentCard', platform)} style={style} className={className}>\n      <Tappable {...restProps} disabled={disabled} vkuiClass=\"ContentCard__tappable\">\n        {(source || srcSet) && (\n          <img\n            ref={getRef}\n            vkuiClass=\"ContentCard__img\"\n            src={source}\n            srcSet={srcSet}\n            alt={alt}\n            crossOrigin={crossOrigin}\n            decoding={decoding}\n            loading={loading}\n            referrerPolicy={referrerPolicy}\n            sizes={sizes}\n            useMap={useMap}\n            height={height}\n            style={{ maxHeight }}\n            width=\"100%\"\n          />\n        )}\n        <div vkuiClass=\"ContentCard__body\">\n          {hasReactNode(subtitle) && <Caption caps vkuiClass=\"ContentCard__text\" weight=\"semibold\" level=\"3\">{subtitle}</Caption>}\n          {hasReactNode(header) && <Title vkuiClass=\"ContentCard__text\" weight=\"semibold\" level=\"3\">{header}</Title>}\n          {hasReactNode(text) && <Text vkuiClass=\"ContentCard__text\" weight=\"regular\">{text}</Text>}\n          {hasReactNode(caption) && <Caption vkuiClass=\"ContentCard__text\" weight=\"regular\" level=\"1\">{caption}</Caption>}\n        </div>\n      </Tappable>\n    </Card>\n  );\n};\n\nContentCard.defaultProps = {\n  mode: 'shadow',\n};\n\nexport default ContentCard;\n"]},"metadata":{},"sourceType":"module"}