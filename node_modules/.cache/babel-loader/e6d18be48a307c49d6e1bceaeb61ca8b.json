{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"style\", \"before\", \"inlineAfter\", \"after\", \"value\", \"onChange\", \"getRootRef\", \"getRef\", \"onHeightChange\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from 'react';\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { hasReactNode, isFunction } from \"../../lib/utils\";\nimport { useDOM } from \"../../lib/dom\";\nimport { getClassName } from \"../../helpers/getClassName\";\nexport var WriteBar = function WriteBar(props) {\n  var platform = usePlatform();\n\n  var className = props.className,\n      style = props.style,\n      before = props.before,\n      inlineAfter = props.inlineAfter,\n      after = props.after,\n      value = props.value,\n      onChange = props.onChange,\n      getRootRef = props.getRootRef,\n      getRef = props.getRef,\n      onHeightChange = props.onHeightChange,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var isControlledOutside = value != null;\n\n  var _useDOM = useDOM(),\n      window = _useDOM.window;\n\n  var textareaRef = useExternRef(getRef);\n  var textareaMinHeightRef = React.useRef(null);\n\n  var resize = function resize() {\n    var textareaEl = textareaRef.current;\n\n    if (!textareaEl) {\n      return;\n    }\n\n    var offsetHeight = textareaEl.offsetHeight,\n        scrollHeight = textareaEl.scrollHeight;\n    var style = window.getComputedStyle(textareaEl);\n    var paddingTop = parseInt(style.paddingTop);\n    var paddingBottom = parseInt(style.paddingBottom);\n\n    if (textareaMinHeightRef.current === null) {\n      textareaMinHeightRef.current = offsetHeight;\n    }\n\n    var diff = paddingTop + paddingBottom + 10;\n\n    if (scrollHeight + diff <= offsetHeight) {\n      diff = 0;\n    }\n\n    textareaEl.style.height = '0px';\n    var height = textareaEl.scrollHeight - diff / 4;\n    textareaEl.style.height = String(Math.max(height, textareaMinHeightRef.current)) + 'px';\n\n    if (isFunction(onHeightChange)) {\n      onHeightChange();\n    }\n  };\n\n  var onTextareaChange = function onTextareaChange(event) {\n    if (isFunction(onChange)) {\n      onChange(event);\n    }\n\n    if (!isControlledOutside) {\n      resize();\n    }\n  };\n\n  React.useEffect(function () {\n    resize();\n  }, [value]);\n  return createScopedElement(\"div\", {\n    ref: getRootRef,\n    vkuiClass: getClassName('WriteBar', platform),\n    className: className,\n    style: style\n  }, createScopedElement(\"form\", {\n    vkuiClass: \"WriteBar__form\",\n    onSubmit: function onSubmit(e) {\n      return e.preventDefault();\n    }\n  }, hasReactNode(before) && createScopedElement(\"div\", {\n    vkuiClass: \"WriteBar__before\"\n  }, before), createScopedElement(\"div\", {\n    vkuiClass: \"WriteBar__formIn\"\n  }, createScopedElement(\"textarea\", _extends({}, restProps, {\n    vkuiClass: \"WriteBar__textarea\",\n    onChange: onTextareaChange,\n    ref: textareaRef,\n    value: value\n  })), hasReactNode(inlineAfter) && createScopedElement(\"div\", {\n    vkuiClass: \"WriteBar__inlineAfter\"\n  }, inlineAfter)), hasReactNode(after) && createScopedElement(\"div\", {\n    vkuiClass: \"WriteBar__after\"\n  }, after)));\n};","map":{"version":3,"sources":["../../../src/components/WriteBar/WriteBar.tsx"],"names":["WriteBar","platform","usePlatform","className","style","before","inlineAfter","after","value","onChange","getRootRef","getRef","onHeightChange","restProps","props","isControlledOutside","window","useDOM","textareaRef","useExternRef","textareaMinHeightRef","React","resize","textareaEl","offsetHeight","scrollHeight","paddingTop","parseInt","paddingBottom","diff","height","String","Math","isFunction","onTextareaChange","getClassName","e","hasReactNode"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { hasReactNode, isFunction } from '../../lib/utils';\nimport { useDOM } from '../../lib/dom';\nimport { getClassName } from '../../helpers/getClassName';\nimport { HasRef, HasRootRef } from '../../types';\nimport './WriteBar.css';\n\nexport interface WriteBarProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement>, HasRootRef<HTMLDivElement>, HasRef<HTMLTextAreaElement> {\n  /**\n   * Содержимое, отображаемое слево от поля ввода.\n   */\n  before?: React.ReactNode;\n  /**\n   * Содержимое, отображаемое поверх поля ввода (актуально для iOS)\n   */\n  inlineAfter?: React.ReactNode;\n  /**\n   * Содержимое, отображаемое справа от поля ввода\n   */\n  after?: React.ReactNode;\n  /**\n   * Вызывается при смене высоты поля ввода\n   */\n  onHeightChange?: VoidFunction;\n\n  children?: never;\n}\n\nexport const WriteBar: React.FC<WriteBarProps> = (props: WriteBarProps) => {\n  const platform = usePlatform();\n  const {\n    className,\n    style,\n\n    before,\n    inlineAfter,\n    after,\n\n    value,\n    onChange,\n\n    getRootRef,\n    getRef,\n    onHeightChange,\n    ...restProps\n  } = props;\n\n  const isControlledOutside = value != null;\n\n  const { window } = useDOM();\n  const textareaRef = useExternRef(getRef);\n  const textareaMinHeightRef = React.useRef<number | null>(null);\n\n  const resize = () => {\n    const textareaEl = textareaRef.current;\n    if (!textareaEl) {\n      return;\n    }\n\n    const { offsetHeight, scrollHeight } = textareaEl;\n    const style = window.getComputedStyle(textareaEl);\n    const paddingTop = parseInt(style.paddingTop);\n    const paddingBottom = parseInt(style.paddingBottom);\n\n    if (textareaMinHeightRef.current === null) {\n      textareaMinHeightRef.current = offsetHeight;\n    }\n\n    let diff = paddingTop + paddingBottom + 10;\n\n    if (scrollHeight + diff <= offsetHeight) {\n      diff = 0;\n    }\n\n    textareaEl.style.height = '0px';\n\n    const height = textareaEl.scrollHeight - diff / 4;\n    textareaEl.style.height = String(Math.max(height, textareaMinHeightRef.current)) + 'px';\n\n    if (isFunction(onHeightChange)) {\n      onHeightChange();\n    }\n  };\n\n  const onTextareaChange: React.ChangeEventHandler<HTMLTextAreaElement> = (event) => {\n    if (isFunction(onChange)) {\n      onChange(event);\n    }\n\n    if (!isControlledOutside) {\n      resize();\n    }\n  };\n\n  React.useEffect(() => {\n    resize();\n  }, [value]);\n\n  return (\n    <div\n      ref={getRootRef}\n      vkuiClass={getClassName('WriteBar', platform)}\n      className={className}\n      style={style}\n    >\n      <form vkuiClass=\"WriteBar__form\" onSubmit={(e) => e.preventDefault()}>\n        {hasReactNode(before) &&\n        <div vkuiClass=\"WriteBar__before\">\n          {before}\n        </div>\n        }\n\n        <div vkuiClass=\"WriteBar__formIn\">\n          <textarea\n            {...restProps}\n            vkuiClass=\"WriteBar__textarea\"\n            onChange={onTextareaChange}\n            ref={textareaRef}\n            value={value}\n          />\n\n          {hasReactNode(inlineAfter) &&\n          <div vkuiClass=\"WriteBar__inlineAfter\">\n            {inlineAfter}\n          </div>\n          }\n        </div>\n\n        {hasReactNode(after) &&\n        <div vkuiClass=\"WriteBar__after\">\n          {after}\n        </div>\n        }\n      </form>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}