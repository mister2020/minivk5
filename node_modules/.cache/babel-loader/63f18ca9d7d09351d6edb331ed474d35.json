{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"header\", \"viewWidth\", \"viewHeight\", \"sizeX\", \"hasMouse\", \"onClose\", \"settlingHeight\", \"dynamicContentHeight\", \"getModalContentRef\", \"nav\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from 'react';\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { ModalRootContext, useModalRegistry } from \"../ModalRoot/ModalRootContext\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { withAdaptivity, ViewHeight, ViewWidth } from \"../../hoc/withAdaptivity\";\nimport ModalDismissButton from \"../ModalDismissButton/ModalDismissButton\";\nimport { multiRef } from \"../../lib/utils\";\nimport { ModalType } from \"../ModalRoot/types\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nvar warn = warnOnce('ModalPage');\n\nvar ModalPage = function ModalPage(props) {\n  var platform = usePlatform();\n\n  var _React$useContext = React.useContext(ModalRootContext),\n      updateModalHeight = _React$useContext.updateModalHeight;\n\n  var children = props.children,\n      header = props.header,\n      viewWidth = props.viewWidth,\n      viewHeight = props.viewHeight,\n      sizeX = props.sizeX,\n      hasMouse = props.hasMouse,\n      onClose = props.onClose,\n      settlingHeight = props.settlingHeight,\n      dynamicContentHeight = props.dynamicContentHeight,\n      getModalContentRef = props.getModalContentRef,\n      nav = props.nav,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  React.useEffect(function () {\n    updateModalHeight();\n  }, [children]);\n  var isDesktop = viewWidth >= ViewWidth.SMALL_TABLET && (hasMouse || viewHeight >= ViewHeight.MEDIUM);\n  var canShowCloseBtn = viewWidth >= ViewWidth.SMALL_TABLET;\n  var modalContext = React.useContext(ModalRootContext);\n\n  var _useModalRegistry = useModalRegistry(getNavId(props, warn), ModalType.PAGE),\n      refs = _useModalRegistry.refs;\n\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    vkuiClass: classNames(getClassName('ModalPage', platform), \"ModalPage--sizeX-\".concat(sizeX), {\n      'ModalPage--desktop': isDesktop\n    })\n  }), createScopedElement(\"div\", {\n    vkuiClass: \"ModalPage__in-wrap\",\n    ref: refs.innerElement\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"ModalPage__in\"\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"ModalPage__header\",\n    ref: refs.headerElement\n  }, header), createScopedElement(\"div\", {\n    vkuiClass: \"ModalPage__content-wrap\"\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"ModalPage__content\",\n    ref: multiRef(refs.contentElement, getModalContentRef)\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"ModalPage__content-in\"\n  }, children))), canShowCloseBtn && createScopedElement(ModalDismissButton, {\n    onClick: onClose || modalContext.onClose\n  }))));\n};\n\nModalPage.defaultProps = {\n  settlingHeight: 75\n};\nexport default withAdaptivity(ModalPage, {\n  viewWidth: true,\n  viewHeight: true,\n  sizeX: true,\n  hasMouse: true\n});","map":{"version":3,"sources":["../../../src/components/ModalPage/ModalPage.tsx"],"names":["warn","warnOnce","ModalPage","platform","usePlatform","updateModalHeight","React","children","header","viewWidth","viewHeight","sizeX","hasMouse","onClose","settlingHeight","dynamicContentHeight","getModalContentRef","nav","restProps","props","isDesktop","ViewWidth","ViewHeight","canShowCloseBtn","modalContext","refs","useModalRegistry","getNavId","ModalType","classNames","getClassName","innerElement","headerElement","multiRef","withAdaptivity"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { ModalRootContext, useModalRegistry } from '../ModalRoot/ModalRootContext';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { withAdaptivity, AdaptivityProps, ViewHeight, ViewWidth } from '../../hoc/withAdaptivity';\nimport ModalDismissButton from '../ModalDismissButton/ModalDismissButton';\nimport { Ref } from '../../types';\nimport { multiRef } from '../../lib/utils';\nimport { ModalType } from '../ModalRoot/types';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { warnOnce } from '../../lib/warnOnce';\nimport './ModalPage.css';\n\nexport interface ModalPageProps extends React.HTMLAttributes<HTMLDivElement>, AdaptivityProps, NavIdProps {\n  /**\n   * Шапка модальной страницы, `<ModalPageHeader />`\n   */\n  header?: React.ReactNode;\n  onClose?: VoidFunction;\n  /**\n   * Процент, на который изначально будет открыта модальная страница. При `settlingHeight={100}` модальная страница раскрывается на всю высоту.\n   */\n  settlingHeight?: number;\n  /**\n   * Если высота контента в модальной странице может поменяться, нужно установить это свойство\n   */\n  dynamicContentHeight?: boolean;\n  getModalContentRef?: Ref<HTMLDivElement>;\n}\n\nconst warn = warnOnce('ModalPage');\nconst ModalPage: React.FC<ModalPageProps> = (props: ModalPageProps) => {\n  const platform = usePlatform();\n  const { updateModalHeight } = React.useContext(ModalRootContext);\n  const {\n    children,\n    header,\n    viewWidth,\n    viewHeight,\n    sizeX,\n    hasMouse,\n    onClose,\n    settlingHeight,\n    dynamicContentHeight,\n    getModalContentRef,\n    nav,\n    ...restProps\n  } = props;\n\n  React.useEffect(() => {\n    updateModalHeight();\n  }, [children]);\n\n  const isDesktop = viewWidth >= ViewWidth.SMALL_TABLET && (hasMouse || viewHeight >= ViewHeight.MEDIUM);\n  const canShowCloseBtn = viewWidth >= ViewWidth.SMALL_TABLET;\n\n  const modalContext = React.useContext(ModalRootContext);\n  const { refs } = useModalRegistry(getNavId(props, warn), ModalType.PAGE);\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(getClassName('ModalPage', platform), `ModalPage--sizeX-${sizeX}`, {\n        'ModalPage--desktop': isDesktop,\n      })}\n    >\n      <div vkuiClass=\"ModalPage__in-wrap\" ref={refs.innerElement}>\n        <div vkuiClass=\"ModalPage__in\">\n          <div vkuiClass=\"ModalPage__header\" ref={refs.headerElement}>\n            {header}\n          </div>\n\n          <div vkuiClass=\"ModalPage__content-wrap\">\n            <div vkuiClass=\"ModalPage__content\" ref={multiRef<HTMLDivElement>(refs.contentElement, getModalContentRef)}>\n              <div vkuiClass=\"ModalPage__content-in\">\n                {children}\n              </div>\n            </div>\n          </div>\n          {canShowCloseBtn && <ModalDismissButton onClick={onClose || modalContext.onClose} />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModalPage.defaultProps = {\n  settlingHeight: 75,\n};\n\nexport default withAdaptivity(ModalPage, {\n  viewWidth: true,\n  viewHeight: true,\n  sizeX: true,\n  hasMouse: true,\n});\n"]},"metadata":{},"sourceType":"module"}