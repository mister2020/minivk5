{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"value\", \"option\", \"removable\", \"onRemove\", \"removeAriaLabel\", \"before\", \"after\", \"children\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from 'react';\nimport { Icon16Cancel } from '@vkontakte/icons';\nimport { getTitleFromChildren, hasReactNode, noop } from \"../../lib/utils\";\nimport { classNames } from \"../../lib/classNames\";\nimport Caption from \"../Typography/Caption/Caption\";\nimport Tappable from \"../Tappable/Tappable\";\n\nvar Chip = function Chip(_ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? '' : _ref$value,\n      option = _ref.option,\n      _ref$removable = _ref.removable,\n      removable = _ref$removable === void 0 ? true : _ref$removable,\n      _ref$onRemove = _ref.onRemove,\n      onRemove = _ref$onRemove === void 0 ? noop : _ref$onRemove,\n      _ref$removeAriaLabel = _ref.removeAriaLabel,\n      removeAriaLabel = _ref$removeAriaLabel === void 0 ? 'Удалить' : _ref$removeAriaLabel,\n      _ref$before = _ref.before,\n      before = _ref$before === void 0 ? null : _ref$before,\n      after = _ref.after,\n      children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var onRemoveWrapper = React.useCallback(function (event) {\n    onRemove(event, value);\n  }, [onRemove, value]);\n  var title = getTitleFromChildren(children);\n  return createScopedElement(\"div\", _extends({\n    vkuiClass: classNames('Chip', {\n      'Chip--removable': removable\n    }),\n    role: \"option\",\n    \"aria-label\": title\n  }, restProps), createScopedElement(\"div\", {\n    vkuiClass: \"Chip__in\",\n    role: \"presentation\"\n  }, hasReactNode(before) && createScopedElement(\"div\", {\n    vkuiClass: \"Chip__before\"\n  }, before), createScopedElement(Caption, {\n    level: \"1\",\n    weight: \"regular\",\n    vkuiClass: \"Chip__content\",\n    title: title,\n    \"aria-hidden\": \"true\"\n  }, children), hasReactNode(after) && createScopedElement(\"div\", {\n    vkuiClass: \"Chip__after\"\n  }, after), removable && createScopedElement(Tappable, {\n    Component: \"button\",\n    vkuiClass: \"Chip__remove\",\n    onClick: onRemoveWrapper,\n    hasHover: false,\n    hasActive: false,\n    \"aria-label\": \"\".concat(removeAriaLabel, \" \").concat(title)\n  }, createScopedElement(Icon16Cancel, {\n    \"aria-hidden\": true\n  }))));\n};\n\nexport default Chip;","map":{"version":3,"sources":["../../../src/components/Chip/Chip.tsx"],"names":["Chip","value","option","removable","onRemove","noop","removeAriaLabel","before","after","children","restProps","onRemoveWrapper","title","getTitleFromChildren","classNames","hasReactNode"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Icon16Cancel } from '@vkontakte/icons';\nimport { getTitleFromChildren, hasReactNode, noop } from '../../lib/utils';\nimport { classNames } from '../../lib/classNames';\nimport Caption from '../Typography/Caption/Caption';\nimport Tappable from '../Tappable/Tappable';\nimport './Chip.css';\n\ntype ChipValue = string | number;\n\nexport interface ChipProps extends React.HTMLAttributes<HTMLDivElement> {\n  value: ChipValue;\n  option?: { value?: ChipValue };\n  onRemove?: (event?: React.MouseEvent, value?: ChipValue) => void;\n  removable?: boolean;\n  removeAriaLabel?: string;\n  before?: React.ReactNode;\n  after?: React.ReactNode;\n}\n\nconst Chip: React.FC<ChipProps> = ({\n  value = '',\n  option,\n  removable = true,\n  onRemove = noop,\n  removeAriaLabel = 'Удалить',\n  before = null,\n  after,\n  children,\n  ...restProps\n}: ChipProps) => {\n  const onRemoveWrapper = React.useCallback((event: React.MouseEvent) => {\n    onRemove(event, value);\n  }, [onRemove, value]);\n  const title = getTitleFromChildren(children);\n\n  return (\n    <div\n      vkuiClass={classNames('Chip', { 'Chip--removable': removable })}\n      role=\"option\"\n      aria-label={title}\n      {...restProps}\n    >\n      <div vkuiClass=\"Chip__in\" role=\"presentation\">\n        {hasReactNode(before) && <div vkuiClass=\"Chip__before\">{before}</div>}\n        <Caption level=\"1\" weight=\"regular\" vkuiClass=\"Chip__content\" title={title} aria-hidden=\"true\">{children}</Caption>\n        {hasReactNode(after) && <div vkuiClass=\"Chip__after\">{after}</div>}\n\n        {removable &&\n          <Tappable\n            Component=\"button\"\n            vkuiClass=\"Chip__remove\"\n            onClick={onRemoveWrapper}\n            hasHover={false}\n            hasActive={false}\n            aria-label={`${removeAriaLabel} ${title}`}\n          >\n            <Icon16Cancel aria-hidden={true} />\n          </Tappable>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Chip;\n"]},"metadata":{},"sourceType":"module"}