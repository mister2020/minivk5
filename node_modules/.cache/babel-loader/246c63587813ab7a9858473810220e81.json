{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"onClose\", \"opened\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from 'react';\nimport FixedLayout from \"../FixedLayout/FixedLayout\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { ViewWidth } from \"../AdaptivityProvider/AdaptivityContext\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nexport var PanelHeaderContext = function PanelHeaderContext(_ref) {\n  var children = _ref.children,\n      onClose = _ref.onClose,\n      _ref$opened = _ref.opened,\n      opened = _ref$opened === void 0 ? false : _ref$opened,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useDOM = useDOM(),\n      document = _useDOM.document;\n\n  var platform = usePlatform();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      closing = _React$useState2[0],\n      setClosing = _React$useState2[1];\n\n  var _useAdaptivity = useAdaptivity(),\n      viewWidth = _useAdaptivity.viewWidth;\n\n  var isDesktop = viewWidth >= ViewWidth.SMALL_TABLET;\n  var elementRef = React.useRef(); // start closing on \"opened\" change\n\n  useIsomorphicLayoutEffect(function () {\n    !opened && setClosing(true);\n  }, [opened]); // start closing on outer click\n\n  useGlobalEventListener(document, 'click', isDesktop && opened && !closing && function (event) {\n    if (elementRef.current && !elementRef.current.contains(event.target)) {\n      onClose();\n    }\n  }); // fallback onAnimationEnd when animationend not supported\n\n  var onAnimationEnd = function onAnimationEnd() {\n    return setClosing(false);\n  };\n\n  var animationFallback = useTimeout(onAnimationEnd, 200);\n  React.useEffect(function () {\n    return closing ? animationFallback.set() : animationFallback.clear();\n  }, [closing]);\n  return createScopedElement(FixedLayout, _extends({}, restProps, {\n    vkuiClass: classNames(getClassName('PanelHeaderContext', platform), {\n      'PanelHeaderContext--opened': opened,\n      'PanelHeaderContext--closing': closing,\n      'PanelHeaderContext--desktop': isDesktop\n    }),\n    vertical: \"top\"\n  }), createScopedElement(\"div\", {\n    vkuiClass: \"PanelHeaderContext__in\",\n    ref: elementRef,\n    onAnimationEnd: closing ? onAnimationEnd : null\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"PanelHeaderContext__content\"\n  }, (opened || closing) && children)), !isDesktop && (opened || closing) && createScopedElement(\"div\", {\n    onClick: onClose,\n    vkuiClass: \"PanelHeaderContext__fade\"\n  }));\n};","map":{"version":3,"sources":["../../../src/components/PanelHeaderContext/PanelHeaderContext.tsx"],"names":["PanelHeaderContext","children","onClose","opened","restProps","document","useDOM","platform","usePlatform","closing","setClosing","React","viewWidth","useAdaptivity","isDesktop","ViewWidth","elementRef","useIsomorphicLayoutEffect","useGlobalEventListener","event","onAnimationEnd","animationFallback","useTimeout","classNames","getClassName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { ViewWidth } from '../AdaptivityProvider/AdaptivityContext';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useDOM } from '../../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport './PanelHeaderContext.css';\n\nexport interface PanelHeaderContextProps extends React.HTMLAttributes<HTMLDivElement> {\n  opened: boolean;\n  onClose: VoidFunction;\n}\n\nexport const PanelHeaderContext: React.FC<PanelHeaderContextProps> = ({\n  children,\n  onClose,\n  opened = false,\n  ...restProps\n}) => {\n  const { document } = useDOM();\n  const platform = usePlatform();\n  const [closing, setClosing] = React.useState(false);\n  const { viewWidth } = useAdaptivity();\n  const isDesktop = viewWidth >= ViewWidth.SMALL_TABLET;\n  const elementRef = React.useRef<HTMLDivElement>();\n\n  // start closing on \"opened\" change\n  useIsomorphicLayoutEffect(() => {\n    !opened && setClosing(true);\n  }, [opened]);\n\n  // start closing on outer click\n  useGlobalEventListener(document, 'click', isDesktop && opened && !closing && ((event) => {\n    if (elementRef.current && !elementRef.current.contains(event.target as Node)) {\n      onClose();\n    }\n  }));\n\n  // fallback onAnimationEnd when animationend not supported\n  const onAnimationEnd = () => setClosing(false);\n  const animationFallback = useTimeout(onAnimationEnd, 200);\n  React.useEffect(() => closing ? animationFallback.set() : animationFallback.clear(), [closing]);\n\n  return (\n    <FixedLayout {...restProps} vkuiClass={classNames(getClassName('PanelHeaderContext', platform), {\n      'PanelHeaderContext--opened': opened,\n      'PanelHeaderContext--closing': closing,\n      'PanelHeaderContext--desktop': isDesktop,\n    })} vertical=\"top\">\n      <div vkuiClass=\"PanelHeaderContext__in\" ref={elementRef} onAnimationEnd={closing ? onAnimationEnd : null}>\n        <div vkuiClass=\"PanelHeaderContext__content\">\n          {(opened || closing) && children}\n        </div>\n      </div>\n      {!isDesktop && (opened || closing) && <div onClick={onClose} vkuiClass=\"PanelHeaderContext__fade\" />}\n    </FixedLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}