{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"text\", \"caption\", \"before\", \"after\", \"bottom\", \"actions\", \"multiline\", \"sizeY\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport Text from \"../Typography/Text/Text\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\n\nvar RichCell = function RichCell(_ref) {\n  var children = _ref.children,\n      text = _ref.text,\n      caption = _ref.caption,\n      before = _ref.before,\n      after = _ref.after,\n      bottom = _ref.bottom,\n      actions = _ref.actions,\n      multiline = _ref.multiline,\n      sizeY = _ref.sizeY,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var platform = usePlatform();\n  return createScopedElement(Tappable, _extends({}, restProps, {\n    vkuiClass: classNames(getClassName('RichCell', platform), {\n      'RichCell--mult': multiline\n    }, \"RichCell--sizeY-\".concat(sizeY))\n  }), before, createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__in\"\n  }, after, createScopedElement(Text, {\n    weight: \"medium\",\n    vkuiClass: \"RichCell__content\"\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__children\"\n  }, children), hasReactNode(after) && createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__after\"\n  }, after)), hasReactNode(text) && createScopedElement(Text, {\n    weight: \"regular\",\n    vkuiClass: \"RichCell__text\"\n  }, text), hasReactNode(caption) && createScopedElement(Subhead, {\n    Component: \"span\",\n    weight: \"regular\",\n    vkuiClass: \"RichCell__caption\"\n  }, caption), (hasReactNode(bottom) || hasReactNode(actions)) && createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__bottom\"\n  }, bottom, hasReactNode(actions) && createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__actions\"\n  }, actions))));\n};\n\nexport default withAdaptivity(RichCell, {\n  sizeY: true\n});","map":{"version":3,"sources":["../../../src/components/RichCell/RichCell.tsx"],"names":["RichCell","children","text","caption","before","after","bottom","actions","multiline","sizeY","restProps","platform","usePlatform","classNames","getClassName","hasReactNode","withAdaptivity"],"mappings":";;;;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,OAAA,QAAA,MAAA,sBAAA;AACA,SAAA,YAAA,QAAA,iBAAA;AACA,OAAA,IAAA,MAAA,yBAAA;AACA,OAAA,OAAA,MAAA,+BAAA;AACA,SAAA,cAAA,QAAA,0BAAA;;AAmCA,IAAMA,QAAiC,GAAG,SAApCA,QAAoC,CAAA,IAAA,EAWpC;AAAA,MAVJC,QAUI,GAAA,IAAA,CAVJA,QAUI;AAAA,MATJC,IASI,GAAA,IAAA,CATJA,IASI;AAAA,MARJC,OAQI,GAAA,IAAA,CARJA,OAQI;AAAA,MAPJC,MAOI,GAAA,IAAA,CAPJA,MAOI;AAAA,MANJC,KAMI,GAAA,IAAA,CANJA,KAMI;AAAA,MALJC,MAKI,GAAA,IAAA,CALJA,MAKI;AAAA,MAJJC,OAII,GAAA,IAAA,CAJJA,OAII;AAAA,MAHJC,SAGI,GAAA,IAAA,CAHJA,SAGI;AAAA,MAFJC,KAEI,GAAA,IAAA,CAFJA,KAEI;AAAA,MADDC,SACC,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AACJ,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AAEA,SACE,mBAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EACPC,UAAU,CACRC,YAAY,CAAA,UAAA,EADJ,QACI,CADJ,EAER;AACE,wBAAkBN;AADpB,KAFQ,EAAA,mBAAA,MAAA,CAAA,KAAA,CAAA;AAHd,GAAA,CAAA,EAAA,MAAA,EAaE,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,KAAA,EAGE,mBAAA,CAAA,IAAA,EAAA;AAAM,IAAA,MAAM,EAAZ,QAAA;AAAsB,IAAA,SAAS,EAAC;AAAhC,GAAA,EACE,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EADF,QACE,CADF,EAEGO,YAAY,CAAZA,KAAY,CAAZA,IAAuB,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAL5B,KAK4B,CAF1B,CAHF,EAOGA,YAAY,CAAZA,IAAY,CAAZA,IAAsB,mBAAA,CAAA,IAAA,EAAA;AAAM,IAAA,MAAM,EAAZ,SAAA;AAAuB,IAAA,SAAS,EAAC;AAAjC,GAAA,EAPzB,IAOyB,CAPzB,EAQGA,YAAY,CAAZA,OAAY,CAAZA,IAAyB,mBAAA,CAAA,OAAA,EAAA;AAAS,IAAA,SAAS,EAAlB,MAAA;AAA0B,IAAA,MAAM,EAAhC,SAAA;AAA2C,IAAA,SAAS,EAAC;AAArD,GAAA,EAR5B,OAQ4B,CAR5B,EASG,CAACA,YAAY,CAAZA,MAAY,CAAZA,IAAwBA,YAAY,CAArC,OAAqC,CAArC,KACC,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,MAAA,EAEGA,YAAY,CAAZA,OAAY,CAAZA,IAAyB,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EA1BpC,OA0BoC,CAF5B,CAVJ,CAbF,CADF;AAdF,CAAA;;AAgDA,eAAeC,cAAc,CAAA,QAAA,EAAW;AAAEP,EAAAA,KAAK,EAAE;AAAT,CAAX,CAA7B","sourcesContent":["import * as React from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getClassName } from '../../helpers/getClassName';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\nimport { hasReactNode } from '../../lib/utils';\nimport Text from '../Typography/Text/Text';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport { withAdaptivity } from '../../hoc/withAdaptivity';\nimport './RichCell.css';\n\nexport interface RichCellProps extends TappableProps {\n  /**\n   * Контейнер для текста под `children`.\n   */\n  text?: React.ReactNode;\n  /**\n   * Контейнер для текста под `text`.\n   */\n  caption?: React.ReactNode;\n  /**\n   * Контейнер для контента под `caption`. Например `<UsersStack size=\"s\" />`\n   */\n  bottom?: React.ReactNode;\n  /**\n   * Кнопка или набор кнопок `<Button size=\"s\" />`. Располагается под `bottom`.\n   */\n  actions?: React.ReactNode;\n  /**\n   * `<Avatar size={48|72} />`\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка 28 или текст\n   */\n  after?: React.ReactNode;\n  /**\n   * Убирает анимацию нажатия\n   */\n  disabled?: boolean;\n  multiline?: boolean;\n}\n\nconst RichCell: React.FC<RichCellProps> = ({\n  children,\n  text,\n  caption,\n  before,\n  after,\n  bottom,\n  actions,\n  multiline,\n  sizeY,\n  ...restProps\n}) => {\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      {...restProps}\n      vkuiClass={\n        classNames(\n          getClassName('RichCell', platform),\n          {\n            'RichCell--mult': multiline,\n          },\n          `RichCell--sizeY-${sizeY}`,\n        )\n      }\n    >\n      {before}\n      <div vkuiClass=\"RichCell__in\">\n        {/* Этот after будет скрыт из верстки. Он нужен для CSS */}\n        {after}\n        <Text weight=\"medium\" vkuiClass=\"RichCell__content\">\n          <div vkuiClass=\"RichCell__children\">{children}</div>\n          {hasReactNode(after) && <div vkuiClass=\"RichCell__after\">{after}</div>}\n        </Text>\n        {hasReactNode(text) && <Text weight=\"regular\" vkuiClass=\"RichCell__text\">{text}</Text>}\n        {hasReactNode(caption) && <Subhead Component=\"span\" weight=\"regular\" vkuiClass=\"RichCell__caption\">{caption}</Subhead>}\n        {(hasReactNode(bottom) || hasReactNode(actions)) && (\n          <div vkuiClass=\"RichCell__bottom\">\n            {bottom}\n            {hasReactNode(actions) && <div vkuiClass=\"RichCell__actions\">{actions}</div>}\n          </div>\n        )}\n      </div>\n    </Tappable>\n  );\n};\n\nexport default withAdaptivity(RichCell, { sizeY: true });\n"]},"metadata":{},"sourceType":"module"}