{"ast":null,"code":"import { canUseDOM } from '@vkontakte/vkjs';\n/*\n * Получает координату по оси абсцисс из touch- или mouse-события\n */\n\nvar coordX = function coordX(e) {\n  if (e.clientX != null) {\n    return e.clientX;\n  }\n\n  return e.changedTouches && e.changedTouches[0].clientX;\n};\n/*\n * Получает координату по оси ординат из touch- или mouse-события\n */\n\n\nvar coordY = function coordY(e) {\n  if (e.clientY != null) {\n    return e.clientY;\n  }\n\n  return e.changedTouches && e.changedTouches[0].clientY;\n}; // eslint-disable-next-line no-restricted-globals\n\n\nvar touchEnabled = canUseDOM && 'ontouchstart' in window;\n/*\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\n\nfunction getSupportedEvents() {\n  if (touchEnabled) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n}\n/*\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\n\n\nfunction rubber(offset, dimension, resistanceRate, isAndroid) {\n  if (isAndroid || offset < 0) {\n    return offset;\n  }\n\n  var offsettedResistance = offset * resistanceRate;\n  return offsettedResistance * dimension / (offsettedResistance + dimension);\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };","map":{"version":3,"sources":["../../src/lib/touch.ts"],"names":["coordX","e","coordY","touchEnabled","canUseDOM","isAndroid","offset","offsettedResistance"],"mappings":"AAAA,SAAA,SAAA,QAAA,iBAAA;AAKA;AACA;AACA;;AACA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAA,CAAA,EAA+B;AAC5C,MAAIC,CAAC,CAADA,OAAAA,IAAJ,IAAA,EAAuB;AACrB,WAAOA,CAAC,CAAR,OAAA;AACD;;AACD,SAAOA,CAAC,CAADA,cAAAA,IAAoBA,CAAC,CAADA,cAAAA,CAAAA,CAAAA,EAA3B,OAAA;AAJF,CAAA;AAOA;AACA;AACA;;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAA,CAAA,EAA+B;AAC5C,MAAID,CAAC,CAADA,OAAAA,IAAJ,IAAA,EAAuB;AACrB,WAAOA,CAAC,CAAR,OAAA;AACD;;AACD,SAAOA,CAAC,CAADA,cAAAA,IAAoBA,CAAC,CAADA,cAAAA,CAAAA,CAAAA,EAA3B,OAAA;AAJF,CAAA,C,CAOA;;;AACA,IAAME,YAAqB,GAAGC,SAAS,IAAI,kBAA3C,MAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,SAAA,kBAAA,GAAwC;AACtC,MAAA,YAAA,EAAkB;AAChB,WAAO,CAAA,YAAA,EAAA,WAAA,EAAA,UAAA,EAAP,aAAO,CAAP;AACD;;AAED,SAAO,CAAA,WAAA,EAAA,WAAA,EAAA,SAAA,EAAP,YAAO,CAAP;AACD;AAED;AACA;AACA;;;AACA,SAAA,MAAA,CAAA,MAAA,EAAA,SAAA,EAAA,cAAA,EAAA,SAAA,EAAuG;AACrG,MAAIC,SAAS,IAAIC,MAAM,GAAvB,CAAA,EAA6B;AAC3B,WAAA,MAAA;AACD;;AAED,MAAMC,mBAAmB,GAAGD,MAAM,GAAlC,cAAA;AACA,SAAOC,mBAAmB,GAAnBA,SAAAA,IAAmCA,mBAAmB,GAA7D,SAAOA,CAAP;AACD;;AAED,SAAA,kBAAA,EAAA,MAAA,EAAA,MAAA,EAAA,YAAA,EAAA,MAAA","sourcesContent":["import { canUseDOM } from '@vkontakte/vkjs';\n\nexport interface VKUITouchEvent extends MouseEvent, TouchEvent {}\nexport type VKUITouchEventHander = (e: VKUITouchEvent) => void;\n\n/*\n * Получает координату по оси абсцисс из touch- или mouse-события\n */\nconst coordX = (e: VKUITouchEvent): number => {\n  if (e.clientX != null) {\n    return e.clientX;\n  }\n  return e.changedTouches && e.changedTouches[0].clientX;\n};\n\n/*\n * Получает координату по оси ординат из touch- или mouse-события\n */\nconst coordY = (e: VKUITouchEvent): number => {\n  if (e.clientY != null) {\n    return e.clientY;\n  }\n  return e.changedTouches && e.changedTouches[0].clientY;\n};\n\n// eslint-disable-next-line no-restricted-globals\nconst touchEnabled: boolean = canUseDOM && 'ontouchstart' in window;\n\n/*\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\nfunction getSupportedEvents(): string[] {\n  if (touchEnabled) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n}\n\n/*\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\nfunction rubber(offset: number, dimension: number, resistanceRate: number, isAndroid: boolean): number {\n  if (isAndroid || offset < 0) {\n    return offset;\n  }\n\n  const offsettedResistance = offset * resistanceRate;\n  return offsettedResistance * dimension / (offsettedResistance + dimension);\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };\n"]},"metadata":{},"sourceType":"module"}