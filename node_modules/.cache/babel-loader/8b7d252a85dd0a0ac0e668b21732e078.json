{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"mode\", \"children\", \"count\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { Icon24Send, Icon28AddCircleOutline, Icon28AttachOutline, Icon28CheckCircleOutline, Icon48WritebarDone, Icon48WritebarSend } from '@vkontakte/icons';\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { IOS } from \"../../lib/platform\";\nimport Counter from \"../Counter/Counter\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { hasReactNode } from \"../../lib/utils\";\nvar warn = warnOnce('WriteBarIcon');\nvar IS_DEV = process.env.NODE_ENV === 'development';\nexport var WriteBarIcon = function WriteBarIcon(_ref) {\n  var mode = _ref.mode,\n      children = _ref.children,\n      count = _ref.count,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var platform = usePlatform();\n  var icon;\n  var ariaLabel;\n\n  switch (mode) {\n    case 'attach':\n      icon = platform === IOS ? createScopedElement(Icon28AddCircleOutline, null) : createScopedElement(Icon28AttachOutline, null);\n      ariaLabel = 'Прикрепить файл';\n      break;\n\n    case 'send':\n      icon = platform === IOS ? createScopedElement(Icon48WritebarSend, null) : createScopedElement(Icon24Send, null);\n      ariaLabel = 'Отправить';\n      break;\n\n    case 'done':\n      icon = platform === IOS ? createScopedElement(Icon48WritebarDone, null) : createScopedElement(Icon28CheckCircleOutline, null);\n      ariaLabel = 'Готово';\n      break;\n\n    default:\n      break;\n  }\n\n  if (IS_DEV && !restProps['aria-label'] && !ariaLabel) {\n    warn('[WriteBarIcon/a11y] У WriteBarIcon нет aria-label. Кнопка будет недоступной для части пользователей.');\n  }\n\n  return createScopedElement(Tappable, _extends({\n    \"aria-label\": ariaLabel\n  }, restProps, {\n    Component: \"button\",\n    hasHover: false,\n    activeMode: \"WriteBarIcon__active\",\n    vkuiClass: classNames(getClassName('WriteBarIcon', platform), _defineProperty({}, \"WriteBarIcon--\".concat(mode), !!mode))\n  }), createScopedElement(\"span\", {\n    vkuiClass: \"WriteBarIcon__in\"\n  }, icon || children, hasReactNode(count) && createScopedElement(Counter, {\n    vkuiClass: \"WriteBarIcon__counter\",\n    size: \"s\"\n  }, count)));\n};","map":{"version":3,"sources":["../../../src/components/WriteBarIcon/WriteBarIcon.tsx"],"names":["warn","warnOnce","IS_DEV","process","WriteBarIcon","mode","children","count","restProps","platform","usePlatform","icon","ariaLabel","classNames","getClassName","hasReactNode"],"mappings":";;;;;AACA,SAAA,UAAA,EAAA,sBAAA,EAAA,mBAAA,EAAA,wBAAA,EAAA,kBAAA,EAAA,kBAAA,QAAA,kBAAA;AAQA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,GAAA,QAAA,oBAAA;AACA,OAAA,OAAA,MAAA,oBAAA;AACA,OAAA,QAAA,MAAA,sBAAA;AACA,SAAA,QAAA,QAAA,oBAAA;AACA,SAAA,YAAA,QAAA,iBAAA;AAmBA,IAAMA,IAAI,GAAGC,QAAQ,CAArB,cAAqB,CAArB;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAf,aAAA;AAEA,OAAO,IAAMC,YAAyC,GAAG,SAA5CA,YAA4C,CAAA,IAAA,EAKhC;AAAA,MAJvBC,IAIuB,GAAA,IAAA,CAJvBA,IAIuB;AAAA,MAHvBC,QAGuB,GAAA,IAAA,CAHvBA,QAGuB;AAAA,MAFvBC,KAEuB,GAAA,IAAA,CAFvBA,KAEuB;AAAA,MADpBC,SACoB,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AACvB,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AAEA,MAAA,IAAA;AACA,MAAA,SAAA;;AAEA,UAAA,IAAA;AACE,SAAA,QAAA;AACEC,MAAAA,IAAI,GAAGF,QAAQ,KAARA,GAAAA,GAAmB,mBAAA,CAAA,sBAAA,EAAnBA,IAAmB,CAAnBA,GAAgD,mBAAA,CAAA,mBAAA,EAAvDE,IAAuD,CAAvDA;AACAC,MAAAA,SAAS,GAATA,iBAAAA;AACA;;AAEF,SAAA,MAAA;AACED,MAAAA,IAAI,GAAGF,QAAQ,KAARA,GAAAA,GAAmB,mBAAA,CAAA,kBAAA,EAAnBA,IAAmB,CAAnBA,GAA4C,mBAAA,CAAA,UAAA,EAAnDE,IAAmD,CAAnDA;AACAC,MAAAA,SAAS,GAATA,WAAAA;AACA;;AAEF,SAAA,MAAA;AACED,MAAAA,IAAI,GAAGF,QAAQ,KAARA,GAAAA,GAAmB,mBAAA,CAAA,kBAAA,EAAnBA,IAAmB,CAAnBA,GAA4C,mBAAA,CAAA,wBAAA,EAAnDE,IAAmD,CAAnDA;AACAC,MAAAA,SAAS,GAATA,QAAAA;AACA;;AAEF;AACE;AAjBJ;;AAoBA,MAAIV,MAAM,IAAI,CAACM,SAAS,CAApBN,YAAoB,CAApBA,IAAsC,CAA1C,SAAA,EAAsD;AACpDF,IAAAA,IAAI,CAAJA,sGAAI,CAAJA;AACD;;AAED,SACE,mBAAA,CAAA,QAAA,EAAA,QAAA,CAAA;AACE,kBAAYY;AADd,GAAA,EAAA,SAAA,EAAA;AAGE,IAAA,SAAS,EAHX,QAAA;AAIE,IAAA,QAAQ,EAJV,KAAA;AAKE,IAAA,UAAU,EALZ,sBAAA;AAME,IAAA,SAAS,EAAEC,UAAU,CAACC,YAAY,CAAA,cAAA,EAAb,QAAa,CAAb,EAAA,eAAA,CAAA,EAAA,EAAA,iBAAA,MAAA,CAAA,IAAA,CAAA,EACQ,CAAC,CADT,IAAA,CAAA;AANvB,GAAA,CAAA,EAUE,mBAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EACGH,IAAI,IADP,QAAA,EAEGI,YAAY,CAAZA,KAAY,CAAZA,IAAuB,mBAAA,CAAA,OAAA,EAAA;AAAS,IAAA,SAAS,EAAlB,uBAAA;AAA2C,IAAA,IAAI,EAAC;AAAhD,GAAA,EAb9B,KAa8B,CAF1B,CAVF,CADF;AAnCK,CAAA","sourcesContent":["import * as React from 'react';\nimport {\n  Icon24Send,\n  Icon28AddCircleOutline,\n  Icon28AttachOutline,\n  Icon28CheckCircleOutline,\n  Icon48WritebarDone,\n  Icon48WritebarSend,\n} from '@vkontakte/icons';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { IOS } from '../../lib/platform';\nimport Counter from '../Counter/Counter';\nimport Tappable from '../Tappable/Tappable';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { hasReactNode } from '../../lib/utils';\nimport './WriteBarIcon.css';\n\nexport interface WriteBarIconProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * Предустановленные типы кнопок в WriteBar для отрисовки иконки в зависимости от платформы.\n   * Если передать валидное значение для этого свойства, `children` игнорируется.\n   *\n   * - `attach` – иконка прикрепления.\n   * - `send` – иконка отправки.\n   * - `done` – иконка отправки в режиме редактирования.\n   */\n  mode?: 'attach' | 'send' | 'done';\n  /**\n   * Значение счётчика для кнопки. Например, для количества прикреплённых файлов.\n   */\n  count?: number;\n}\n\nconst warn = warnOnce('WriteBarIcon');\nconst IS_DEV = process.env.NODE_ENV === 'development';\n\nexport const WriteBarIcon: React.FC<WriteBarIconProps> = ({\n  mode,\n  children,\n  count,\n  ...restProps\n}: WriteBarIconProps) => {\n  const platform = usePlatform();\n\n  let icon: React.ReactNode;\n  let ariaLabel: string;\n\n  switch (mode) {\n    case 'attach':\n      icon = platform === IOS ? <Icon28AddCircleOutline /> : <Icon28AttachOutline />;\n      ariaLabel = 'Прикрепить файл';\n      break;\n\n    case 'send':\n      icon = platform === IOS ? <Icon48WritebarSend /> : <Icon24Send />;\n      ariaLabel = 'Отправить';\n      break;\n\n    case 'done':\n      icon = platform === IOS ? <Icon48WritebarDone /> : <Icon28CheckCircleOutline />;\n      ariaLabel = 'Готово';\n      break;\n\n    default:\n      break;\n  }\n\n  if (IS_DEV && !restProps['aria-label'] && !ariaLabel) {\n    warn('[WriteBarIcon/a11y] У WriteBarIcon нет aria-label. Кнопка будет недоступной для части пользователей.');\n  }\n\n  return (\n    <Tappable\n      aria-label={ariaLabel}\n      {...restProps}\n      Component=\"button\"\n      hasHover={false}\n      activeMode=\"WriteBarIcon__active\"\n      vkuiClass={classNames(getClassName('WriteBarIcon', platform), {\n        [`WriteBarIcon--${mode}`]: !!mode,\n      })}\n    >\n      <span vkuiClass=\"WriteBarIcon__in\">\n        {icon || children}\n        {hasReactNode(count) && <Counter vkuiClass=\"WriteBarIcon__counter\" size=\"s\">{count}</Counter>}\n      </span>\n    </Tappable>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}