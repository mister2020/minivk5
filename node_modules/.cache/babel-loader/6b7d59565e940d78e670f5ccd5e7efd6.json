{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"header\", \"subheader\", \"children\", \"actions\", \"actionsLayout\", \"onClose\", \"platform\", \"viewWidth\", \"viewHeight\", \"hasMouse\", \"nav\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from 'react';\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withAdaptivity, ViewHeight, ViewWidth } from \"../../hoc/withAdaptivity\";\nimport ModalRootContext, { useModalRegistry } from \"../ModalRoot/ModalRootContext\";\nimport { ModalType } from \"../ModalRoot/types\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { ModalCardBase } from \"../ModalCardBase/ModalCardBase\";\nvar warn = warnOnce('ModalCard');\n\nvar ModalCard = function ModalCard(props) {\n  var icon = props.icon,\n      header = props.header,\n      subheader = props.subheader,\n      children = props.children,\n      actions = props.actions,\n      actionsLayout = props.actionsLayout,\n      onClose = props.onClose,\n      platform = props.platform,\n      viewWidth = props.viewWidth,\n      viewHeight = props.viewHeight,\n      hasMouse = props.hasMouse,\n      nav = props.nav,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var isDesktop = viewWidth >= ViewWidth.SMALL_TABLET && (hasMouse || viewHeight >= ViewHeight.MEDIUM);\n  var modalContext = React.useContext(ModalRootContext);\n\n  var _useModalRegistry = useModalRegistry(getNavId(props, warn), ModalType.CARD),\n      refs = _useModalRegistry.refs;\n\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    vkuiClass: classNames(getClassName('ModalCard', platform), {\n      'ModalCard--desktop': isDesktop\n    })\n  }), createScopedElement(ModalCardBase, {\n    vkuiClass: \"ModalCard__in\",\n    getRootRef: refs.innerElement,\n    icon: icon,\n    header: header,\n    subheader: subheader,\n    actions: actions,\n    actionsLayout: actionsLayout,\n    onClose: onClose || modalContext.onClose\n  }, children));\n};\n\nModalCard.defaultProps = {\n  actionsLayout: 'horizontal'\n};\nexport default withAdaptivity(withPlatform(ModalCard), {\n  viewWidth: true,\n  viewHeight: true,\n  hasMouse: true\n});","map":{"version":3,"sources":["../../../src/components/ModalCard/ModalCard.tsx"],"names":["warn","warnOnce","ModalCard","icon","header","subheader","children","actions","actionsLayout","onClose","platform","viewWidth","viewHeight","hasMouse","nav","restProps","props","isDesktop","ViewWidth","ViewHeight","modalContext","React","refs","useModalRegistry","getNavId","ModalType","classNames","getClassName","withAdaptivity","withPlatform"],"mappings":";;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,SAAA,YAAA,QAAA,wBAAA;AAEA,SAAA,cAAA,EAAA,UAAA,EAAA,SAAA,QAAA,0BAAA;AACA,OAAA,gBAAA,IAAA,gBAAA,QAAA,+BAAA;AACA,SAAA,SAAA,QAAA,oBAAA;AACA,SAAA,QAAA,QAAA,oBAAA;AACA,SAAA,QAAA,QAAA,oBAAA;AACA,SAAA,aAAA,QAAA,gCAAA;AAKA,IAAMA,IAAI,GAAGC,QAAQ,CAArB,WAAqB,CAArB;;AAEA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,CAAA,KAAA,EAA2B;AACrE,MACEC,IADF,GAcIa,KAdJ,CAAA,IAAA;AAAA,MAEEZ,MAFF,GAcIY,KAdJ,CAAA,MAAA;AAAA,MAGEX,SAHF,GAcIW,KAdJ,CAAA,SAAA;AAAA,MAIEV,QAJF,GAcIU,KAdJ,CAAA,QAAA;AAAA,MAKET,OALF,GAcIS,KAdJ,CAAA,OAAA;AAAA,MAMER,aANF,GAcIQ,KAdJ,CAAA,aAAA;AAAA,MAOEP,OAPF,GAcIO,KAdJ,CAAA,OAAA;AAAA,MAQEN,QARF,GAcIM,KAdJ,CAAA,QAAA;AAAA,MASEL,SATF,GAcIK,KAdJ,CAAA,SAAA;AAAA,MAUEJ,UAVF,GAcII,KAdJ,CAAA,UAAA;AAAA,MAWEH,QAXF,GAcIG,KAdJ,CAAA,QAAA;AAAA,MAYEF,GAZF,GAcIE,KAdJ,CAAA,GAAA;AAAA,MAaKD,SAbL,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;AAgBA,MAAME,SAAS,GAAGN,SAAS,IAAIO,SAAS,CAAtBP,YAAAA,KAAwCE,QAAQ,IAAID,UAAU,IAAIO,UAAU,CAA9F,MAAkBR,CAAlB;AAEA,MAAMS,YAAY,GAAGC,KAAK,CAALA,UAAAA,CAArB,gBAAqBA,CAArB;;AACA,MAAA,iBAAA,GAAiBE,gBAAgB,CAACC,QAAQ,CAAA,KAAA,EAAT,IAAS,CAAT,EAAwBC,SAAS,CAAlE,IAAiC,CAAjC;AAAA,MAAQH,IAAR,GAAA,iBAAA,CAAA,IAAA;;AAEA,SACE,mBAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EAAEI,UAAU,CAACC,YAAY,CAAA,WAAA,EAAb,QAAa,CAAb,EAAsC;AACzD,4BAAsBV;AADmC,KAAtC;AAFvB,GAAA,CAAA,EAME,mBAAA,CAAA,aAAA,EAAA;AACE,IAAA,SAAS,EADX,eAAA;AAEE,IAAA,UAAU,EAAEK,IAAI,CAFlB,YAAA;AAGE,IAAA,IAAI,EAHN,IAAA;AAIE,IAAA,MAAM,EAJR,MAAA;AAKE,IAAA,SAAS,EALX,SAAA;AAME,IAAA,OAAO,EANT,OAAA;AAOE,IAAA,aAAa,EAPf,aAAA;AAQE,IAAA,OAAO,EAAEb,OAAO,IAAIW,YAAY,CAACX;AARnC,GAAA,EAPJ,QAOI,CANF,CADF;AAtBF,CAAA;;AA6CAP,SAAS,CAATA,YAAAA,GAAyB;AACvBM,EAAAA,aAAa,EAAE;AADQ,CAAzBN;AAIA,eAAe0B,cAAc,CAACC,YAAY,CAAb,SAAa,CAAb,EAA0B;AACrDlB,EAAAA,SAAS,EAD4C,IAAA;AAErDC,EAAAA,UAAU,EAF2C,IAAA;AAGrDC,EAAAA,QAAQ,EAAE;AAH2C,CAA1B,CAA7B","sourcesContent":["import * as React from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { HasPlatform } from '../../types';\nimport { withAdaptivity, AdaptivityProps, ViewHeight, ViewWidth } from '../../hoc/withAdaptivity';\nimport ModalRootContext, { useModalRegistry } from '../ModalRoot/ModalRootContext';\nimport { ModalType } from '../ModalRoot/types';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { ModalCardBase, ModalCardBaseProps } from '../ModalCardBase/ModalCardBase';\nimport './ModalCard.css';\n\nexport interface ModalCardProps extends HasPlatform, AdaptivityProps, NavIdProps, ModalCardBaseProps {}\n\nconst warn = warnOnce('ModalCard');\n\nconst ModalCard: React.FC<ModalCardProps> = (props: ModalCardProps) => {\n  const {\n    icon,\n    header,\n    subheader,\n    children,\n    actions,\n    actionsLayout,\n    onClose,\n    platform,\n    viewWidth,\n    viewHeight,\n    hasMouse,\n    nav,\n    ...restProps\n  } = props;\n\n  const isDesktop = viewWidth >= ViewWidth.SMALL_TABLET && (hasMouse || viewHeight >= ViewHeight.MEDIUM);\n\n  const modalContext = React.useContext(ModalRootContext);\n  const { refs } = useModalRegistry(getNavId(props, warn), ModalType.CARD);\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(getClassName('ModalCard', platform), {\n        'ModalCard--desktop': isDesktop,\n      })}\n    >\n      <ModalCardBase\n        vkuiClass=\"ModalCard__in\"\n        getRootRef={refs.innerElement}\n        icon={icon}\n        header={header}\n        subheader={subheader}\n        actions={actions}\n        actionsLayout={actionsLayout}\n        onClose={onClose || modalContext.onClose}\n      >\n        {children}\n      </ModalCardBase>\n    </div>\n  );\n};\n\nModalCard.defaultProps = {\n  actionsLayout: 'horizontal',\n};\n\nexport default withAdaptivity(withPlatform(ModalCard), {\n  viewWidth: true,\n  viewHeight: true,\n  hasMouse: true,\n});\n"]},"metadata":{},"sourceType":"module"}