{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"mode\", \"removable\", \"removePlaceholder\", \"onRemove\", \"getRootRef\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Removable } from \"../Removable/Removable\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\n\nvar FormLayoutGroup = function FormLayoutGroup(_ref) {\n  var children = _ref.children,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'vertical' : _ref$mode,\n      removable = _ref.removable,\n      _ref$removePlaceholde = _ref.removePlaceholder,\n      removePlaceholder = _ref$removePlaceholde === void 0 ? 'Удалить' : _ref$removePlaceholde,\n      _onRemove = _ref.onRemove,\n      getRootRef = _ref.getRootRef,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var platform = usePlatform();\n\n  var _useAdaptivity = useAdaptivity(),\n      sizeY = _useAdaptivity.sizeY;\n\n  var isRemovable = removable && mode === 'horizontal';\n  var rootEl = useExternRef(getRootRef);\n  return createScopedElement(\"div\", _extends({\n    ref: rootEl,\n    vkuiClass: classNames(getClassName('FormLayoutGroup', platform), \"FormLayoutGroup--sizeY-\".concat(sizeY), \"FormLayoutGroup--\".concat(mode), {\n      'FormLayoutGroup--removable': isRemovable\n    })\n  }, restProps), isRemovable ? createScopedElement(Removable, {\n    align: \"start\",\n    removePlaceholder: removePlaceholder,\n    onRemove: function onRemove(e) {\n      return _onRemove(e, rootEl === null || rootEl === void 0 ? void 0 : rootEl.current);\n    }\n  }, children) : children);\n};\n\nexport default FormLayoutGroup;","map":{"version":3,"sources":["../../../src/components/FormLayoutGroup/FormLayoutGroup.tsx"],"names":["FormLayoutGroup","children","mode","removable","removePlaceholder","onRemove","getRootRef","restProps","platform","usePlatform","sizeY","useAdaptivity","isRemovable","rootEl","useExternRef","classNames","getClassName"],"mappings":";;;;AAEA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,SAAA,YAAA,QAAA,0BAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,SAAA,QAAA,wBAAA;AACA,SAAA,aAAA,QAAA,2BAAA;;AAWA,IAAMA,eAA+C,GAAG,SAAlDA,eAAkD,CAAA,IAAA,EAQ5B;AAAA,MAP1BC,QAO0B,GAAA,IAAA,CAP1BA,QAO0B;AAAA,MAAA,SAAA,GAAA,IAAA,CAN1BC,IAM0B;AAAA,MAN1BA,IAM0B,GAAA,SAAA,KAAA,KAAA,CAAA,GANnB,UAMmB,GAAA,SAAA;AAAA,MAL1BC,SAK0B,GAAA,IAAA,CAL1BA,SAK0B;AAAA,MAAA,qBAAA,GAAA,IAAA,CAJ1BC,iBAI0B;AAAA,MAJ1BA,iBAI0B,GAAA,qBAAA,KAAA,KAAA,CAAA,GAJN,SAIM,GAAA,qBAAA;AAAA,MAH1BC,SAG0B,GAAA,IAAA,CAH1BA,QAG0B;AAAA,MAF1BC,UAE0B,GAAA,IAAA,CAF1BA,UAE0B;AAAA,MADvBC,SACuB,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AAC1B,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;;AACA,MAAA,cAAA,GAAkBE,aAAlB,EAAA;AAAA,MAAQD,KAAR,GAAA,cAAA,CAAA,KAAA;;AACA,MAAME,WAAW,GAAGT,SAAS,IAAID,IAAI,KAArC,YAAA;AACA,MAAMW,MAAM,GAAGC,YAAY,CAA3B,UAA2B,CAA3B;AAEA,SACE,mBAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACE,IAAA,GAAG,EADL,MAAA;AAEE,IAAA,SAAS,EAAEC,UAAU,CACnBC,YAAY,CAAA,iBAAA,EADO,QACP,CADO,EAAA,0BAAA,MAAA,CAAA,KAAA,CAAA,EAAA,oBAAA,MAAA,CAAA,IAAA,CAAA,EAGS;AAC1B,oCAA8BJ;AADJ,KAHT;AAFvB,GAAA,EAAA,SAAA,CAAA,EAUGA,WAAW,GACR,mBAAA,CAAA,SAAA,EAAA;AAAW,IAAA,KAAK,EAAhB,OAAA;AAAyB,IAAA,iBAAiB,EAA1C,iBAAA;AAA+D,IAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,CAAA,EAAA;AAAA,aAAOP,SAAQ,CAAA,CAAA,EAAIQ,MAAJ,KAAA,IAAIA,IAAAA,MAAJ,KAAA,KAAA,CAAIA,GAAJ,KAAA,CAAIA,GAAAA,MAAM,CAAzB,OAAe,CAAf;AAAA;AAAzE,GAAA,EADQ,QACR,CADQ,GAXhB,QACE,CADF;AAdF,CAAA;;AAiCA,eAAA,eAAA","sourcesContent":["import * as React from 'react';\nimport { HasRootRef } from '../../types';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { Removable, RemovableProps } from '../Removable/Removable';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport './FormLayoutGroup.css';\n\nexport interface FormLayoutGroupProps extends React.HTMLAttributes<HTMLDivElement>, RemovableProps, HasRootRef<HTMLDivElement> {\n  mode?: 'vertical' | 'horizontal';\n  /**\n   * Только для режима horizontal. Дает возможность удалить всю группу `FormItem`.\n   */\n  removable?: boolean;\n}\n\nconst FormLayoutGroup: React.FC<FormLayoutGroupProps> = ({\n  children,\n  mode = 'vertical',\n  removable,\n  removePlaceholder = 'Удалить',\n  onRemove,\n  getRootRef,\n  ...restProps\n}: FormLayoutGroupProps) => {\n  const platform = usePlatform();\n  const { sizeY } = useAdaptivity();\n  const isRemovable = removable && mode === 'horizontal';\n  const rootEl = useExternRef(getRootRef);\n\n  return (\n    <div\n      ref={rootEl}\n      vkuiClass={classNames(\n        getClassName('FormLayoutGroup', platform),\n        `FormLayoutGroup--sizeY-${sizeY}`,\n        `FormLayoutGroup--${mode}`, {\n          'FormLayoutGroup--removable': isRemovable,\n        },\n      )}\n      {...restProps}>\n      {isRemovable\n        ? <Removable align=\"start\" removePlaceholder={removePlaceholder} onRemove={(e) => onRemove(e, rootEl?.current)}>{children}</Removable>\n        : children\n      }\n    </div>\n  );\n};\n\nexport default FormLayoutGroup;\n"]},"metadata":{},"sourceType":"module"}