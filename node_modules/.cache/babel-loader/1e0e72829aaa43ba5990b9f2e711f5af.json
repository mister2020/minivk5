{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from 'react';\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { Icon24Spinner, Icon32Spinner, Icon44Spinner, Icon16Spinner } from '@vkontakte/icons';\nimport { usePlatform } from \"../../hooks/usePlatform\";\n\nvar Spinner = function Spinner(_ref) {\n  var size = _ref.size,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var platform = usePlatform();\n  var SpinnerIcon = Icon24Spinner;\n\n  if (size === 'large') {\n    SpinnerIcon = Icon44Spinner;\n  }\n\n  if (size === 'medium') {\n    SpinnerIcon = Icon32Spinner;\n  }\n\n  if (size === 'small') {\n    SpinnerIcon = Icon16Spinner;\n  }\n\n  return createScopedElement(\"span\", _extends({\n    role: \"status\"\n  }, restProps, {\n    vkuiClass: getClassName('Spinner', platform)\n  }), createScopedElement(SpinnerIcon, {\n    \"aria-hidden\": \"true\",\n    vkuiClass: \"Spinner__self\"\n  }));\n};\n\nSpinner.defaultProps = {\n  'size': 'regular',\n  'aria-label': 'Загружается...'\n};\nexport default /*#__PURE__*/React.memo(Spinner);","map":{"version":3,"sources":["../../../src/components/Spinner/Spinner.tsx"],"names":["Spinner","size","restProps","platform","usePlatform","SpinnerIcon","getClassName","React"],"mappings":";;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,aAAA,EAAA,aAAA,EAAA,aAAA,EAAA,aAAA,QAAA,kBAAA;AACA,SAAA,WAAA,QAAA,yBAAA;;AAOA,IAAMA,OAA+B,GAAG,SAAlCA,OAAkC,CAAA,IAAA,EAA0C;AAAA,MAAvCC,IAAuC,GAAA,IAAA,CAAvCA,IAAuC;AAAA,MAA9BC,SAA8B,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AAChF,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AAEA,MAAIC,WAAW,GAAf,aAAA;;AAEA,MAAIJ,IAAI,KAAR,OAAA,EAAsB;AACpBI,IAAAA,WAAW,GAAXA,aAAAA;AACD;;AAED,MAAIJ,IAAI,KAAR,QAAA,EAAuB;AACrBI,IAAAA,WAAW,GAAXA,aAAAA;AACD;;AAED,MAAIJ,IAAI,KAAR,OAAA,EAAsB;AACpBI,IAAAA,WAAW,GAAXA,aAAAA;AACD;;AAED,SACE,mBAAA,CAAA,MAAA,EAAA,QAAA,CAAA;AAAM,IAAA,IAAI,EAAC;AAAX,GAAA,EAAA,SAAA,EAAA;AAAmC,IAAA,SAAS,EAAEC,YAAY,CAAA,SAAA,EAAA,QAAA;AAA1D,GAAA,CAAA,EACE,mBAAA,CAAA,WAAA,EAAA;AAAa,mBAAb,MAAA;AAAgC,IAAA,SAAS,EAAC;AAA1C,GAAA,CADF,CADF;AAjBF,CAAA;;AAwBAN,OAAO,CAAPA,YAAAA,GAAuB;AACrB,UADqB,SAAA;AAErB,gBAAc;AAFO,CAAvBA;AAKA,eAAA,aAAeO,KAAK,CAALA,IAAAA,CAAf,OAAeA,CAAf","sourcesContent":["import * as React from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { Icon24Spinner, Icon32Spinner, Icon44Spinner, Icon16Spinner } from '@vkontakte/icons';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport './Spinner.css';\n\nexport interface SpinnerProps extends React.HTMLAttributes<HTMLSpanElement> {\n  size?: 'small' | 'regular' | 'large' | 'medium';\n}\n\nconst Spinner: React.FC<SpinnerProps> = ({ size, ...restProps }: SpinnerProps) => {\n  const platform = usePlatform();\n\n  let SpinnerIcon = Icon24Spinner;\n\n  if (size === 'large') {\n    SpinnerIcon = Icon44Spinner;\n  }\n\n  if (size === 'medium') {\n    SpinnerIcon = Icon32Spinner;\n  }\n\n  if (size === 'small') {\n    SpinnerIcon = Icon16Spinner;\n  }\n\n  return (\n    <span role=\"status\" {...restProps} vkuiClass={getClassName('Spinner', platform)}>\n      <SpinnerIcon aria-hidden=\"true\" vkuiClass=\"Spinner__self\" />\n    </span>\n  );\n};\n\nSpinner.defaultProps = {\n  'size': 'regular',\n  'aria-label': 'Загружается...',\n};\n\nexport default React.memo(Spinner);\n"]},"metadata":{},"sourceType":"module"}