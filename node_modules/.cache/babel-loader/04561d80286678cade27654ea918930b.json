{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from 'react';\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { ListContext } from \"./ListContext\";\n\nvar List = function List(_ref) {\n  var children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var platform = usePlatform();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isDragging = _React$useState2[0],\n      toggleDrag = _React$useState2[1];\n\n  return createScopedElement(\"div\", _extends({\n    role: \"list\"\n  }, restProps, {\n    vkuiClass: classNames(getClassName('List', platform), {\n      'List--dragging': isDragging\n    })\n  }), createScopedElement(ListContext.Provider, {\n    value: React.useMemo(function () {\n      return {\n        toggleDrag: toggleDrag\n      };\n    }, [])\n  }, children));\n};\n\nexport default List;","map":{"version":3,"sources":["../../../src/components/List/List.tsx"],"names":["List","children","restProps","platform","usePlatform","isDragging","toggleDrag","React","classNames","getClassName"],"mappings":";;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,WAAA,QAAA,eAAA;;AAGA,IAAMA,IAAmE,GAAG,SAAtEA,IAAsE,CAAA,IAAA,EAGhC;AAAA,MAF1CC,QAE0C,GAAA,IAAA,CAF1CA,QAE0C;AAAA,MADvCC,SACuC,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AAC1C,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;;AACA,MAAA,eAAA,GAAiCG,KAAK,CAALA,QAAAA,CAAjC,KAAiCA,CAAjC;AAAA,MAAA,gBAAA,GAAA,cAAA,CAAA,eAAA,EAAA,CAAA,CAAA;AAAA,MAAOF,UAAP,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAAmBC,UAAnB,GAAA,gBAAA,CAAA,CAAA,CAAA;;AAEA,SACE,mBAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACE,IAAA,IAAI,EAAC;AADP,GAAA,EAAA,SAAA,EAAA;AAGE,IAAA,SAAS,EAAEE,UAAU,CAACC,YAAY,CAAA,MAAA,EAAb,QAAa,CAAb,EAAiC;AACpD,wBAAkBJ;AADkC,KAAjC;AAHvB,GAAA,CAAA,EAOE,mBAAA,CAAC,WAAD,CAAA,QAAA,EAAA;AAAsB,IAAA,KAAK,EAAE,KAAK,CAAL,OAAA,CAAc,YAAA;AAAA,aAAO;AAAEC,QAAAA,UAAU,EAAVA;AAAF,OAAP;AAAd,KAAA,EAAA,EAAA;AAA7B,GAAA,EARJ,QAQI,CAPF,CADF;AAPF,CAAA;;AAsBA,eAAA,IAAA","sourcesContent":["import * as React from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { ListContext } from './ListContext';\nimport './List.css';\n\nconst List: React.FunctionComponent<React.HTMLAttributes<HTMLDivElement>> = ({\n  children,\n  ...restProps\n}: React.HTMLAttributes<HTMLDivElement>) => {\n  const platform = usePlatform();\n  const [isDragging, toggleDrag] = React.useState(false);\n\n  return (\n    <div\n      role=\"list\"\n      {...restProps}\n      vkuiClass={classNames(getClassName('List', platform), {\n        'List--dragging': isDragging,\n      })}\n    >\n      <ListContext.Provider value={React.useMemo(() => ({ toggleDrag }), [])}>\n        {children}\n      </ListContext.Provider>\n    </div>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}