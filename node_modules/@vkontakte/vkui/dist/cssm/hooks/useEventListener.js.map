{"version":3,"sources":["../../../src/hooks/useEventListener.ts"],"names":["React","noop","canUseDOM","useIsomorphicLayoutEffect","useEventListener","event","_cb","_options","cbRef","useRef","current","cb","useCallback","e","detach","remove","add","el","options","addEventListener","removeEventListener","useEffect"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT;AACA,SAASC,SAAT;AACA,SAASC,yBAAT;AAaA,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAyCC,GAAzC,EAAkEC,QAAlE,EAAsG;AAC3G,MAAMC,KAAK,GAAGR,KAAK,CAACS,MAAN,CAAaH,GAAb,CAAd;AACAH,EAAAA,yBAAyB,CAAC,YAAM;AAC9BK,IAAAA,KAAK,CAACE,OAAN,GAAgBJ,GAAhB;AACD,GAFwB,EAEtB,CAACA,GAAD,CAFsB,CAAzB;AAGA,MAAMK,EAAE,GAAGX,KAAK,CAACY,WAAN,CAA8B,UAACC,CAAD;AAAA,WAAOL,KAAK,CAACE,OAAN,CAAcG,CAAd,CAAP;AAAA,GAA9B,EAAuD,EAAvD,CAAX;AAEA,MAAMC,MAAM,GAAGd,KAAK,CAACS,MAAN,CAAaR,IAAb,CAAf;AACA,MAAMc,MAAM,GAAGf,KAAK,CAACY,WAAN,CAAkB;AAAA,WAAME,MAAM,CAACJ,OAAP,EAAN;AAAA,GAAlB,EAA0C,EAA1C,CAAf;AACA,MAAMM,GAAG,GAAGhB,KAAK,CAACY,WAAN,CAAkB,UAACK,EAAD,EAAgC;AAC5D,QAAI,CAACf,SAAL,EAAgB;AACd;AACD;;AACDa,IAAAA,MAAM;;AACN,QAAMG,OAAO,qBAAQX,QAAR,CAAb;;AACAU,IAAAA,EAAE,CAACE,gBAAH,CAAoBd,KAApB,EAA2BM,EAA3B,EAA+BO,OAA/B;;AACAJ,IAAAA,MAAM,CAACJ,OAAP,GAAiB,YAAM;AACrBO,MAAAA,EAAE,CAACG,mBAAH,CAAuBf,KAAvB,EAA8BM,EAA9B,EAAkCO,OAAlC;AACAJ,MAAAA,MAAM,CAACJ,OAAP,GAAiBT,IAAjB;AACD,KAHD;AAID,GAXW,EAWT,EAXS,CAAZ;AAYAD,EAAAA,KAAK,CAACqB,SAAN,CAAgB;AAAA,WAAMN,MAAN;AAAA,GAAhB,EAA8B,EAA9B;AAEA,SAAO;AAAEC,IAAAA,GAAG,EAAHA,GAAF;AAAOD,IAAAA,MAAM,EAANA;AAAP,GAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { noop } from '../lib/utils';\nimport { canUseDOM } from '../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\ninterface EventListenerHandle {\n  add(el: HTMLElement | Document): void;\n  remove(): void;\n}\n\nexport function useEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  event: K,\n  _cb: (ev: GlobalEventHandlersEventMap[K]) => any,\n  _options?: AddEventListenerOptions,\n): EventListenerHandle;\nexport function useEventListener(event: string, _cb: (ev: Event) => any, _options?: AddEventListenerOptions): EventListenerHandle;\nexport function useEventListener(event: string, _cb: (ev: Event) => any, _options?: AddEventListenerOptions) {\n  const cbRef = React.useRef(_cb);\n  useIsomorphicLayoutEffect(() => {\n    cbRef.current = _cb;\n  }, [_cb]);\n  const cb = React.useCallback<typeof _cb>((e) => cbRef.current(e), []);\n\n  const detach = React.useRef(noop);\n  const remove = React.useCallback(() => detach.current(), []);\n  const add = React.useCallback((el: HTMLElement | Document) => {\n    if (!canUseDOM) {\n      return;\n    }\n    remove();\n    const options = { ..._options };\n    el.addEventListener(event, cb, options);\n    detach.current = () => {\n      el.removeEventListener(event, cb, options);\n      detach.current = noop;\n    };\n  }, []);\n  React.useEffect(() => remove, []);\n\n  return { add, remove };\n}\n"],"file":"useEventListener.js"}