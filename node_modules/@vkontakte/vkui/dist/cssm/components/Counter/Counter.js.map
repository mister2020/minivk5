{"version":3,"sources":["../../../../src/components/Counter/Counter.tsx"],"names":["React","classNames","getClassName","usePlatform","Caption","Text","VKCOM","hasReactNode","CounterTypography","size","platform","restProps","Counter","props","mode","children","Children","count","defaultProps","memo"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT;AACA,SAASC,YAAT;AACA,SAASC,WAAT;AACA,OAAOC,OAAP;AACA,OAAOC,IAAP;AACA,SAASC,KAAT;AACA,SAASC,YAAT;AAEA;;AAYA,IAAMC,iBAAmD,GAAG,SAAtDA,iBAAsD,OAAsC;AAAA,MAAnCC,IAAmC,QAAnCA,IAAmC;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAhBC,SAAgB;;AAChG,SAAOF,IAAI,KAAK,GAAT,GACH,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAmB,IAAA,MAAM,EAAEC,QAAQ,KAAKJ,KAAb,GAAqB,QAArB,GAAgC;AAA3D,KAA0EK,SAA1E,EADG,GAEH,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAC;AAAb,KAA0BA,SAA1B,EAFJ;AAGD,CAJD;;AAMA,IAAMC,OAA+B,GAAG,SAAlCA,OAAkC,CAACC,KAAD,EAAyB;AAC/D,MAAQC,IAAR,GAA+CD,KAA/C,CAAQC,IAAR;AAAA,MAAcL,IAAd,GAA+CI,KAA/C,CAAcJ,IAAd;AAAA,MAAoBM,QAApB,GAA+CF,KAA/C,CAAoBE,QAApB;AAAA,MAAiCJ,SAAjC,4BAA+CE,KAA/C;;AACA,MAAMH,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,MAAIH,KAAK,CAACgB,QAAN,CAAeC,KAAf,CAAqBF,QAArB,MAAmC,CAAvC,EAA0C;AACxC,WAAO,IAAP;AACD;;AAED,SACE,yCACMJ,SADN;AAEE,IAAA,SAAS,EAAEV,UAAU,CACnBC,YAAY,CAAC,SAAD,EAAYQ,QAAZ,CADO,qBAEPI,IAFO,wBAGLL,IAHK;AAFvB,MAQGF,YAAY,CAACQ,QAAD,CAAZ,IAA0B,oBAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAEL,QAA7B;AAAuC,IAAA,IAAI,EAAED,IAA7C;AAAmD,IAAA,SAAS,EAAC;AAA7D,KAA4EM,QAA5E,CAR7B,CADF;AAYD,CApBD;;AAsBAH,OAAO,CAACM,YAAR,GAAuB;AACrBJ,EAAAA,IAAI,EAAE,WADe;AAErBL,EAAAA,IAAI,EAAE;AAFe,CAAvB;AAKA,4BAAeT,KAAK,CAACmB,IAAN,CAAWP,OAAX,CAAf","sourcesContent":["import * as React from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Caption from '../Typography/Caption/Caption';\nimport Text from '../Typography/Text/Text';\nimport { VKCOM } from '../../lib/platform';\nimport { hasReactNode } from '../../lib/utils';\nimport { HasPlatform } from '../../types';\nimport './Counter.css';\n\nexport interface CounterProps extends React.HTMLAttributes<HTMLSpanElement> {\n  /**\n   * Тип счетчика. При использовании компонента в качестве значения свойства `after` у `Button` эти значения игнорируются\n   */\n  mode?: 'secondary' | 'primary' | 'prominent';\n  size?: 's' | 'm';\n}\n\ntype CounterTypographyProps = Pick<CounterProps, 'size'> & HasPlatform & { Component?: React.ElementType };\n\nconst CounterTypography: React.FC<CounterTypographyProps> = ({ size, platform, ...restProps }) => {\n  return size === 's'\n    ? <Caption level=\"2\" weight={platform === VKCOM ? 'medium' : 'regular'} {...restProps} />\n    : <Text weight=\"medium\" {...restProps} />;\n};\n\nconst Counter: React.FC<CounterProps> = (props: CounterProps) => {\n  const { mode, size, children, ...restProps } = props;\n  const platform = usePlatform();\n\n  if (React.Children.count(children) === 0) {\n    return null;\n  }\n\n  return (\n    <span\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName('Counter', platform),\n        `Counter--${mode}`,\n        `Counter--s-${size}`,\n      )}\n    >\n      {hasReactNode(children) && <CounterTypography platform={platform} size={size} vkuiClass=\"Counter__in\">{children}</CounterTypography>}\n    </span>\n  );\n};\n\nCounter.defaultProps = {\n  mode: 'secondary',\n  size: 'm',\n};\n\nexport default React.memo(Counter);\n"],"file":"Counter.js"}