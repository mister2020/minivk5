{"version":3,"sources":["../../../../src/components/SliderSwitch/SliderSwitchButton.tsx"],"names":["React","Tappable","getClassName","classNames","usePlatform","Text","SliderSwitchButton","props","active","hovered","children","getRootRef","restProps","platform","useState","focus","setFocus","toggleFocus"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP;AACA,SAASC,YAAT;AACA,SAASC,UAAT;AAEA,SAASC,WAAT;AACA,OAAOC,IAAP;AACA;;AAOA,IAAMC,kBAAwD,GAAG,SAA3DA,kBAA2D,CAACC,KAAD,EAAwB;AAAA;;AACvF,MAAQC,MAAR,GAAgED,KAAhE,CAAQC,MAAR;AAAA,MAAgBC,OAAhB,GAAgEF,KAAhE,CAAgBE,OAAhB;AAAA,MAAyBC,QAAzB,GAAgEH,KAAhE,CAAyBG,QAAzB;AAAA,MAAmCC,UAAnC,GAAgEJ,KAAhE,CAAmCI,UAAnC;AAAA,MAAkDC,SAAlD,4BAAgEL,KAAhE;;AACA,MAAMM,QAAQ,GAAGT,WAAW,EAA5B;;AACA,wBAA0BJ,KAAK,CAACc,QAAN,CAAe,KAAf,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBD,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GAFD;;AAIA,SAAO,oBAAC,QAAD,eAAcH,SAAd;AACL,IAAA,SAAS,EACPT,UAAU,CACRD,YAAY,CAAC,sBAAD,EAAyBW,QAAzB,CADJ,kDAGL,8BAHK,EAG4BL,MAH5B,gCAIL,6BAJK,EAI2B,CAACA,MAAD,IAAWC,OAJtC,gCAKL,mCALK,EAKiCD,MAAM,IAAIC,OAL3C,gCAML,6BANK,EAM2BM,KAAK,IAAI,CAACN,OANrC,gBAFP;AAYL,IAAA,SAAS,EAAC,QAZL;AAaL,IAAA,IAAI,EAAC,QAbA;AAcL,IAAA,UAAU,EAAEE,UAdP;AAeL,oBAAcH,MAfT;AAgBL,IAAA,OAAO,EAAES,WAhBJ;AAiBL,IAAA,MAAM,EAAEA,WAjBH;AAkBL,IAAA,QAAQ,EAAE,CAlBL;AAmBL,IAAA,SAAS,EAAE,KAnBN;AAoBL,IAAA,SAAS,EAAC;AApBL,MAsBL,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAC;AAAb,KAAuBP,QAAvB,CAtBK,CAAP;AAwBD,CAjCD;;AAmCA,eAAeJ,kBAAf","sourcesContent":["import * as React from 'react';\nimport Tappable from '../Tappable/Tappable';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { HasRootRef } from '../../types';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Text from '../Typography/Text/Text';\nimport './SliderSwitch.css';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLElement>, HasRootRef<HTMLElement> {\n  active?: boolean;\n  hovered?: boolean;\n}\n\nconst SliderSwitchButton: React.FunctionComponent<ButtonProps> = (props: ButtonProps) => {\n  const { active, hovered, children, getRootRef, ...restProps } = props;\n  const platform = usePlatform();\n  const [focus, setFocus] = React.useState(false);\n\n  const toggleFocus = () => {\n    setFocus(!focus);\n  };\n\n  return <Tappable {...restProps}\n    vkuiClass={\n      classNames(\n        getClassName('SliderSwitch__button', platform),\n        {\n          ['SliderSwitch__button--active']: active,\n          ['SliderSwitch__button--hover']: !active && hovered,\n          ['SliderSwitch__button--activeHover']: active && hovered,\n          ['SliderSwitch__button--focus']: focus && !hovered,\n        },\n      )\n    }\n    Component=\"button\"\n    type=\"button\"\n    getRootRef={getRootRef}\n    aria-pressed={active}\n    onFocus={toggleFocus}\n    onBlur={toggleFocus}\n    tabIndex={0}\n    hasActive={false}\n    hoverMode=\"opacity\"\n  >\n    <Text weight=\"medium\">{children}</Text>\n  </Tappable>;\n};\n\nexport default SliderSwitchButton;\n"],"file":"SliderSwitchButton.js"}