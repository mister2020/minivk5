{"version":3,"sources":["../../../../src/components/Link/Link.tsx"],"names":["getClassName","usePlatform","Tappable","Link","children","restProps","platform","href"],"mappings":";;;;AACA,SAASA,YAAT;AACA,SAASC,WAAT;AACA,OAAOC,QAAP;AACA;;AAIA,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,OAGjB;AAAA,MAFfC,QAEe,QAFfA,QAEe;AAAA,MADZC,SACY;;AACf,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,SACE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAEI,SAAS,CAACE,IAAV,GAAiB,GAAjB,GAAuB;AADpC,KAEMF,SAFN;AAGE,IAAA,SAAS,EAAEL,YAAY,CAAC,MAAD,EAASM,QAAT,CAHzB;AAIE,IAAA,SAAS,EAAE,KAJb;AAKE,IAAA,SAAS,EAAC,SALZ;AAME,IAAA,gBAAgB,EAAC;AANnB,MAQGF,QARH,CADF;AAYD,CAlBD;;AAoBA,eAAeD,IAAf","sourcesContent":["import * as React from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\nimport './Link.css';\n\nexport interface LinkProps extends React.AnchorHTMLAttributes<HTMLElement>, TappableProps {}\n\nconst Link: React.FC<LinkProps> = ({\n  children,\n  ...restProps\n}: LinkProps) => {\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      Component={restProps.href ? 'a' : 'button'}\n      {...restProps}\n      vkuiClass={getClassName('Link', platform)}\n      hasActive={false}\n      hoverMode=\"opacity\"\n      focusVisibleMode=\"outside\"\n    >\n      {children}\n    </Tappable>\n  );\n};\n\nexport default Link;\n"],"file":"Link.js"}