{"version":3,"sources":["../../../src/components/Button/Button.tsx"],"names":["getClassName","classNames","Tappable","Title","Text","Subhead","Caption","usePlatform","SizeType","withAdaptivity","IOS","VKCOM","Spinner","ButtonTypography","props","size","sizeY","platform","restProps","isCompact","COMPACT","Button","mode","stretched","align","children","before","after","getRootRef","Component","loading","onClick","hasIcons","Boolean","href","defaultProps","stopPropagation"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\nimport Title from '../Typography/Title/Title';\nimport Text from '../Typography/Text/Text';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport Caption from '../Typography/Caption/Caption';\nimport { HasAlign } from '../../types';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { AdaptivityProps, SizeType, withAdaptivity } from '../../hoc/withAdaptivity';\nimport { Platform, IOS, VKCOM } from '../../lib/platform';\nimport Spinner from '../Spinner/Spinner';\nimport './Button.css';\n\nexport interface VKUIButtonProps extends HasAlign {\n  mode?: 'primary' | 'secondary' | 'tertiary' | 'outline' | 'commerce' | 'destructive' | 'overlay_primary' | 'overlay_secondary' | 'overlay_outline';\n  size?: 's' | 'm' | 'l';\n  stretched?: boolean;\n  before?: React.ReactNode;\n  after?: React.ReactNode;\n  loading?: boolean;\n}\n\nexport interface ButtonProps extends Omit<TappableProps, 'size'>, VKUIButtonProps {}\n\ninterface ButtonTypographyProps {\n  size: ButtonProps['size'];\n  platform: Platform;\n  sizeY: AdaptivityProps['sizeY'];\n  children?: ButtonProps['children'];\n  Component?: React.ElementType;\n}\n\nconst ButtonTypography: React.FC<ButtonTypographyProps> = (props: ButtonTypographyProps) => {\n  const { size, sizeY, platform, ...restProps } = props;\n  const isCompact = sizeY === SizeType.COMPACT;\n\n  switch (size) {\n    case 'l':\n      if (isCompact) {\n        return <Text weight=\"medium\" {...restProps} />;\n      }\n\n      return <Title level=\"3\" weight=\"medium\" {...restProps} />;\n    case 'm':\n      if (isCompact) {\n        return <Subhead weight={platform === VKCOM ? 'regular' : 'medium'} {...restProps} />;\n      }\n\n      return <Text weight=\"medium\" {...restProps} />;\n    case 's':\n    default:\n      if (platform === IOS) {\n        return <Subhead weight=\"medium\" {...restProps} />;\n      }\n\n      if (platform === VKCOM) {\n        return <Caption level=\"1\" weight=\"regular\" {...restProps} />;\n      }\n\n      if (isCompact) {\n        return <Caption level=\"1\" weight=\"medium\" {...restProps} />;\n      }\n\n      return <Subhead weight=\"medium\" {...restProps} />;\n  }\n};\n\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\n  const platform = usePlatform();\n  const {\n    size,\n    mode,\n    stretched,\n    align,\n    children,\n    before,\n    after,\n    getRootRef,\n    sizeY,\n    Component = 'button',\n    loading,\n    onClick,\n    ...restProps\n  } = props;\n\n  const hasIcons = Boolean(before || after);\n\n  return (\n    <Tappable\n      {...restProps}\n      Component={restProps.href ? 'a' : Component}\n      onClick={loading ? null : onClick}\n      focusVisibleMode=\"outside\"\n      vkuiClass={\n        classNames(\n          getClassName('Button', platform),\n          `Button--sz-${size}`,\n          `Button--lvl-${mode}`,\n          `Button--aln-${align}`,\n          `Button--sizeY-${sizeY}`,\n          {\n            ['Button--stretched']: stretched,\n            ['Button--with-icon']: hasIcons,\n          },\n        )\n      }\n      getRootRef={getRootRef}\n      activeMode=\"opacity\"\n    >\n      {loading && <Spinner size=\"small\" vkuiClass=\"Button__spinner\" />}\n      <span vkuiClass=\"Button__in\">\n        {before && <span vkuiClass=\"Button__before\">{before}</span>}\n        {children && (\n          <ButtonTypography\n            size={size}\n            sizeY={sizeY}\n            platform={platform}\n            vkuiClass=\"Button__content\"\n            Component=\"span\"\n          >\n            {children}\n          </ButtonTypography>\n        )}\n        {after && <span vkuiClass=\"Button__after\">{after}</span>}\n      </span>\n    </Tappable>\n  );\n};\n\nButton.defaultProps = {\n  mode: 'primary',\n  align: 'center',\n  size: 's',\n  stretched: false,\n  stopPropagation: true,\n};\n\nexport default withAdaptivity(Button, {\n  sizeY: true,\n});\n"],"file":"Button.js"}