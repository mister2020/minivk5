{"version":3,"sources":["../../../src/components/CustomSelect/CustomSelect.tsx"],"names":["React","SelectMimicry","debounce","setRef","classNames","CustomScrollView","SizeType","withAdaptivity","withPlatform","CustomSelectOption","getClassName","Input","Icon20Dropdown","Icon24Dropdown","Caption","warnOnce","Spinner","findIndexAfter","options","startIndex","length","findIndex","option","i","disabled","findIndexBefore","endIndex","result","warn","CustomSelect","props","createRef","keyboardInput","state","selectedOptionIndex","inputValue","filterFn","filter","setState","opened","focusedOptionIndex","isValidIndex","scrollToElement","onOpen","resetKeyboardInput","onClose","select","index","item","nativeSelectValue","value","event","Event","bubbles","selectEl","dispatchEvent","close","open","type","nextIndex","beforeIndex","focusOptionByIndex","e","Array","prototype","indexOf","call","currentTarget","parentNode","children","preventDefault","selectFocused","key","fullInput","optionIndex","label","toLowerCase","includes","scrollBoxRef","current","contains","target","isControlledOutside","findSelectedIndex","onChange","onInputChange","process","env","NODE_ENV","areOptionsShown","focusOption","onKeyboardInput","renderOption","hovered","selected","onClick","handleOptionClick","onMouseDown","handleOptionDown","onMouseEnter","handleOptionHover","element","getRef","defaultValue","initialValue","undefined","Number","center","dropdown","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","prevProps","searchable","name","className","getRootRef","popupDirection","sizeY","platform","style","onBlur","onFocus","emptyText","renderDropdown","fetching","restProps","getSelectedItem","defaultDropdownContent","map","resolvedContent","onLabelClick","onInputKeyDown","COMPACT","placeholder","handleKeyDownSelect","handleKeyUp","selectRef","onNativeSelectChange","resetFocusedOption","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport SelectMimicry from '../SelectMimicry/SelectMimicry';\nimport { debounce, setRef } from '../../lib/utils';\nimport { classNames } from '../../lib/classNames';\nimport { NativeSelectProps } from '../NativeSelect/NativeSelect';\nimport CustomScrollView from '../CustomScrollView/CustomScrollView';\nimport { SizeType, withAdaptivity } from '../../hoc/withAdaptivity';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport CustomSelectOption, { CustomSelectOptionProps } from '../CustomSelectOption/CustomSelectOption';\nimport { getClassName } from '../../helpers/getClassName';\nimport { FormFieldProps } from '../FormField/FormField';\nimport { HasPlatform } from '../../types';\nimport Input from '../Input/Input';\nimport { Icon20Dropdown, Icon24Dropdown } from '@vkontakte/icons';\nimport Caption from '../Typography/Caption/Caption';\nimport { warnOnce } from '../../lib/warnOnce';\nimport Spinner from '../Spinner/Spinner';\nimport './CustomSelect.css';\n\nconst findIndexAfter = (options: CustomSelectOptionInterface[], startIndex = -1) => {\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex((option, i) => i > startIndex && !option.disabled);\n};\n\nconst findIndexBefore = (options: CustomSelectOptionInterface[], endIndex: number = options.length) => {\n  let result = -1;\n  if (endIndex <= 0) {\n    return result;\n  }\n  for (let i = endIndex - 1; i >= 0; i--) {\n    let option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n\ntype SelectValue = React.SelectHTMLAttributes<HTMLSelectElement>['value'];\n\nexport interface CustomSelectOptionInterface {\n  value: SelectValue;\n  label: string;\n  disabled?: boolean;\n  [index: string]: any;\n}\n\ninterface CustomSelectState {\n  inputValue?: string;\n  opened?: boolean;\n  focusedOptionIndex?: number;\n  selectedOptionIndex?: number;\n  nativeSelectValue?: SelectValue;\n  options?: CustomSelectOptionInterface[];\n}\n\nexport interface CustomSelectProps extends NativeSelectProps, HasPlatform, FormFieldProps {\n  /**\n   * Если `true`, то при клике на селект в нём появится текстовое поле для поиска по `options`. По умолчанию поиск\n   * производится по `option.label`.\n   */\n  searchable?: boolean;\n  /**\n   * Текст, который будет отображен, если приходит пустой `options`\n   */\n  emptyText?: string;\n  onInputChange?: (e: React.ChangeEvent, options: CustomSelectOptionInterface[]) => void | CustomSelectOptionInterface[];\n  options: Array<{\n    value: SelectValue;\n    label: string;\n    [index: string]: any;\n  }>;\n  /**\n   * Функция для кастомной фильтрации. По-умолчанию поиск производится по option.label.\n   */\n  filterFn?: false | ((value: string, option: CustomSelectOptionInterface) => boolean);\n  popupDirection?: 'top' | 'bottom';\n  /**\n   * Рендер-проп для кастомного рендера опции.\n   * В объекте аргумента приходят [свойства опции](#/CustomSelectOption?id=props)\n   */\n  renderOption?: (props: CustomSelectOptionProps) => React.ReactNode;\n  /**\n   * Рендер-проп для кастомного рендера содержимого дропдауна.\n   * В defaultDropdownContent содержится список опций в виде скроллящегося блока.\n   */\n  renderDropdown?: ({ defaultDropdownContent }: { defaultDropdownContent: React.ReactNode }) => React.ReactNode;\n  /**\n   * Если true, то в дропдауне вместо списка опций рисуется спиннер. При переданных renderDropdown и fetching: true,\n   * \"победит\" renderDropdown\n   */\n  fetching?: boolean;\n  onClose?: VoidFunction;\n  onOpen?: VoidFunction;\n}\n\ntype MouseEventHandler = (event: React.MouseEvent<HTMLElement>) => void;\n\nconst warn = warnOnce('CustomSelect');\n\nclass CustomSelect extends React.Component<CustomSelectProps, CustomSelectState> {\n  static defaultProps: CustomSelectProps = {\n    searchable: false,\n    renderOption({ option, ...props }): React.ReactNode {\n      return (\n        <CustomSelectOption {...props} />\n      );\n    },\n    options: [],\n    emptyText: 'Ничего не найдено',\n    filterFn: (value, option) => option.label.toLowerCase().includes(value.toLowerCase()),\n  };\n\n  public constructor(props: CustomSelectProps) {\n    super(props);\n\n    const { value, defaultValue } = props;\n\n    const initialValue = value !== undefined ? value : defaultValue;\n\n    this.keyboardInput = '';\n\n    this.state = {\n      opened: false,\n      focusedOptionIndex: -1,\n      selectedOptionIndex: this.findSelectedIndex(props.options, initialValue),\n      nativeSelectValue: initialValue,\n      options: props.options,\n      inputValue: '',\n    };\n\n    if (props.value !== undefined) {\n      this.isControlledOutside = true;\n    }\n  }\n\n  public state: CustomSelectState;\n  private keyboardInput: string;\n  private isControlledOutside: boolean;\n  private selectEl: HTMLSelectElement;\n  private readonly scrollBoxRef = React.createRef<HTMLDivElement>();\n\n  private readonly resetKeyboardInput = () => {\n    this.keyboardInput = '';\n  };\n\n  private readonly getSelectedItem = () => {\n    const { selectedOptionIndex, options } = this.state;\n\n    if (!options.length) {\n      return null;\n    }\n\n    return options[selectedOptionIndex];\n  };\n\n  get areOptionsShown() {\n    return this.scrollBoxRef.current !== null;\n  }\n\n  filter = (options: CustomSelectProps['options'], inputValue: string, filterFn: CustomSelectProps['filterFn']) => {\n    return typeof filterFn === 'function' ? options.filter((option) => filterFn(inputValue, option)) : options;\n  };\n\n  findSelectedIndex(options: CustomSelectOptionInterface[], value: SelectValue) {\n    return options.findIndex((item) => {\n      value = typeof item.value === 'number' ? Number(value) : value;\n      return item.value === value;\n    });\n  }\n\n  open = () => {\n    this.setState(({ selectedOptionIndex }) => ({\n      opened: true,\n      focusedOptionIndex: selectedOptionIndex,\n    }), () => {\n      const { selectedOptionIndex } = this.state;\n\n      if (this.isValidIndex(selectedOptionIndex)) {\n        this.scrollToElement(selectedOptionIndex, true);\n      }\n    });\n    typeof this.props.onOpen === 'function' && this.props.onOpen();\n  };\n\n  close = () => {\n    this.resetKeyboardInput();\n\n    this.setState(() => ({\n      inputValue: '',\n      opened: false,\n      focusedOptionIndex: -1,\n      options: this.props.options,\n    }));\n    typeof this.props.onClose === 'function' && this.props.onClose();\n  };\n\n  private isValidIndex(index: number) {\n    return index >= 0 && index < this.state.options.length;\n  }\n\n  selectFocused = () => {\n    const { focusedOptionIndex } = this.state;\n\n    this.select(focusedOptionIndex);\n  };\n\n  select = (index: number) => {\n    if (!this.isValidIndex(index)) {\n      return;\n    }\n\n    const item = this.state.options[index];\n\n    this.setState({\n      nativeSelectValue: item.value,\n    }, () => {\n      const event = new Event('change', { bubbles: true });\n      this.selectEl.dispatchEvent(event);\n    });\n    this.close();\n  };\n\n  onClick = () => {\n    this.state.opened ? this.close() : this.open();\n  };\n\n  onFocus = () => {\n    const event = new Event('focus');\n    this.selectEl.dispatchEvent(event);\n  };\n\n  onBlur = () => {\n    this.close();\n    const event = new Event('blur');\n    this.selectEl.dispatchEvent(event);\n  };\n\n  private scrollToElement(index: number, center = false) {\n    const dropdown = this.scrollBoxRef.current;\n    const item = dropdown ? (dropdown.children[index] as HTMLElement) : null;\n\n    if (!item) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }\n\n  focusOptionByIndex = (index: number) => {\n    if (index < 0 || index > this.state.options.length - 1) {\n      return;\n    }\n\n    const option = this.state.options[index];\n\n    if (option.disabled) {\n      return;\n    }\n\n    this.scrollToElement(index);\n\n    this.setState(() => ({\n      focusedOptionIndex: index,\n    }));\n  };\n\n  focusOption = (type: 'next' | 'prev') => {\n    const { focusedOptionIndex } = this.state;\n    let index = focusedOptionIndex;\n\n    if (type === 'next') {\n      const nextIndex = findIndexAfter(this.state.options, index);\n      index = nextIndex === -1 ? findIndexAfter(this.state.options) : nextIndex; // Следующий за index или первый валидный до index\n    } else if (type === 'prev') {\n      const beforeIndex = findIndexBefore(this.state.options, index);\n      index = beforeIndex === -1 ? findIndexBefore(this.state.options) : beforeIndex; // Предшествующий index или последний валидный после index\n    }\n\n    this.focusOptionByIndex(index);\n  };\n\n  handleOptionHover: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n    this.focusOptionByIndex(Array.prototype.indexOf.call(e.currentTarget.parentNode.children, e.currentTarget));\n  };\n\n  handleOptionDown: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n  };\n\n  handleOptionClick: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n    const index = Array.prototype.indexOf.call(e.currentTarget.parentNode.children, e.currentTarget);\n    const option = this.state.options[index];\n\n    if (option && !option.disabled) {\n      this.selectFocused();\n    }\n  };\n\n  resetFocusedOption = () => {\n    this.setState({ focusedOptionIndex: -1 });\n  };\n\n  onKeyboardInput = (key: string) => {\n    const fullInput = this.keyboardInput + key;\n\n    const optionIndex = this.state.options.findIndex((option) => {\n      return option.label.toLowerCase().includes(fullInput);\n    });\n\n    if (optionIndex > -1) {\n      this.focusOptionByIndex(optionIndex);\n    }\n\n    this.keyboardInput = fullInput;\n  };\n\n  /**\n   * Нужен для правильного поведения обработчика onClick на select. Фильтрует клики, которые были сделаны по\n   * выпадающему списку.\n   */\n  onLabelClick = (e: React.MouseEvent<HTMLLabelElement>) => {\n    if (this.scrollBoxRef.current?.contains(e.target as Node)) {\n      e.preventDefault();\n    }\n  };\n\n  onNativeSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const value = e.currentTarget.value;\n    if (!this.isControlledOutside) {\n      this.setState({\n        selectedOptionIndex: this.findSelectedIndex(this.state.options, value),\n      });\n    }\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  };\n\n  onInputChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    if (this.props.onInputChange) {\n      const options = this.props.onInputChange(e, this.props.options);\n      if (options) {\n        if (process.env.NODE_ENV === 'development') {\n          warn('This filtration method is deprecated. Return value of onInputChange will' +\n            ' be ignored in v5.0.0. For custom filtration please update props.options by yourself or use filterFn property');\n        }\n        this.setState({\n          options,\n          selectedOptionIndex: this.findSelectedIndex(options, this.state.nativeSelectValue),\n          inputValue: e.target.value,\n        });\n      } else {\n        this.setState({ inputValue: e.target.value });\n      }\n    } else {\n      const options = this.filter(this.props.options, e.target.value, this.props.filterFn);\n      this.setState({\n        options,\n        selectedOptionIndex: this.findSelectedIndex(options, this.state.nativeSelectValue),\n        inputValue: e.target.value,\n      });\n    }\n  };\n\n  onInputKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (event) => {\n    ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) && this.areOptionsShown && event.preventDefault();\n\n    switch (event.key) {\n      case 'ArrowUp':\n        this.areOptionsShown && this.focusOption('prev');\n        break;\n      case 'ArrowDown':\n        this.areOptionsShown && this.focusOption('next');\n        break;\n      case 'Escape':\n        this.close();\n        break;\n      case 'Enter':\n        this.areOptionsShown && this.selectFocused();\n        break;\n    }\n  };\n\n  handleKeyDownSelect = (event: React.KeyboardEvent) => {\n    const { opened } = this.state;\n\n    if (event.key.length === 1 && event.key !== ' ') {\n      this.onKeyboardInput(event.key);\n      return;\n    }\n\n    ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) && this.areOptionsShown && event.preventDefault();\n\n    switch (event.key) {\n      case 'ArrowUp':\n        if (opened) {\n          this.areOptionsShown && this.focusOption('prev');\n        } else {\n          this.open();\n        }\n        break;\n      case 'ArrowDown':\n        if (opened) {\n          this.areOptionsShown && this.focusOption('next');\n        } else {\n          this.open();\n        }\n        break;\n      case 'Escape':\n        this.close();\n        break;\n      case 'Enter':\n      case 'Spacebar':\n      case ' ':\n        if (opened) {\n          this.areOptionsShown && this.selectFocused();\n        } else {\n          this.open();\n        }\n        break;\n    }\n  };\n\n  handleKeyUp = debounce(this.resetKeyboardInput, 1000);\n\n  componentDidUpdate(prevProps: CustomSelectProps) {\n    if (prevProps.value !== this.props.value || prevProps.options !== this.props.options) {\n      this.isControlledOutside = this.props.value !== undefined;\n      const value = this.props.value === undefined ? this.state.nativeSelectValue : this.props.value;\n      const options = this.props.searchable ? this.filter(this.props.options, this.state.inputValue, this.props.filterFn) : this.props.options;\n      this.setState({\n        nativeSelectValue: value,\n        selectedOptionIndex: this.findSelectedIndex(options, value),\n        options,\n      });\n    }\n  }\n\n  renderOption = (option: CustomSelectOptionInterface, index: number) => {\n    const { focusedOptionIndex, selectedOptionIndex } = this.state;\n    const { renderOption } = this.props;\n    const hovered = index === focusedOptionIndex;\n    const selected = index === selectedOptionIndex;\n\n    return (\n      <React.Fragment key={`${option.value}`}>\n        {renderOption({\n          option,\n          hovered,\n          children: option.label,\n          selected,\n          disabled: option.disabled,\n          onClick: this.handleOptionClick,\n          onMouseDown: this.handleOptionDown,\n          onMouseEnter: this.handleOptionHover,\n        })}\n      </React.Fragment>\n    );\n  };\n\n  selectRef = (element: HTMLSelectElement) => {\n    this.selectEl = element;\n    setRef(element, this.props.getRef);\n  };\n\n  render() {\n    const { opened, nativeSelectValue } = this.state;\n    const {\n      searchable,\n      name,\n      className,\n      getRef,\n      getRootRef,\n      popupDirection,\n      options,\n      sizeY,\n      platform,\n      style,\n      onChange,\n      onBlur,\n      onFocus,\n      onClick,\n      renderOption,\n      children,\n      emptyText,\n      onInputChange,\n      filterFn,\n      renderDropdown,\n      onOpen,\n      onClose,\n      fetching,\n      ...restProps\n    } = this.props;\n    const selected = this.getSelectedItem();\n    const label = selected ? selected.label : undefined;\n\n    const defaultDropdownContent = (\n      <CustomScrollView boxRef={this.scrollBoxRef}>\n        {this.state.options.map(this.renderOption)}\n        {this.state.options.length === 0 &&\n        <Caption level=\"1\" weight=\"regular\" vkuiClass=\"CustomSelect__empty\">\n          {this.props.emptyText}\n        </Caption>\n        }\n      </CustomScrollView>\n    );\n\n    let resolvedContent;\n\n    if (typeof renderDropdown === 'function') {\n      resolvedContent = renderDropdown({ defaultDropdownContent });\n    } else if (fetching) {\n      resolvedContent = (\n        <div vkuiClass=\"CustomSelect__fetching\">\n          <Spinner size=\"small\" />\n        </div>\n      );\n    } else {\n      resolvedContent = defaultDropdownContent;\n    }\n\n    return (\n      <label\n        vkuiClass={getClassName('CustomSelect', platform)}\n        className={className}\n        style={style}\n        ref={getRootRef}\n        onClick={this.onLabelClick}\n      >\n        {opened && searchable ?\n          <Input\n            {...restProps}\n            autoFocus\n            onBlur={this.onBlur}\n            vkuiClass={classNames({\n              'CustomSelect__open': opened,\n              'CustomSelect__open--popupDirectionTop': popupDirection === 'top',\n            })}\n            value={this.state.inputValue}\n            onKeyDown={this.onInputKeyDown}\n            onChange={this.onInputChange}\n            // TODO Ожидается, что клик поймает нативный select, но его перехвает Input. К сожалению, это приводит конфликтам типизации.\n            // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n            // @ts-ignore\n            onClick={onClick}\n            after={sizeY === SizeType.COMPACT ? <Icon20Dropdown /> : <Icon24Dropdown />}\n            placeholder={restProps.placeholder}\n          /> :\n          <SelectMimicry\n            {...restProps}\n            aria-hidden={true}\n            onClick={this.onClick}\n            onKeyDown={this.handleKeyDownSelect}\n            onKeyUp={this.handleKeyUp}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            vkuiClass={classNames({\n              'CustomSelect__open': opened,\n              'CustomSelect__open--popupDirectionTop': popupDirection === 'top',\n            })}\n          >\n            {label}\n          </SelectMimicry>\n        }\n        <select\n          ref={this.selectRef}\n          name={name}\n          onChange={this.onNativeSelectChange}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onClick={onClick}\n          value={nativeSelectValue}\n          aria-hidden={true}\n          vkuiClass=\"CustomSelect__control\"\n        >\n          {options.map((item) => <option key={`${item.value}`} value={item.value} />)}\n        </select>\n        {opened &&\n          <div\n            vkuiClass={classNames('CustomSelect__options', `CustomSelect__options--sizeY-${sizeY}`, {\n              'CustomSelect__options--popupDirectionTop': popupDirection === 'top',\n            })}\n            onMouseLeave={this.resetFocusedOption}\n          >\n            {resolvedContent}\n          </div>\n        }\n      </label>\n    );\n  }\n}\n\nexport default withPlatform(withAdaptivity(CustomSelect, {\n  sizeY: true,\n}));\n"],"file":"CustomSelect.js"}