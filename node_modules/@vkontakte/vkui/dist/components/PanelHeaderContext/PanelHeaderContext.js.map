{"version":3,"sources":["../../../src/components/PanelHeaderContext/PanelHeaderContext.tsx"],"names":["React","FixedLayout","classNames","getClassName","ViewWidth","useAdaptivity","useDOM","useIsomorphicLayoutEffect","useGlobalEventListener","useTimeout","usePlatform","PanelHeaderContext","children","onClose","opened","restProps","document","platform","useState","closing","setClosing","viewWidth","isDesktop","SMALL_TABLET","elementRef","useRef","event","current","contains","target","onAnimationEnd","animationFallback","useEffect","set","clear"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,WAAP;AACA,SAASC,UAAT;AACA,SAASC,YAAT;AACA,SAASC,SAAT;AACA,SAASC,aAAT;AACA,SAASC,MAAT;AACA,SAASC,yBAAT;AACA,SAASC,sBAAT;AACA,SAASC,UAAT;AACA,SAASC,WAAT;AAQA,OAAO,IAAMC,kBAAqD,GAAG,SAAxDA,kBAAwD,OAK/D;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,yBAFJC,MAEI;AAAA,MAFJA,MAEI,4BAFK,KAEL;AAAA,MADDC,SACC;;AACJ,gBAAqBT,MAAM,EAA3B;AAAA,MAAQU,QAAR,WAAQA,QAAR;;AACA,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AACA,wBAA8BV,KAAK,CAACkB,QAAN,CAAe,KAAf,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,uBAAsBf,aAAa,EAAnC;AAAA,MAAQgB,SAAR,kBAAQA,SAAR;;AACA,MAAMC,SAAS,GAAGD,SAAS,IAAIjB,SAAS,CAACmB,YAAzC;AACA,MAAMC,UAAU,GAAGxB,KAAK,CAACyB,MAAN,EAAnB,CANI,CAQJ;;AACAlB,EAAAA,yBAAyB,CAAC,YAAM;AAC9B,KAACO,MAAD,IAAWM,UAAU,CAAC,IAAD,CAArB;AACD,GAFwB,EAEtB,CAACN,MAAD,CAFsB,CAAzB,CATI,CAaJ;;AACAN,EAAAA,sBAAsB,CAACQ,QAAD,EAAW,OAAX,EAAoBM,SAAS,IAAIR,MAAb,IAAuB,CAACK,OAAxB,IAAoC,UAACO,KAAD,EAAW;AACvF,QAAIF,UAAU,CAACG,OAAX,IAAsB,CAACH,UAAU,CAACG,OAAX,CAAmBC,QAAnB,CAA4BF,KAAK,CAACG,MAAlC,CAA3B,EAA8E;AAC5EhB,MAAAA,OAAO;AACR;AACF,GAJqB,CAAtB,CAdI,CAoBJ;;AACA,MAAMiB,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WAAMV,UAAU,CAAC,KAAD,CAAhB;AAAA,GAAvB;;AACA,MAAMW,iBAAiB,GAAGtB,UAAU,CAACqB,cAAD,EAAiB,GAAjB,CAApC;AACA9B,EAAAA,KAAK,CAACgC,SAAN,CAAgB;AAAA,WAAMb,OAAO,GAAGY,iBAAiB,CAACE,GAAlB,EAAH,GAA6BF,iBAAiB,CAACG,KAAlB,EAA1C;AAAA,GAAhB,EAAqF,CAACf,OAAD,CAArF;AAEA,SACE,oBAAC,WAAD,eAAiBJ,SAAjB;AAA4B,IAAA,SAAS,EAAEb,UAAU,CAACC,YAAY,CAAC,oBAAD,EAAuBc,QAAvB,CAAb,EAA+C;AAC9F,oCAA8BH,MADgE;AAE9F,qCAA+BK,OAF+D;AAG9F,qCAA+BG;AAH+D,KAA/C,CAAjD;AAII,IAAA,QAAQ,EAAC;AAJb,MAKE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAwC,IAAA,GAAG,EAAEE,UAA7C;AAAyD,IAAA,cAAc,EAAEL,OAAO,GAAGW,cAAH,GAAoB;AAApG,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACG,CAAChB,MAAM,IAAIK,OAAX,KAAuBP,QAD1B,CADF,CALF,EAUG,CAACU,SAAD,KAAeR,MAAM,IAAIK,OAAzB,KAAqC;AAAK,IAAA,OAAO,EAAEN,OAAd;AAAuB,IAAA,SAAS,EAAC;AAAjC,IAVxC,CADF;AAcD,CA5CM","sourcesContent":["import * as React from 'react';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { ViewWidth } from '../AdaptivityProvider/AdaptivityContext';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useDOM } from '../../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport './PanelHeaderContext.css';\n\nexport interface PanelHeaderContextProps extends React.HTMLAttributes<HTMLDivElement> {\n  opened: boolean;\n  onClose: VoidFunction;\n}\n\nexport const PanelHeaderContext: React.FC<PanelHeaderContextProps> = ({\n  children,\n  onClose,\n  opened = false,\n  ...restProps\n}) => {\n  const { document } = useDOM();\n  const platform = usePlatform();\n  const [closing, setClosing] = React.useState(false);\n  const { viewWidth } = useAdaptivity();\n  const isDesktop = viewWidth >= ViewWidth.SMALL_TABLET;\n  const elementRef = React.useRef<HTMLDivElement>();\n\n  // start closing on \"opened\" change\n  useIsomorphicLayoutEffect(() => {\n    !opened && setClosing(true);\n  }, [opened]);\n\n  // start closing on outer click\n  useGlobalEventListener(document, 'click', isDesktop && opened && !closing && ((event) => {\n    if (elementRef.current && !elementRef.current.contains(event.target as Node)) {\n      onClose();\n    }\n  }));\n\n  // fallback onAnimationEnd when animationend not supported\n  const onAnimationEnd = () => setClosing(false);\n  const animationFallback = useTimeout(onAnimationEnd, 200);\n  React.useEffect(() => closing ? animationFallback.set() : animationFallback.clear(), [closing]);\n\n  return (\n    <FixedLayout {...restProps} vkuiClass={classNames(getClassName('PanelHeaderContext', platform), {\n      'PanelHeaderContext--opened': opened,\n      'PanelHeaderContext--closing': closing,\n      'PanelHeaderContext--desktop': isDesktop,\n    })} vertical=\"top\">\n      <div vkuiClass=\"PanelHeaderContext__in\" ref={elementRef} onAnimationEnd={closing ? onAnimationEnd : null}>\n        <div vkuiClass=\"PanelHeaderContext__content\">\n          {(opened || closing) && children}\n        </div>\n      </div>\n      {!isDesktop && (opened || closing) && <div onClick={onClose} vkuiClass=\"PanelHeaderContext__fade\" />}\n    </FixedLayout>\n  );\n};\n"],"file":"PanelHeaderContext.js"}