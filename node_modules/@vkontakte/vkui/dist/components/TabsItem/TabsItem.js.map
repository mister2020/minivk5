{"version":3,"sources":["../../../src/components/TabsItem/TabsItem.tsx"],"names":["React","getClassName","Tappable","classNames","VKCOM","usePlatform","hasReactNode","TabsModeContext","Headline","Subhead","Text","TabsItem","children","selected","after","restProps","platform","mode","useContext","TypographyComponent","defaultProps"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT;AACA,OAAOC,QAAP;AACA,SAASC,UAAT;AACA,SAASC,KAAT;AACA,SAASC,WAAT;AACA,SAASC,YAAT;AACA,SAAoBC,eAApB;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,IAAP;;AAQA,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,OAKrB;AAAA,MAJnBC,QAImB,QAJnBA,QAImB;AAAA,MAHnBC,QAGmB,QAHnBA,QAGmB;AAAA,MAFnBC,KAEmB,QAFnBA,KAEmB;AAAA,MADhBC,SACgB;;AACnB,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,IAAuB,GAAGjB,KAAK,CAACkB,UAAN,CAAiBX,eAAjB,CAAhC;AAEA,MAAIY,mBAAmB,GAAGF,IAAI,KAAK,SAAT,IAAsBA,IAAI,KAAK,WAA/B,GACtBR,OADsB,GAEtBD,QAFJ;;AAIA,MAAIQ,QAAQ,KAAKZ,KAAjB,EAAwB;AACtBe,IAAAA,mBAAmB,GAAGT,IAAtB;AACD;;AAED,SACE,oBAAC,QAAD,eACMK,SADN;AAEE,IAAA,SAAS,EAAEZ,UAAU,CAACF,YAAY,CAAC,UAAD,EAAae,QAAb,CAAb,EAAqC;AAAE,4BAAsBH;AAAxB,KAArC,CAFvB;AAGE,IAAA,SAAS,EAAEI,IAAI,KAAK,WAHtB;AAIE,IAAA,UAAU,EAAC,kBAJb;AAKE,IAAA,gBAAgB,EAAEA,IAAI,KAAK,WAAT,GAAuB,SAAvB,GAAmC;AALvD,MAOE,oBAAC,mBAAD;AAAqB,IAAA,SAAS,EAAC,MAA/B;AAAsC,IAAA,SAAS,EAAC,cAAhD;AAA+D,IAAA,MAAM,EAAC;AAAtE,KAAgFL,QAAhF,CAPF,EAQGN,YAAY,CAACQ,KAAD,CAAZ,IAAuB;AAAK,IAAA,SAAS,EAAC;AAAf,KAAkCA,KAAlC,CAR1B,CADF;AAYD,CA7BD;;AA+BAH,QAAQ,CAACS,YAAT,GAAwB;AACtBP,EAAAA,QAAQ,EAAE;AADY,CAAxB;AAIA,eAAeF,QAAf","sourcesContent":["import * as React from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport Tappable from '../Tappable/Tappable';\nimport { classNames } from '../../lib/classNames';\nimport { VKCOM } from '../../lib/platform';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { hasReactNode } from '../../lib/utils';\nimport { TabsProps, TabsModeContext } from '../Tabs/Tabs';\nimport Headline from '../Typography/Headline/Headline';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport Text from '../Typography/Text/Text';\nimport './TabsItem.css';\n\nexport interface TabsItemProps extends React.HTMLAttributes<HTMLElement> {\n  after?: React.ReactNode;\n  selected?: boolean;\n}\n\nconst TabsItem: React.FC<TabsItemProps> = ({\n  children,\n  selected,\n  after,\n  ...restProps\n}: TabsItemProps) => {\n  const platform = usePlatform();\n  const mode: TabsProps['mode'] = React.useContext(TabsModeContext);\n\n  let TypographyComponent = mode === 'buttons' || mode === 'segmented'\n    ? Subhead\n    : Headline;\n\n  if (platform === VKCOM) {\n    TypographyComponent = Text;\n  }\n\n  return (\n    <Tappable\n      {...restProps}\n      vkuiClass={classNames(getClassName('TabsItem', platform), { 'TabsItem--selected': selected })}\n      hasActive={mode === 'segmented'}\n      activeMode=\"TabsItem--active\"\n      focusVisibleMode={mode === 'segmented' ? 'outside' : 'inside'}\n    >\n      <TypographyComponent Component=\"span\" vkuiClass=\"TabsItem__in\" weight=\"medium\">{children}</TypographyComponent>\n      {hasReactNode(after) && <div vkuiClass=\"TabsItem__after\">{after}</div>}\n    </Tappable>\n  );\n};\n\nTabsItem.defaultProps = {\n  selected: false,\n};\n\nexport default TabsItem;\n"],"file":"TabsItem.js"}