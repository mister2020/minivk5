{"version":3,"sources":["../../../src/hooks/useEventListener.ts"],"names":["useEventListener","event","_cb","_options","cbRef","React","useRef","current","cb","useCallback","e","detach","noop","remove","add","el","canUseDOM","options","addEventListener","removeEventListener","useEffect"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAaO,SAASA,gBAAT,CAA0BC,KAA1B,EAAyCC,GAAzC,EAAkEC,QAAlE,EAAsG;AAC3G,MAAMC,KAAK,GAAGC,KAAK,CAACC,MAAN,CAAaJ,GAAb,CAAd;AACA,4DAA0B,YAAM;AAC9BE,IAAAA,KAAK,CAACG,OAAN,GAAgBL,GAAhB;AACD,GAFD,EAEG,CAACA,GAAD,CAFH;AAGA,MAAMM,EAAE,GAAGH,KAAK,CAACI,WAAN,CAA8B,UAACC,CAAD;AAAA,WAAON,KAAK,CAACG,OAAN,CAAcG,CAAd,CAAP;AAAA,GAA9B,EAAuD,EAAvD,CAAX;AAEA,MAAMC,MAAM,GAAGN,KAAK,CAACC,MAAN,CAAaM,WAAb,CAAf;AACA,MAAMC,MAAM,GAAGR,KAAK,CAACI,WAAN,CAAkB;AAAA,WAAME,MAAM,CAACJ,OAAP,EAAN;AAAA,GAAlB,EAA0C,EAA1C,CAAf;AACA,MAAMO,GAAG,GAAGT,KAAK,CAACI,WAAN,CAAkB,UAACM,EAAD,EAAgC;AAC5D,QAAI,CAACC,cAAL,EAAgB;AACd;AACD;;AACDH,IAAAA,MAAM;AACN,QAAMI,OAAO,mCAAQd,QAAR,CAAb;AACAY,IAAAA,EAAE,CAACG,gBAAH,CAAoBjB,KAApB,EAA2BO,EAA3B,EAA+BS,OAA/B;;AACAN,IAAAA,MAAM,CAACJ,OAAP,GAAiB,YAAM;AACrBQ,MAAAA,EAAE,CAACI,mBAAH,CAAuBlB,KAAvB,EAA8BO,EAA9B,EAAkCS,OAAlC;AACAN,MAAAA,MAAM,CAACJ,OAAP,GAAiBK,WAAjB;AACD,KAHD;AAID,GAXW,EAWT,EAXS,CAAZ;AAYAP,EAAAA,KAAK,CAACe,SAAN,CAAgB;AAAA,WAAMP,MAAN;AAAA,GAAhB,EAA8B,EAA9B;AAEA,SAAO;AAAEC,IAAAA,GAAG,EAAHA,GAAF;AAAOD,IAAAA,MAAM,EAANA;AAAP,GAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { noop } from '../lib/utils';\nimport { canUseDOM } from '../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\ninterface EventListenerHandle {\n  add(el: HTMLElement | Document): void;\n  remove(): void;\n}\n\nexport function useEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  event: K,\n  _cb: (ev: GlobalEventHandlersEventMap[K]) => any,\n  _options?: AddEventListenerOptions,\n): EventListenerHandle;\nexport function useEventListener(event: string, _cb: (ev: Event) => any, _options?: AddEventListenerOptions): EventListenerHandle;\nexport function useEventListener(event: string, _cb: (ev: Event) => any, _options?: AddEventListenerOptions) {\n  const cbRef = React.useRef(_cb);\n  useIsomorphicLayoutEffect(() => {\n    cbRef.current = _cb;\n  }, [_cb]);\n  const cb = React.useCallback<typeof _cb>((e) => cbRef.current(e), []);\n\n  const detach = React.useRef(noop);\n  const remove = React.useCallback(() => detach.current(), []);\n  const add = React.useCallback((el: HTMLElement | Document) => {\n    if (!canUseDOM) {\n      return;\n    }\n    remove();\n    const options = { ..._options };\n    el.addEventListener(event, cb, options);\n    detach.current = () => {\n      el.removeEventListener(event, cb, options);\n      detach.current = noop;\n    };\n  }, []);\n  React.useEffect(() => remove, []);\n\n  return { add, remove };\n}\n"],"file":"useEventListener.js"}