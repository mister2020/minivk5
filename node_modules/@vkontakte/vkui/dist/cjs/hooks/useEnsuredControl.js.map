{"version":3,"sources":["../../../src/hooks/useEnsuredControl.ts"],"names":["useEnsuredControl","props","options","isControlled","hasOwnProperty","React","useState","defaultValue","localValue","setLocalValue","onChange","useCallback","e","target","value"],"mappings":";;;;;;;;;;;;;AAAA;;AAEO,SAASA,iBAAT,CACLC,KADK,EAELC,OAFK,EAGe;AACpB,MAAMC,YAAY,GAAGF,KAAK,CAACG,cAAN,CAAqB,OAArB,CAArB;;AACA,wBAAoCC,KAAK,CAACC,QAAN,CAAeJ,OAAO,CAACK,YAAvB,CAApC;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,QAAQ,GAAGL,KAAK,CAACM,WAAN,CAAkB,UAACC,CAAD,EAAO;AACxC,KAACT,YAAD,IAAiBM,aAAa,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAA9B;AACAb,IAAAA,KAAK,CAACS,QAAN,IAAkBT,KAAK,CAACS,QAAN,CAAeE,CAAf,CAAlB;AACD,GAHgB,EAGd,CAACX,KAAK,CAACS,QAAP,CAHc,CAAjB;AAIA,SAAO,CAACP,YAAY,GAAGF,KAAK,CAACa,KAAT,GAAiBN,UAA9B,EAA0CE,QAA1C,CAAP;AACD","sourcesContent":["import * as React from 'react';\n\nexport function useEnsuredControl<V, E>(\n  props: { value?: V; onChange?: (e: E) => any },\n  options: { defaultValue: V },\n): [V, (e: E) => any] {\n  const isControlled = props.hasOwnProperty('value');\n  const [localValue, setLocalValue] = React.useState(options.defaultValue);\n  const onChange = React.useCallback((e) => {\n    !isControlled && setLocalValue(e.target.value);\n    props.onChange && props.onChange(e);\n  }, [props.onChange]);\n  return [isControlled ? props.value : localValue, onChange];\n}\n"],"file":"useEnsuredControl.js"}