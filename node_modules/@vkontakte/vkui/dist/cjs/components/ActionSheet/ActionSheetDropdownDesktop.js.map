{"version":3,"sources":["../../../../src/components/ActionSheet/ActionSheetDropdownDesktop.tsx"],"names":["warn","ActionSheetDropdownDesktop","children","toggleRef","closing","popupDirection","onClose","restProps","window","document","platform","sizeY","elementRef","React","useRef","useState","left","top","opacity","pointerEvents","dropdownStyles","setDropdownStyles","process","env","NODE_ENV","toggleRect","getBoundingClientRect","elementRect","current","isTop","width","pageXOffset","pageYOffset","height","body","e","dropdownElement","contains","target","stopPropagation"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAWA,IAAMA,IAAI,GAAG,wBAAS,aAAT,CAAb;;AAEO,IAAMC,0BAA2C,GAAG,SAA9CA,0BAA8C,OAOrD;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,cAGI,QAHJA,cAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADDC,SACC;;AACJ,gBAA6B,kBAA7B;AAAA,MAAQC,MAAR,WAAQA,MAAR;AAAA,MAAgBC,QAAhB,WAAgBA,QAAhB;;AACA,MAAMC,QAAQ,GAAG,+BAAjB;;AACA,uBAAkB,oCAAlB;AAAA,MAAQC,KAAR,kBAAQA,KAAR;;AACA,MAAMC,UAAU,GAAGC,KAAK,CAACC,MAAN,EAAnB;;AAEA,wBAA4CD,KAAK,CAACE,QAAN,CAAoC;AAC9EC,IAAAA,IAAI,EAAE,CADwE;AAE9EC,IAAAA,GAAG,EAAE,CAFyE;AAG9EC,IAAAA,OAAO,EAAE,CAHqE;AAI9EC,IAAAA,aAAa,EAAE;AAJ+D,GAApC,CAA5C;AAAA;AAAA,MAAOC,cAAP;AAAA,MAAuBC,iBAAvB;;AAMA,4DAA0B,YAAM;AAC9B,QAAI,CAAClB,SAAL,EAAgB;AACd,UAAImB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CxB,QAAAA,IAAI,CAAC,sBAAD,CAAJ;AACD;;AACD;AACD;;AAED,QAAMyB,UAAU,GAAGtB,SAAS,CAACuB,qBAAV,EAAnB;AACA,QAAMC,WAAW,GAAGf,UAAU,CAACgB,OAAX,CAAmBF,qBAAnB,EAApB;AACA,QAAMG,KAAK,GAAGxB,cAAc,KAAK,KAAnB,IAA4B,OAAOA,cAAP,KAA0B,UAA1B,IAAwCA,cAAc,CAACO,UAAD,CAAd,KAA+B,KAAjH;AAEAS,IAAAA,iBAAiB,CAAC;AAChBL,MAAAA,IAAI,EAAES,UAAU,CAACT,IAAX,GAAkBS,UAAU,CAACK,KAA7B,GAAqCH,WAAW,CAACG,KAAjD,GAAyDtB,MAAM,CAACuB,WADtD;AAEhBd,MAAAA,GAAG,EAAEQ,UAAU,CAACR,GAAX,GAAiBT,MAAM,CAACwB,WAAxB,IAAuCH,KAAK,GAAG,CAACF,WAAW,CAACM,MAAhB,GAAyBR,UAAU,CAACQ,MAAhF;AAFW,KAAD,CAAjB;AAID,GAhBD,EAgBG,CAAC9B,SAAD,CAhBH;AAkBA,sDAAuBM,QAAQ,CAACyB,IAAhC,EAAsC,OAAtC,EAA+C,UAACC,CAAD,EAAO;AACpD,QAAMC,eAAe,GAAGxB,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEgB,OAApC;;AACA,QAAIQ,eAAe,IAAI,CAACA,eAAe,CAACC,QAAhB,CAAyBF,CAAC,CAACG,MAA3B,CAAxB,EAAoE;AAClEhC,MAAAA,OAAO;AACR;AACF,GALD;AAOA,SACE,uEACMC,SADN;AAEE,IAAA,GAAG,EAAEK,UAFP;AAGE,IAAA,OAAO,EAAE,iBAACuB,CAAD;AAAA,aAAOA,CAAC,CAACI,eAAF,EAAP;AAAA,KAHX;AAIE,IAAA,KAAK,EAAEnB,cAJT;AAKE,IAAA,SAAS,EAAE,4BAAW,gCAAa,aAAb,EAA4BV,QAA5B,CAAX,EAAkD,sBAAlD,EAA0E;AACnF,8BAAwBN;AAD2D,KAA1E,+BAEcO,KAFd;AALb,MASGT,QATH,CADF;AAaD,CAzDM","sourcesContent":["import * as React from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { useDOM } from '../../lib/dom';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { ActionSheetProps } from './ActionSheet';\nimport './ActionSheet.css';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  closing: boolean;\n  onClose(): void;\n  popupDirection?: ActionSheetProps['popupDirection'];\n  toggleRef: Element;\n}\n\nconst warn = warnOnce('ActionSheet');\n\nexport const ActionSheetDropdownDesktop: React.FC<Props> = ({\n  children,\n  toggleRef,\n  closing,\n  popupDirection,\n  onClose,\n  ...restProps\n}) => {\n  const { window, document } = useDOM();\n  const platform = usePlatform();\n  const { sizeY } = useAdaptivity();\n  const elementRef = React.useRef<HTMLDivElement>();\n\n  const [dropdownStyles, setDropdownStyles] = React.useState<React.CSSProperties>({\n    left: 0,\n    top: 0,\n    opacity: 0,\n    pointerEvents: 'none',\n  });\n  useIsomorphicLayoutEffect(() => {\n    if (!toggleRef) {\n      if (process.env.NODE_ENV === 'development') {\n        warn('toggleRef not passed');\n      }\n      return;\n    }\n\n    const toggleRect = toggleRef.getBoundingClientRect();\n    const elementRect = elementRef.current.getBoundingClientRect();\n    const isTop = popupDirection === 'top' || typeof popupDirection === 'function' && popupDirection(elementRef) === 'top';\n\n    setDropdownStyles({\n      left: toggleRect.left + toggleRect.width - elementRect.width + window.pageXOffset,\n      top: toggleRect.top + window.pageYOffset + (isTop ? -elementRect.height : toggleRect.height),\n    });\n  }, [toggleRef]);\n\n  useGlobalEventListener(document.body, 'click', (e) => {\n    const dropdownElement = elementRef?.current;\n    if (dropdownElement && !dropdownElement.contains(e.target as Node)) {\n      onClose();\n    }\n  });\n\n  return (\n    <div\n      {...restProps}\n      ref={elementRef}\n      onClick={(e) => e.stopPropagation()}\n      style={dropdownStyles}\n      vkuiClass={classNames(getClassName('ActionSheet', platform), 'ActionSheet--desktop', {\n        'ActionSheet--closing': closing,\n      }, `ActionSheet--sizeY-${sizeY}`)}\n    >\n      {children}\n    </div>\n  );\n};\n"],"file":"ActionSheetDropdownDesktop.js"}