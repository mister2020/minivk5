{"version":3,"sources":["../../../../src/components/ActionSheet/ActionSheet.tsx"],"names":["ActionSheet","children","className","header","text","style","iosCloseItem","restProps","platform","React","useState","closing","setClosing","onClose","_closeAction","setCloseAction","afterClose","undefined","viewWidth","viewHeight","hasMouse","isDesktop","ViewWidth","SMALL_TABLET","ViewHeight","MEDIUM","fallbackTransitionFinish","IOS","useEffect","set","clear","onItemClick","useCallback","action","autoclose","event","persist","contextValue","DropdownComponent","ActionSheetDropdownDesktop","ActionSheetDropdown","defaultProps","popupDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { PopoutWrapper } from '../PopoutWrapper/PopoutWrapper';\nimport { ViewWidth, ViewHeight } from '../../hoc/withAdaptivity';\nimport { IOS } from '../../lib/platform';\nimport { ActionSheetDropdownDesktop } from './ActionSheetDropdownDesktop';\nimport { ActionSheetDropdown } from './ActionSheetDropdown';\nimport { hasReactNode } from '../../lib/utils';\nimport { ActionSheetContext, ItemClickHandler } from './ActionSheetContext';\nimport Caption from '../Typography/Caption/Caption';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useObjectMemo } from '../../hooks/useObjectMemo';\nimport './ActionSheet.css';\n\nexport type PopupDirectionFunction = (elRef: React.RefObject<HTMLDivElement>) => 'top' | 'bottom';\n\nexport interface ActionSheetProps extends React.HTMLAttributes<HTMLDivElement> {\n  header?: React.ReactNode;\n  text?: React.ReactNode;\n  onClose?: VoidFunction;\n  /**\n   * Desktop only\n   */\n  toggleRef: Element;\n  /**\n   * Desktop only\n   */\n  popupDirection?: 'top' | 'bottom' | PopupDirectionFunction;\n  /**\n   * iOS only\n   */\n  iosCloseItem: React.ReactNode;\n}\n\nexport type AnimationEndCallback = (e?: AnimationEvent) => void;\n\nexport const ActionSheet: React.FC<ActionSheetProps> = ({\n  children,\n  className,\n  header,\n  text,\n  style,\n  iosCloseItem,\n  ...restProps\n}) => {\n  const platform = usePlatform();\n  const [closing, setClosing] = React.useState(false);\n  const onClose = () => setClosing(true);\n\n  const [_closeAction, setCloseAction] = React.useState<VoidFunction>();\n  const afterClose = () => {\n    restProps.onClose();\n    _closeAction && _closeAction();\n    setCloseAction(undefined);\n  };\n\n  const { viewWidth, viewHeight, hasMouse } = useAdaptivity();\n  const isDesktop = viewWidth >= ViewWidth.SMALL_TABLET && (hasMouse || viewHeight >= ViewHeight.MEDIUM);\n\n  const fallbackTransitionFinish = useTimeout(afterClose, platform === IOS ? 300 : 200);\n  React.useEffect(() => {\n    if (closing) {\n      if (isDesktop) {\n        afterClose();\n      } else {\n        fallbackTransitionFinish.set();\n      }\n    } else {\n      fallbackTransitionFinish.clear();\n    }\n  }, [closing]);\n\n  const onItemClick = React.useCallback<ItemClickHandler>((action, autoclose) => (event) => {\n    event.persist();\n\n    if (autoclose) {\n      setCloseAction(() => action && action(event));\n      setClosing(true);\n    } else {\n      action && action(event);\n    }\n  }, []);\n  const contextValue = useObjectMemo({ onItemClick, isDesktop });\n\n  const DropdownComponent = isDesktop\n    ? ActionSheetDropdownDesktop\n    : ActionSheetDropdown;\n\n  return (\n    <PopoutWrapper\n      closing={closing}\n      alignY=\"bottom\"\n      className={className}\n      style={style}\n      onClick={!isDesktop ? onClose : null}\n      hasMask={!isDesktop}\n      fixed={!isDesktop}\n    >\n      <ActionSheetContext.Provider value={contextValue}>\n        <DropdownComponent\n          closing={closing}\n          onClose={onClose}\n          onTransitionEnd={closing && !isDesktop ? afterClose : null}\n          {...restProps}\n        >\n          {(hasReactNode(header) || hasReactNode(text)) &&\n            <header vkuiClass=\"ActionSheet__header\">\n              {hasReactNode(header) &&\n                <Caption level=\"1\" weight={platform === IOS ? 'semibold' : 'medium'} vkuiClass=\"ActionSheet__title\">\n                  {header}\n                </Caption>\n              }\n              {hasReactNode(text) && <Caption level=\"1\" weight=\"regular\" vkuiClass=\"ActionSheet__text\">{text}</Caption>}\n            </header>\n          }\n          {children}\n          {platform === IOS && !isDesktop && iosCloseItem}\n        </DropdownComponent>\n      </ActionSheetContext.Provider>\n    </PopoutWrapper>\n  );\n};\n\nActionSheet.defaultProps = {\n  popupDirection: 'bottom',\n};\n"],"file":"ActionSheet.js"}