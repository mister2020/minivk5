{"version":3,"sources":["../../../../src/components/Touch/Touch.tsx"],"names":["events","Touch","e","props","onEnter","onLeave","gesture","startX","startY","startT","Date","isPressed","outputEvent","originalEvent","onStart","onStartX","onStartY","touchEnabled","subscribe","document","isX","isY","shiftX","shiftY","shiftXAbs","Math","abs","shiftYAbs","touches","length","onEnd","willBeX","willBeY","willBeSlidedX","onMoveX","onMove","willBeSlidedY","onMoveY","isSlideX","isSlideY","isSlide","onEndY","onEndX","didSlide","type","unsubscribe","noop","target","tagName","preventDefault","onClickCapture","noSlideClick","stopPropagation","container","getRootRef","canUseDOM","addEventListener","capture","useCapture","passive","removeEventListener","element","listenerParams","Component","window","restProps","onDragStart","postGestureClick","getRef","children","React"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  getSupportedEvents,\n  coordX,\n  coordY,\n  touchEnabled,\n  VKUITouchEvent,\n  VKUITouchEventHander,\n} from '../../lib/touch';\nimport { HasRootRef } from '../../types';\nimport { canUseDOM, DOMProps, withDOM } from '../../lib/dom';\nimport { setRef, noop } from '../../lib/utils';\n\nexport interface TouchProps extends React.AllHTMLAttributes<HTMLElement>, HasRootRef<HTMLElement> {\n  onEnter?(outputEvent: MouseEvent): void;\n  onLeave?(outputEvent: MouseEvent): void;\n  onStart?(outputEvent: TouchEvent): void;\n  onStartX?(outputEvent: TouchEvent): void;\n  onStartY?(outputEvent: TouchEvent): void;\n  onMove?(outputEvent: TouchEvent): void;\n  onMoveX?(outputEvent: TouchEvent): void;\n  onMoveY?(outputEvent: TouchEvent): void;\n  onEnd?(outputEvent: TouchEvent): void;\n  onEndX?(outputEvent: TouchEvent): void;\n  onEndY?(outputEvent: TouchEvent): void;\n  useCapture?: boolean;\n  noSlideClick?: boolean;\n  Component?: React.ElementType;\n}\n\nexport interface Gesture {\n  startX?: number;\n  startY?: number;\n  startT?: Date;\n  isPressed?: boolean;\n  isY?: boolean;\n  isX?: boolean;\n  isSlideX?: boolean;\n  isSlideY?: boolean;\n  isSlide?: boolean;\n  shiftX?: number;\n  shiftY?: number;\n  shiftXAbs?: number;\n  shiftYAbs?: number;\n}\n\nexport interface TouchEvent extends Gesture {\n  originalEvent: VKUITouchEvent;\n}\n\nexport type TouchEventHandler = (e: TouchEvent) => void;\nexport type ClickHandler = (e: React.MouseEvent<HTMLElement>) => void;\nexport type DragHandler = (e: React.DragEvent<HTMLElement>) => void;\n\nconst events = getSupportedEvents();\n\nclass Touch extends React.Component<TouchProps & DOMProps> {\n  didSlide = false;\n  gesture: Partial<Gesture> = {};\n  container: HTMLElement;\n\n  static defaultProps: TouchProps = {\n    Component: 'div',\n    children: '',\n    useCapture: false,\n    noSlideClick: false,\n  };\n\n  get document() {\n    return this.props.document;\n  }\n\n  componentDidMount() {\n    if (canUseDOM) {\n      this.container.addEventListener(events[0], this.onStart, { capture: this.props.useCapture, passive: false });\n      touchEnabled && this.subscribe(this.container);\n\n      this.container.addEventListener('mouseenter', this.onEnter, { capture: this.props.useCapture, passive: true });\n      this.container.addEventListener('mouseleave', this.onLeave, { capture: this.props.useCapture, passive: true });\n    }\n  }\n\n  componentWillUnmount() {\n    this.container.removeEventListener(events[0], this.onStart);\n    this.unsubscribe();\n\n    this.container.removeEventListener('mouseenter', this.onEnter);\n    this.container.removeEventListener('mouseleave', this.onLeave);\n  }\n\n  /**\n   * Обработчик событий mouseenter\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onEnter = (e: MouseEvent) => {\n    if (this.props.onEnter) {\n      this.props.onEnter(e);\n    }\n  };\n\n  /**\n   * Обработчик событий mouseleave\n   *\n   * @param {Object} e Браузерное событие\n   * @param {boolean} simulated флаг, с которым обработчик был вызван симулятивно\n   * @return {void}\n   */\n  onLeave = (e: MouseEvent) => {\n    if (this.props.onLeave) {\n      this.props.onLeave(e);\n    }\n  };\n\n  /**\n   * Обработчик событий touchstart\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onStart: VKUITouchEventHander = (e: VKUITouchEvent) => {\n    this.gesture = {\n      startX: coordX(e),\n      startY: coordY(e),\n      startT: new Date(),\n      isPressed: true,\n    };\n\n    // Вызываем нужные колбеки из props\n    const outputEvent = {\n      ...this.gesture,\n      originalEvent: e,\n    };\n\n    if (this.props.onStart) {\n      this.props.onStart(outputEvent);\n    }\n\n    if (this.props.onStartX) {\n      this.props.onStartX(outputEvent);\n    }\n\n    if (this.props.onStartY) {\n      this.props.onStartY(outputEvent);\n    }\n\n    !touchEnabled && this.subscribe(this.document);\n  };\n\n  /**\n   * Обработчик событий touchmove\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onMove: VKUITouchEventHander = (e: VKUITouchEvent) => {\n    const { isPressed, isX, isY, startX, startY } = this.gesture;\n\n    if (isPressed) {\n      // смещения\n      const shiftX = coordX(e) - startX;\n      const shiftY = coordY(e) - startY;\n\n      // абсолютные значения смещений\n      const shiftXAbs = Math.abs(shiftX);\n      const shiftYAbs = Math.abs(shiftY);\n\n      // Если определяем мультитач, то прерываем жест\n      if (!!e.touches && e.touches.length > 1) {\n        return this.onEnd(e);\n      }\n\n      // если мы ещё не определились\n      if (!isX && !isY) {\n        let willBeX = shiftXAbs >= 5 && shiftXAbs > shiftYAbs;\n        let willBeY = shiftYAbs >= 5 && shiftYAbs > shiftXAbs;\n        let willBeSlidedX = willBeX && !!this.props.onMoveX || !!this.props.onMove;\n        let willBeSlidedY = willBeY && !!this.props.onMoveY || !!this.props.onMove;\n\n        this.gesture.isY = willBeY;\n        this.gesture.isX = willBeX;\n        this.gesture.isSlideX = willBeSlidedX;\n        this.gesture.isSlideY = willBeSlidedY;\n        this.gesture.isSlide = willBeSlidedX || willBeSlidedY;\n      }\n\n      if (this.gesture.isSlide) {\n        this.gesture.shiftX = shiftX;\n        this.gesture.shiftY = shiftY;\n        this.gesture.shiftXAbs = shiftXAbs;\n        this.gesture.shiftYAbs = shiftYAbs;\n\n        // Вызываем нужные колбеки из props\n        const outputEvent: TouchEvent = {\n          ...this.gesture,\n          originalEvent: e,\n        };\n\n        if (this.props.onMove) {\n          this.props.onMove(outputEvent);\n        }\n\n        if (this.gesture.isSlideX && this.props.onMoveX) {\n          this.props.onMoveX(outputEvent);\n        }\n\n        if (this.gesture.isSlideY && this.props.onMoveY) {\n          this.props.onMoveY(outputEvent);\n        }\n      }\n    }\n  };\n\n  /**\n   * Обработчик событий touchend, touchcancel\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onEnd: VKUITouchEventHander = (e: VKUITouchEvent) => {\n    const { isPressed, isSlide, isSlideX, isSlideY } = this.gesture;\n\n    if (isPressed) {\n      // Вызываем нужные колбеки из props\n      const outputEvent: TouchEvent = {\n        ...this.gesture,\n        originalEvent: e,\n      };\n\n      if (this.props.onEnd) {\n        this.props.onEnd(outputEvent);\n      }\n\n      if (isSlideY && this.props.onEndY) {\n        this.props.onEndY(outputEvent);\n      }\n\n      if (isSlideX && this.props.onEndX) {\n        this.props.onEndX(outputEvent);\n      }\n    }\n\n    this.didSlide = isSlide;\n    this.gesture = {};\n\n    // Если это был тач-евент, симулируем отмену hover\n    if (e.type === 'touchend' || e.type === 'touchcancel') {\n      this.onLeave(e);\n    }\n\n    !touchEnabled && this.unsubscribe();\n  };\n\n  subscribe(element: HTMLElement | Document) {\n    this.unsubscribe();\n    const listenerParams = { capture: this.props.useCapture, passive: false };\n    element.addEventListener(events[1], this.onMove, listenerParams);\n    element.addEventListener(events[2], this.onEnd, listenerParams);\n    element.addEventListener(events[3], this.onEnd, listenerParams);\n    this.unsubscribe = () => {\n      // Здесь нужен последний аргумент с такими же параметрами, потому что\n      // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n      // https://github.com/VKCOM/VKUI/issues/444\n      element.removeEventListener(events[1], this.onMove, listenerParams);\n      element.removeEventListener(events[2], this.onEnd, listenerParams);\n      element.removeEventListener(events[3], this.onEnd, listenerParams);\n      this.unsubscribe = noop;\n    };\n  }\n  unsubscribe = noop;\n\n  /**\n   * Обработчик событий dragstart\n   * Отменяет нативное браузерное поведение для вложенных ссылок и изображений\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onDragStart: DragHandler = (e: React.DragEvent<HTMLElement>) => {\n    const target = e.target as HTMLElement;\n    if (target.tagName === 'A' || target.tagName === 'IMG') {\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * Обработчик клика по компоненту\n   * Отменяет переход по вложенной ссылке, если был зафиксирован свайп\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  postGestureClick: ClickHandler = (e) => {\n    const { onClickCapture, noSlideClick } = this.props;\n    if (!this.didSlide) {\n      return onClickCapture && onClickCapture(e);\n    }\n    if ((e.target as HTMLElement).tagName === 'A') {\n      e.preventDefault();\n    }\n    if (noSlideClick) {\n      e.stopPropagation();\n    } else {\n      onClickCapture && onClickCapture(e);\n    }\n    this.didSlide = false;\n  };\n\n  getRef: React.RefCallback<HTMLElement> = (container) => {\n    this.container = container;\n    setRef(container, this.props.getRootRef);\n  };\n\n  render() {\n    const {\n      onStart,\n      onStartX,\n      onStartY,\n      onMove,\n      onMoveX,\n      onMoveY,\n      onLeave,\n      onEnter,\n      onEnd,\n      onEndX,\n      onEndY,\n      useCapture,\n      Component,\n      getRootRef,\n      noSlideClick,\n      window,\n      document,\n      ...restProps\n    } = this.props;\n\n    return (\n      <Component\n        {...restProps}\n        onDragStart={this.onDragStart}\n        onClickCapture={this.postGestureClick}\n        ref={this.getRef}\n      >\n        {this.props.children}\n      </Component>\n    );\n  }\n}\n\nexport default withDOM<TouchProps>(Touch);\n"],"file":"Touch.js"}