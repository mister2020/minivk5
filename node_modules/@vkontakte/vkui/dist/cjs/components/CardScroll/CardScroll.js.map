{"version":3,"sources":["../../../../src/components/CardScroll/CardScroll.tsx"],"names":["CardScroll","children","size","sizeX","restProps","platform","refContainer","React","useRef","gapRef","window","getScrollToLeft","offset","containerWidth","current","offsetWidth","slideIndex","Array","from","findIndex","el","offsetLeft","parseInt","getComputedStyle","marginRight","slide","scrollTo","getScrollToRight","find","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport HorizontalScroll from '../HorizontalScroll/HorizontalScroll';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { useDOM } from '../../lib/dom';\nimport './CardScroll.css';\n\nexport interface CardScrollProps extends React.HTMLAttributes<HTMLDivElement>, AdaptivityProps {\n  size?: 's' | 'm' | 'l';\n}\n\nconst CardScroll: React.FC<CardScrollProps> = ({ children, size, sizeX, ...restProps }: CardScrollProps) => {\n  const platform = usePlatform();\n\n  const refContainer = React.useRef<HTMLDivElement>(null);\n  const gapRef = React.useRef<HTMLDivElement>(null);\n\n  const { window } = useDOM();\n\n  function getScrollToLeft(offset: number): number {\n    const containerWidth = refContainer.current.offsetWidth;\n    const slideIndex = Array\n      .from(refContainer.current.children)\n      .findIndex((el: HTMLElement) => el.offsetLeft + el.offsetWidth + parseInt(window.getComputedStyle(el).marginRight) - offset >= 0);\n\n    if (slideIndex === -1) {\n      return offset;\n    }\n\n    if (slideIndex === 0) {\n      return 0;\n    }\n\n    const slide = refContainer.current.children[slideIndex] as HTMLElement;\n\n    const scrollTo = slide.offsetLeft - (containerWidth - slide.offsetWidth) + gapRef.current.offsetWidth;\n\n    if (scrollTo <= 2 * gapRef.current.offsetWidth) {\n      return 0;\n    }\n\n    return scrollTo;\n  }\n\n  function getScrollToRight(offset: number): number {\n    const containerWidth = refContainer.current.offsetWidth;\n    const slide = Array.from(refContainer.current.children).find((el: HTMLElement) => el.offsetLeft + el.offsetWidth - offset > containerWidth) as HTMLElement;\n\n    if (!slide) {\n      return offset;\n    }\n\n    return slide.offsetLeft - gapRef.current.offsetWidth;\n  }\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName('CardScroll', platform),\n        `CardScroll--${size}`,\n        `CardScroll--sizeX-${sizeX}`,\n      )}\n    >\n      <HorizontalScroll getScrollToLeft={getScrollToLeft} getScrollToRight={getScrollToRight} showArrows={true}>\n        <div vkuiClass=\"CardScroll__in\" ref={refContainer}>\n          <span vkuiClass=\"CardScroll__gap\" ref={gapRef} />\n          {children}\n          <span vkuiClass=\"CardScroll__gap\" />\n        </div>\n      </HorizontalScroll>\n    </div>\n  );\n};\n\nCardScroll.defaultProps = {\n  size: 's',\n};\n\nexport default withAdaptivity(CardScroll, { sizeX: true });\n"],"file":"CardScroll.js"}