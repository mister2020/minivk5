{"version":3,"sources":["../../../../src/components/HorizontalScroll/HorizontalScroll.tsx"],"names":["now","performance","Date","SCROLL_ONE_FRAME_TIME","doScroll","scrollElement","getScrollPosition","animationQueue","onScrollToRightBorder","onScrollEnd","onScrollStart","initialScrollWidth","scrollAnimationDuration","maxLeft","offsetWidth","startLeft","scrollLeft","endLeft","startTime","scroll","time","elapsed","Math","min","value","currentLeft","ceil","max","requestAnimationFrame","shift","length","HorizontalScroll","props","children","getScrollToLeft","getScrollToRight","showArrows","hasMouse","getRef","restProps","React","useState","canScrollLeft","setCanScrollLeft","canScrollRight","setCanScrollRight","isCustomScrollingRef","useRef","scrollerRef","platform","scrollTo","current","push","firstElementChild","scrollWidth","onscroll","useCallback","scrollEvent","useEffect","add","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getClassName } from '../../helpers/getClassName';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport HorizontalScrollArrow from './HorizontalScrollArrow';\nimport { easeInOutSine } from '../../lib/fx';\nimport { useEventListener } from '../../hooks/useEventListener';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { HasRef } from '../../types';\nimport './HorizontalScroll.css';\n\ninterface ScrollContext {\n  scrollElement: HTMLElement | null;\n  scrollAnimationDuration: number;\n  animationQueue: VoidFunction[];\n  getScrollPosition: (currentPosition: number) => number;\n  onScrollToRightBorder: VoidFunction;\n  onScrollEnd: VoidFunction;\n  onScrollStart: VoidFunction;\n  /**\n   * Начальная ширина прокрутки.\n   * В некоторых случаях может отличаться от текущей ширины прокрутки из-за transforms: translate\n   */\n  initialScrollWidth: number;\n}\n\nexport interface HorizontalScrollProps extends\n  React.HTMLAttributes<HTMLDivElement>,\n  AdaptivityProps,\n  HasRef<HTMLDivElement> {\n  /**\n   * Функция для расчета величины прокрутки при клике на левую стрелку.\n   */\n  getScrollToLeft?: (currentPosition: number) => number;\n  /**\n   * Функция для расчета величины прокрутки при клике на правую стрелку.\n   */\n  getScrollToRight?: (currentPosition: number) => number;\n  showArrows?: boolean;\n  scrollAnimationDuration?: number;\n}\n\n/**\n * timing method\n */\nfunction now() {\n  return performance && performance.now ? performance.now() : Date.now();\n}\n\n/**\n * Код анимации скрола, на основе полифила: https://github.com/iamdustan/smoothscroll\n * Константа взята из полифила (468), на дизайн-ревью уточнили до 250\n * @var {number} SCROLL_ONE_FRAME_TIME время анимации скролла\n */\nconst SCROLL_ONE_FRAME_TIME = 250;\n\nfunction doScroll({\n  scrollElement,\n  getScrollPosition,\n  animationQueue,\n  onScrollToRightBorder,\n  onScrollEnd,\n  onScrollStart,\n  initialScrollWidth,\n  scrollAnimationDuration = SCROLL_ONE_FRAME_TIME,\n}: ScrollContext) {\n  if (!scrollElement || !getScrollPosition) {\n    return;\n  }\n\n  /**\n   * максимальное значение сдвига влево\n   */\n  const maxLeft = initialScrollWidth - scrollElement.offsetWidth;\n\n  let startLeft = scrollElement.scrollLeft;\n  let endLeft = getScrollPosition(startLeft);\n\n  onScrollStart();\n\n  if (endLeft >= maxLeft) {\n    onScrollToRightBorder();\n    endLeft = maxLeft;\n  }\n\n  const startTime = now();\n\n  (function scroll() {\n    if (!scrollElement) {\n      onScrollEnd();\n      return;\n    }\n\n    const time = now();\n    const elapsed = Math.min((time - startTime) / scrollAnimationDuration, 1);\n\n    const value = easeInOutSine(elapsed);\n\n    const currentLeft = startLeft + (endLeft - startLeft) * value;\n    scrollElement.scrollLeft = Math.ceil(currentLeft);\n\n    if (scrollElement.scrollLeft !== Math.max(0, endLeft)) {\n      requestAnimationFrame(scroll);\n      return;\n    }\n\n    onScrollEnd();\n    animationQueue.shift();\n    if (animationQueue.length > 0) {\n      animationQueue[0]();\n    }\n  })();\n}\n\nconst HorizontalScroll: React.FC<HorizontalScrollProps> = (props: HorizontalScrollProps) => {\n  const {\n    children,\n    getScrollToLeft,\n    getScrollToRight,\n    showArrows,\n    scrollAnimationDuration,\n    hasMouse,\n    getRef,\n    ...restProps\n  } = props;\n\n  const [canScrollLeft, setCanScrollLeft] = React.useState(false);\n  const [canScrollRight, setCanScrollRight] = React.useState(false);\n\n  const isCustomScrollingRef = React.useRef(false);\n\n  const scrollerRef = useExternRef(getRef);\n\n  const animationQueue = React.useRef<VoidFunction[]>([]);\n\n  const platform = usePlatform();\n\n  function scrollTo(getScrollPosition: (offset: number) => number) {\n    const scrollElement = scrollerRef.current;\n\n    animationQueue.current.push(() => doScroll({\n      scrollElement,\n      getScrollPosition,\n      animationQueue: animationQueue.current,\n      onScrollToRightBorder: () => setCanScrollRight(false),\n      onScrollEnd: () => isCustomScrollingRef.current = false,\n      onScrollStart: () => isCustomScrollingRef.current = true,\n      initialScrollWidth: scrollElement?.firstElementChild?.scrollWidth || 0,\n      scrollAnimationDuration,\n    }));\n    if (animationQueue.current.length === 1) {\n      animationQueue.current[0]();\n    }\n  }\n\n  const onscroll = React.useCallback(() => {\n    if (showArrows && hasMouse && scrollerRef.current && !isCustomScrollingRef.current) {\n      const scrollElement = scrollerRef.current;\n\n      setCanScrollLeft(scrollElement.scrollLeft > 0);\n      setCanScrollRight(scrollElement.scrollLeft + scrollElement.offsetWidth < scrollElement.scrollWidth);\n    }\n  }, [hasMouse]);\n\n  const scrollEvent = useEventListener('scroll', onscroll);\n  React.useEffect(() => scrollEvent.add(scrollerRef.current), []);\n  React.useEffect(onscroll, [scrollerRef, children]);\n\n  return (\n    <div {...restProps} vkuiClass={getClassName('HorizontalScroll', platform)}>\n      {showArrows && hasMouse && canScrollLeft &&\n      <HorizontalScrollArrow\n        direction=\"left\"\n        onClick={() => scrollTo(getScrollToLeft)}\n      />\n      }\n      {showArrows && hasMouse && canScrollRight &&\n      <HorizontalScrollArrow\n        direction=\"right\"\n        onClick={() => scrollTo(getScrollToRight)}\n      />\n      }\n      <div vkuiClass=\"HorizontalScroll__in\" ref={scrollerRef}>\n        <div vkuiClass=\"HorizontalScroll__in-wrapper\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHorizontalScroll.defaultProps = {\n  showArrows: true,\n};\n\nexport default withAdaptivity(HorizontalScroll, {\n  hasMouse: true,\n});\n"],"file":"HorizontalScroll.js"}