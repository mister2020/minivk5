{"version":3,"sources":["../../../../src/components/Counter/Counter.tsx"],"names":["CounterTypography","size","platform","restProps","VKCOM","Counter","props","mode","children","React","Children","count","defaultProps","memo"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;AAcA,IAAMA,iBAAmD,GAAG,SAAtDA,iBAAsD,OAAsC;AAAA,MAAnCC,IAAmC,QAAnCA,IAAmC;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAhBC,SAAgB;AAChG,SAAOF,IAAI,KAAK,GAAT,GACH,qCAAC,gBAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAmB,IAAA,MAAM,EAAEC,QAAQ,KAAKE,eAAb,GAAqB,QAArB,GAAgC;AAA3D,KAA0ED,SAA1E,EADG,GAEH,qCAAC,aAAD;AAAM,IAAA,MAAM,EAAC;AAAb,KAA0BA,SAA1B,EAFJ;AAGD,CAJD;;AAMA,IAAME,OAA+B,GAAG,SAAlCA,OAAkC,CAACC,KAAD,EAAyB;AAC/D,MAAQC,IAAR,GAA+CD,KAA/C,CAAQC,IAAR;AAAA,MAAcN,IAAd,GAA+CK,KAA/C,CAAcL,IAAd;AAAA,MAAoBO,QAApB,GAA+CF,KAA/C,CAAoBE,QAApB;AAAA,MAAiCL,SAAjC,0CAA+CG,KAA/C;AACA,MAAMJ,QAAQ,GAAG,+BAAjB;;AAEA,MAAIO,KAAK,CAACC,QAAN,CAAeC,KAAf,CAAqBH,QAArB,MAAmC,CAAvC,EAA0C;AACxC,WAAO,IAAP;AACD;;AAED,SACE,wEACML,SADN;AAEE,IAAA,SAAS,EAAE,4BACT,gCAAa,SAAb,EAAwBD,QAAxB,CADS,qBAEGK,IAFH,wBAGKN,IAHL;AAFb,MAQG,yBAAaO,QAAb,KAA0B,qCAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAEN,QAA7B;AAAuC,IAAA,IAAI,EAAED,IAA7C;AAAmD,IAAA,SAAS,EAAC;AAA7D,KAA4EO,QAA5E,CAR7B,CADF;AAYD,CApBD;;AAsBAH,OAAO,CAACO,YAAR,GAAuB;AACrBL,EAAAA,IAAI,EAAE,WADe;AAErBN,EAAAA,IAAI,EAAE;AAFe,CAAvB;;4BAKeQ,KAAK,CAACI,IAAN,CAAWR,OAAX,C","sourcesContent":["import * as React from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Caption from '../Typography/Caption/Caption';\nimport Text from '../Typography/Text/Text';\nimport { VKCOM } from '../../lib/platform';\nimport { hasReactNode } from '../../lib/utils';\nimport { HasPlatform } from '../../types';\nimport './Counter.css';\n\nexport interface CounterProps extends React.HTMLAttributes<HTMLSpanElement> {\n  /**\n   * Тип счетчика. При использовании компонента в качестве значения свойства `after` у `Button` эти значения игнорируются\n   */\n  mode?: 'secondary' | 'primary' | 'prominent';\n  size?: 's' | 'm';\n}\n\ntype CounterTypographyProps = Pick<CounterProps, 'size'> & HasPlatform & { Component?: React.ElementType };\n\nconst CounterTypography: React.FC<CounterTypographyProps> = ({ size, platform, ...restProps }) => {\n  return size === 's'\n    ? <Caption level=\"2\" weight={platform === VKCOM ? 'medium' : 'regular'} {...restProps} />\n    : <Text weight=\"medium\" {...restProps} />;\n};\n\nconst Counter: React.FC<CounterProps> = (props: CounterProps) => {\n  const { mode, size, children, ...restProps } = props;\n  const platform = usePlatform();\n\n  if (React.Children.count(children) === 0) {\n    return null;\n  }\n\n  return (\n    <span\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName('Counter', platform),\n        `Counter--${mode}`,\n        `Counter--s-${size}`,\n      )}\n    >\n      {hasReactNode(children) && <CounterTypography platform={platform} size={size} vkuiClass=\"Counter__in\">{children}</CounterTypography>}\n    </span>\n  );\n};\n\nCounter.defaultProps = {\n  mode: 'secondary',\n  size: 'm',\n};\n\nexport default React.memo(Counter);\n"],"file":"Counter.js"}