{"version":3,"sources":["../../../../src/components/SubnavigationButton/SubnavigationButton.tsx"],"names":["SubnavigationButtonTypography","textLevel","restProps","SubnavigationButton","props","platform","size","selected","before","after","expandable","children","defaultProps"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;AAyBA,IAAMA,6BAAoE,GAAG,SAAvEA,6BAAuE,OAA8D;AAAA,MAA3DC,SAA2D,QAA3DA,SAA2D;AAAA,MAA7CC,SAA6C;;AACzI,MAAID,SAAS,KAAK,CAAlB,EAAqB;AACnB,WAAO,qCAAC,gBAAD;AAAS,MAAA,MAAM,EAAC;AAAhB,OAA8BC,SAA9B,EAAP;AACD;;AAED,SACE,qCAAC,gBAAD;AACE,IAAA,KAAK,EAAED,SAAS,KAAK,CAAd,GAAkB,GAAlB,GAAwB,GADjC;AAEE,IAAA,MAAM,EAAC;AAFT,KAGMC,SAHN,EADF;AAOD,CAZD;;AAcO,IAAMC,mBAAuD,GAAG,SAA1DA,mBAA0D,CAACC,KAAD,EAAqC;AAC1G,MAAMC,QAAQ,GAAG,+BAAjB;AACA,MACEC,IADF,GASIF,KATJ,CACEE,IADF;AAAA,MAEEC,QAFF,GASIH,KATJ,CAEEG,QAFF;AAAA,MAGEN,SAHF,GASIG,KATJ,CAGEH,SAHF;AAAA,MAIEO,MAJF,GASIJ,KATJ,CAIEI,MAJF;AAAA,MAKEC,KALF,GASIL,KATJ,CAKEK,KALF;AAAA,MAMEC,UANF,GASIN,KATJ,CAMEM,UANF;AAAA,MAOEC,QAPF,GASIP,KATJ,CAOEO,QAPF;AAAA,MAQKT,SARL,0CASIE,KATJ;AAWA,SACE,qCAAC,iBAAD,6BACMF,SADN;AAEE,IAAA,SAAS,EAAE,KAFb;AAGE,IAAA,gBAAgB,EAAC,SAHnB;AAIE,IAAA,SAAS,EAAE,4BACT,gCAAa,qBAAb,EAAoCG,QAApC,CADS,iCAEeC,IAFf,GAGT;AACE,uCAAiCC;AADnC,KAHS,CAJb;AAWE,kBAAY,iCAAqBI,QAArB;AAXd,MAaE;AAAM,IAAA,SAAS,EAAC;AAAhB,KACG,yBAAaH,MAAb,KAAwB;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA+CA,MAA/C,CAD3B,EAEE,qCAAC,6BAAD;AACE,IAAA,SAAS,EAAEP,SADb;AAEE,IAAA,SAAS,EAAC,4BAFZ;AAGE,IAAA,SAAS,EAAC;AAHZ,KAKGU,QALH,CAFF,EASG,yBAAaF,KAAb,KAAuB;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA8CA,KAA9C,CAT1B,EAUGC,UAAU,IAAI,qCAAC,qBAAD;AAAgB,IAAA,SAAS,EAAC;AAA1B,IAVjB,CAbF,CADF;AA4BD,CAzCM;;;AA2CPP,mBAAmB,CAACS,YAApB,GAAmC;AACjCN,EAAAA,IAAI,EAAE,GAD2B;AAEjCL,EAAAA,SAAS,EAAE;AAFsB,CAAnC","sourcesContent":["import * as React from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { getTitleFromChildren, hasReactNode } from '../../lib/utils';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\nimport { Icon16Dropdown } from '@vkontakte/icons';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Caption from '../Typography/Caption/Caption';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport './SubnavigationButton.css';\n\nexport interface SubnavigationButtonProps extends Omit<TappableProps, 'size'> {\n  size?: 'm' | 'l';\n  selected?: boolean;\n  /**\n   * Размер шрифта. Этим свойством рекомендуется пользоваться, чтобы отрегулировать размер шрифта у кнопок в `<SubnavigationBar mode=\"fixed\" />`\n   */\n  textLevel?: 1 | 2 | 3;\n  /**\n   * Рекомендуется использовать только иконки с размером 24\n   */\n  before?: React.ReactNode;\n  /**\n   * Рекомендуется использовать только `<Counter size=\"s\" />` или `<Badge />`\n   */\n  after?: React.ReactNode;\n  expandable?: boolean;\n}\n\ninterface SubnavButtonTypographyProps extends Pick<SubnavigationButtonProps, 'textLevel'> {\n  Component?: React.ElementType;\n}\n\nconst SubnavigationButtonTypography: React.FC<SubnavButtonTypographyProps> = ({ textLevel, ...restProps }: SubnavButtonTypographyProps) => {\n  if (textLevel === 1) {\n    return <Subhead weight=\"regular\" {...restProps} />;\n  }\n\n  return (\n    <Caption\n      level={textLevel === 2 ? '1' : '2'}\n      weight=\"regular\"\n      {...restProps}\n    />\n  );\n};\n\nexport const SubnavigationButton: React.FC<SubnavigationButtonProps> = (props: SubnavigationButtonProps) => {\n  const platform = usePlatform();\n  const {\n    size,\n    selected,\n    textLevel,\n    before,\n    after,\n    expandable,\n    children,\n    ...restProps\n  } = props;\n\n  return (\n    <Tappable\n      {...restProps}\n      hasActive={false}\n      focusVisibleMode=\"outside\"\n      vkuiClass={classNames(\n        getClassName('SubnavigationButton', platform),\n        `SubnavigationButton--${size}`,\n        {\n          'SubnavigationButton--selected': selected,\n        },\n      )}\n      aria-label={getTitleFromChildren(children)}\n    >\n      <span vkuiClass=\"SubnavigationButton__in\">\n        {hasReactNode(before) && <span vkuiClass=\"SubnavigationButton__before\">{before}</span>}\n        <SubnavigationButtonTypography\n          textLevel={textLevel}\n          vkuiClass=\"SubnavigationButton__label\"\n          Component=\"span\"\n        >\n          {children}\n        </SubnavigationButtonTypography>\n        {hasReactNode(after) && <span vkuiClass=\"SubnavigationButton__after\">{after}</span>}\n        {expandable && <Icon16Dropdown vkuiClass=\"SubnavigationButton__expandableIcon\" />}\n      </span>\n    </Tappable>\n  );\n};\n\nSubnavigationButton.defaultProps = {\n  size: 'm',\n  textLevel: 1,\n};\n"],"file":"SubnavigationButton.js"}