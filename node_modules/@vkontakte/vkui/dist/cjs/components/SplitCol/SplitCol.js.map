{"version":3,"sources":["../../../../src/components/SplitCol/SplitCol.tsx"],"names":["SplitColContext","React","createContext","colRef","animate","SplitCol","props","children","width","maxWidth","minWidth","spaced","fixed","style","restProps","baseRef","useRef","contextValue","useMemo","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;AAQO,IAAMA,eAAe,gBAAGC,KAAK,CAACC,aAAN,CAA0C;AACvEC,EAAAA,MAAM,EAAE,IAD+D;AAEvEC,EAAAA,OAAO,EAAE;AAF8D,CAA1C,CAAxB;;;AAoBA,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,CAACC,KAAD,EAA0B;AACzE,MAAQC,QAAR,GAA6FD,KAA7F,CAAQC,QAAR;AAAA,MAAkBC,KAAlB,GAA6FF,KAA7F,CAAkBE,KAAlB;AAAA,MAAyBC,QAAzB,GAA6FH,KAA7F,CAAyBG,QAAzB;AAAA,MAAmCC,QAAnC,GAA6FJ,KAA7F,CAAmCI,QAAnC;AAAA,MAA6CC,MAA7C,GAA6FL,KAA7F,CAA6CK,MAA7C;AAAA,MAAqDP,OAArD,GAA6FE,KAA7F,CAAqDF,OAArD;AAAA,MAA8DQ,KAA9D,GAA6FN,KAA7F,CAA8DM,KAA9D;AAAA,MAAqEC,KAArE,GAA6FP,KAA7F,CAAqEO,KAArE;AAAA,MAA+EC,SAA/E,0CAA6FR,KAA7F;AACA,MAAMS,OAAO,GAAGd,KAAK,CAACe,MAAN,EAAhB;AAEA,MAAMC,YAAY,GAAGhB,KAAK,CAACiB,OAAN,CAAc,YAAM;AACvC,WAAO;AACLf,MAAAA,MAAM,EAAEY,OADH;AAELX,MAAAA,OAAO,EAAPA;AAFK,KAAP;AAID,GALoB,EAKlB,CAACW,OAAD,EAAUX,OAAV,CALkB,CAArB;AAOA,SACE,uEACMU,SADN;AAEE,IAAA,KAAK,8DACAD,KADA;AAEHL,MAAAA,KAAK,EAAEA,KAFJ;AAGHC,MAAAA,QAAQ,EAAEA,QAHP;AAIHC,MAAAA,QAAQ,EAAEA;AAJP,MAFP;AAQE,IAAA,GAAG,EAAEK,OARP;AASE,IAAA,SAAS,EAAE,4BAAW,UAAX,EAAuB;AAChC,0BAAoBJ,MADY;AAEhC,yBAAmBC;AAFa,KAAvB;AATb,MAcE,qCAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEK;AAAjC,KACGL,KAAK,GAAG;AAAK,IAAA,SAAS,EAAC;AAAf,KAAuCL,QAAvC,CAAH,GAA4DA,QADpE,CAdF,CADF;AAoBD,CA/BM;;;AAiCPF,QAAQ,CAACc,YAAT,GAAwB;AACtBf,EAAAA,OAAO,EAAE;AADa,CAAxB","sourcesContent":["import * as React from 'react';\nimport { classNames } from '../../lib/classNames';\nimport './SplitCol.css';\n\nexport interface SplitColContextProps {\n  colRef: React.RefObject<HTMLDivElement>;\n  animate: boolean;\n}\n\nexport const SplitColContext = React.createContext<SplitColContextProps>({\n  colRef: null,\n  animate: true,\n});\n\nexport interface SplitColProps extends React.HTMLAttributes<HTMLDivElement> {\n  width?: string;\n  maxWidth?: string;\n  minWidth?: string;\n  /**\n   * Если false, то переходы между Panel происходят без анимации\n   */\n  animate?: boolean;\n  /**\n   * Если true, то добавляются боковые отступы фиксированной величины\n   */\n  spaced?: boolean;\n  fixed?: boolean;\n}\n\nexport const SplitCol: React.FC<SplitColProps> = (props: SplitColProps) => {\n  const { children, width, maxWidth, minWidth, spaced, animate, fixed, style, ...restProps } = props;\n  const baseRef = React.useRef<HTMLDivElement>();\n\n  const contextValue = React.useMemo(() => {\n    return {\n      colRef: baseRef,\n      animate,\n    };\n  }, [baseRef, animate]);\n\n  return (\n    <div\n      {...restProps}\n      style={{\n        ...style,\n        width: width,\n        maxWidth: maxWidth,\n        minWidth: minWidth,\n      }}\n      ref={baseRef}\n      vkuiClass={classNames('SplitCol', {\n        'SplitCol--spaced': spaced,\n        'SplitCol--fixed': fixed,\n      })}\n    >\n      <SplitColContext.Provider value={contextValue}>\n        {fixed ? <div vkuiClass=\"SplitCol__fixedInner\">{children}</div> : children}\n      </SplitColContext.Provider>\n    </div>\n  );\n};\n\nSplitCol.defaultProps = {\n  animate: false,\n};\n"],"file":"SplitCol.js"}